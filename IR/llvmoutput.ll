; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.type = type { i64 }
%swift.protocol_conformance_descriptor = type { i32, i32, i32, i32 }
%swift.full_existential_type = type { ptr, %swift.type }
%swift.protocol_requirement = type { i32, i32 }
%swift.type_descriptor = type opaque
%swift.protocol = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%swift.method_descriptor = type { i32, i32 }
%swift.vwtable = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32 }
%swift.type_metadata_record = type { i32 }
%T10BufferView07MutableaB0V = type <{ %T10BufferView0aB5IndexV, %TSi }>
%T10BufferView0aB5IndexV = type <{ %TSV }>
%TSV = type <{ ptr }>
%TSi = type <{ i64 }>
%Ts26DefaultStringInterpolationV = type <{ %TSS }>
%TSS = type <{ %Ts11_StringGutsV }>
%Ts11_StringGutsV = type <{ %Ts13_StringObjectV }>
%Ts13_StringObjectV = type <{ %Ts6UInt64V, ptr }>
%Ts6UInt64V = type <{ i64 }>
%TSr = type <{ %TSq, %TSi }>
%TSq = type <{ [8 x i8] }>
%TSw = type <{ %TSvSg, %TSvSg }>
%TSvSg = type <{ [8 x i8] }>
%swift.metadata_response = type { ptr, i64 }
%swift.opaque = type opaque
%swift.noescape.function = type { ptr, ptr }
%T10BufferView0aB8IteratorV = type <{ %TSV, %TSV }>
%TSn = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame" = type { [32 x i8], ptr }
%"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.Frame" = type { ptr }
%swift.refcounted = type { ptr, i64 }
%"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame" = type { %T10BufferView07MutableaB0V, ptr, ptr, ptr, i64, ptr }
%TSp = type <{ ptr }>
%"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame" = type { %T10BufferView07MutableaB0V, ptr, ptr, ptr, i64, ptr }
%TSn.0 = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame" = type { %T10BufferView07MutableaB0V, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame" = type { %T10BufferView07MutableaB0V, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame" = type { %T10BufferView07MutableaB0V, ptr, ptr, ptr, i64, ptr }
%"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame" = type { [32 x i8], ptr }
%"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame" = type { ptr, ptr, ptr }
%TSq.11 = type <{ [8 x i8], [1 x i8] }>
%TSq.12 = type <{ [8 x i8] }>
%"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame" = type { [32 x i8], ptr }
%"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame" = type { [32 x i8], ptr }
%T10BufferViewAAV = type <{ %T10BufferView0aB5IndexV, %TSi }>
%TSiSg = type <{ [8 x i8], [1 x i8] }>
%TSv = type <{ ptr }>
%TSR.13 = type <{ %TSq.14, %TSi }>
%TSq.14 = type <{ [8 x i8] }>
%TSP = type <{ ptr }>
%TSn.3 = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame" = type { [32 x i8], ptr }
%"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame" = type { [32 x i8], ptr }

@".str.35.BufferView/BufferView+Mutable.swift" = private unnamed_addr constant [36 x i8] c"BufferView/BufferView+Mutable.swift\00"
@".str.19.Precondition failed" = private unnamed_addr constant [20 x i8] c"Precondition failed\00"
@".str.26.Count must not be negative" = private unnamed_addr constant [27 x i8] c"Count must not be negative\00"
@".str.41.baseAddress must be properly aligned for " = private unnamed_addr constant [42 x i8] c"baseAddress must be properly aligned for \00"
@.str.0. = private unnamed_addr constant [1 x i8] zeroinitializer
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@"$sSiN" = external global %swift.type, align 8
@"$sS2iSzsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$s10BufferView0aB5IndexVyxGSLAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.19.Index out of bounds" = private unnamed_addr constant [20 x i8] c"Index out of bounds\00"
@".str.30.Index is unaligned for Element" = private unnamed_addr constant [31 x i8] c"Index is unaligned for Element\00"
@".str.30.Range of indices out of bounds" = private unnamed_addr constant [31 x i8] c"Range of indices out of bounds\00"
@".str.41.Range of indices is unaligned for Element" = private unnamed_addr constant [42 x i8] c"Range of indices is unaligned for Element\00"
@"$sSnyxGSlsSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$s10BufferView0aB5IndexVyxGSxAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sS2iSZsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSZsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.67.selected slice and assigned slice must have the same element count." = private unnamed_addr constant [68 x i8] c"selected slice and assigned slice must have the same element count.\00"
@".str.16.Assertion failed" = private unnamed_addr constant [17 x i8] c"Assertion failed\00"
@"$sytN" = external global %swift.full_existential_type
@".str.57.MutableBufferView.copyMemory source has too many elements" = private unnamed_addr constant [58 x i8] c"MutableBufferView.copyMemory source has too many elements\00"
@"$sSTTL" = external global %swift.protocol_requirement, align 4
@"$s8IteratorSTTl" = external global %swift.protocol_requirement, align 4
@"$sST8IteratorST_StTn" = external global %swift.protocol_requirement, align 4
@".str.65.destination buffer view cannot contain every element from source." = private unnamed_addr constant [66 x i8] c"destination buffer view cannot contain every element from source.\00"
@".str.39.Can't have a prefix of negative length." = private unnamed_addr constant [40 x i8] c"Can't have a prefix of negative length.\00"
@".str.39.Can't have a suffix of negative length." = private unnamed_addr constant [40 x i8] c"Can't have a suffix of negative length.\00"
@".str.41.Can't drop a negative number of elements." = private unnamed_addr constant [42 x i8] c"Can't drop a negative number of elements.\00"
@"$s10BufferView0aB8IteratorVyxGStAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSTAA8IteratorST_St" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAA8IteratorST_StWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSTAA8IteratorST_St", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic x" = linkonce_odr hidden constant <{ [1 x i8], i8 }> <{ [1 x i8] c"x", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB8IteratorVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB8IteratorVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB8IteratorVMn"
@"symbolic _____yxG 10BufferView0aB8IteratorV" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferView0aB8IteratorV", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____ 10BufferView07MutableaB0V" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, i8 }>, ptr @"symbolic _____ 10BufferView07MutableaB0V", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sST" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sST", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@0 = private constant [8 x i8] c"Element\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@1 = private constant [9 x i8] c"Iterator\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView07MutableaB0VyxGSTAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sST" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", i32 0, i32 1) to i64)) to i32), i32 2, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", i32 0, i32 7) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSTMp" = external global %swift.protocol, align 4
@"got.$sSTMp" = private unnamed_addr constant ptr @"$sSTMp"
@"got.$sST8IteratorST_StTn" = private unnamed_addr constant ptr @"$sST8IteratorST_StTn"
@"$s7ElementSTTl" = external global %swift.protocol_requirement, align 4
@"got.$s7ElementSTTl" = private unnamed_addr constant ptr @"$s7ElementSTTl"
@"got.$s8IteratorSTTl" = private unnamed_addr constant ptr @"$s8IteratorSTTl"
@"$sST12makeIterator0B0QzyFTq" = external global %swift.method_descriptor, align 4
@"got.$sST12makeIterator0B0QzyFTq" = private unnamed_addr constant ptr @"$sST12makeIterator0B0QzyFTq"
@"$sST19underestimatedCountSivgTq" = external global %swift.method_descriptor, align 4
@"got.$sST19underestimatedCountSivgTq" = private unnamed_addr constant ptr @"$sST19underestimatedCountSivgTq"
@"$sST31_customContainsEquatableElementySbSg0D0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sST31_customContainsEquatableElementySbSg0D0QzFTq" = private unnamed_addr constant ptr @"$sST31_customContainsEquatableElementySbSg0D0QzFTq"
@"$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" = external global %swift.method_descriptor, align 4
@"got.$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" = private unnamed_addr constant ptr @"$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq"
@"$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" = private unnamed_addr constant ptr @"$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq"
@"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" = external global %swift.method_descriptor, align 4
@"got.$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" = private unnamed_addr constant ptr @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq"
@"$s10BufferView07MutableaB0VyxGSTAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView07MutableaB0VyxGSTAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSTMp" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 9, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST8IteratorST_StTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSTAA8IteratorST_St", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s7ElementSTTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic x", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s8IteratorSTTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferView0aB8IteratorV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST12makeIterator0B0QzyFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST12makeIterator0E0QzyFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST19underestimatedCountSivgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST19underestimatedCountSivgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST31_customContainsEquatableElementySbSg0D0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST31_customContainsEquatableElementySbSg0G0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST22_copyToContiguousArrays0fG0Vy7ElementQzGyFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 20) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 21) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 22) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", i32 0, i32 26) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSlAAST" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASTWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAAST", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSlAA5IndexSl_SL" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAA5IndexSl_SLWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA5IndexSl_SL", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSlAA7IndicesSl_Sl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAA7IndicesSl_SlWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA7IndicesSl_Sl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_Sl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_SlWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_Sl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB5IndexVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB5IndexVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB5IndexVMn"
@"symbolic _____yxG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferView0aB5IndexV", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____yxG 10BufferView07MutableaB0V" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferView07MutableaB0V", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic Sny_____yxGG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ [3 x i8], i8, i32, [4 x i8], i8 }> <{ [3 x i8] c"Sny", i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ [3 x i8], i8, i32, [4 x i8], i8 }>, ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV", i32 0, i32 2) to i64)) to i32), [4 x i8] c"yxGG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSl" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSl", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@2 = private constant [6 x i8] c"Index\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@3 = private constant [12 x i8] c"SubSequence\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@4 = private constant [8 x i8] c"Indices\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView07MutableaB0VyxGSlAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 1) to i64)) to i32), i32 5, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 11) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 12) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", i32 0, i32 13) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSlMp" = external global %swift.protocol, align 4
@"got.$sSlMp" = private unnamed_addr constant ptr @"$sSlMp"
@"$sSlSTTb" = external global %swift.protocol_requirement, align 4
@"got.$sSlSTTb" = private unnamed_addr constant ptr @"$sSlSTTb"
@"$sSl5IndexSl_SLTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl5IndexSl_SLTn" = private unnamed_addr constant ptr @"$sSl5IndexSl_SLTn"
@"$sSl7IndicesSl_SlTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl7IndicesSl_SlTn" = private unnamed_addr constant ptr @"$sSl7IndicesSl_SlTn"
@"$sSl11SubSequenceSl_SlTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl11SubSequenceSl_SlTn" = private unnamed_addr constant ptr @"$sSl11SubSequenceSl_SlTn"
@"$s5IndexSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s5IndexSlTl" = private unnamed_addr constant ptr @"$s5IndexSlTl"
@"$s11SubSequenceSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s11SubSequenceSlTl" = private unnamed_addr constant ptr @"$s11SubSequenceSlTl"
@"$s7IndicesSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s7IndicesSlTl" = private unnamed_addr constant ptr @"$s7IndicesSlTl"
@"$sSl10startIndex0B0QzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl10startIndex0B0QzvgTq" = private unnamed_addr constant ptr @"$sSl10startIndex0B0QzvgTq"
@"$sSl8endIndex0B0QzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl8endIndex0B0QzvgTq" = private unnamed_addr constant ptr @"$sSl8endIndex0B0QzvgTq"
@"$sSly7ElementQz5IndexQzcirTq" = external global %swift.method_descriptor, align 4
@"got.$sSly7ElementQz5IndexQzcirTq" = private unnamed_addr constant ptr @"$sSly7ElementQz5IndexQzcirTq"
@"$sSly11SubSequenceQzSny5IndexQzGcigTq" = external global %swift.method_descriptor, align 4
@"got.$sSly11SubSequenceQzSny5IndexQzGcigTq" = private unnamed_addr constant ptr @"$sSly11SubSequenceQzSny5IndexQzGcigTq"
@"$sSl7indices7IndicesQzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl7indices7IndicesQzvgTq" = private unnamed_addr constant ptr @"$sSl7indices7IndicesQzvgTq"
@"$sSl7isEmptySbvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl7isEmptySbvgTq" = private unnamed_addr constant ptr @"$sSl7isEmptySbvgTq"
@"$sSl5countSivgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5countSivgTq" = private unnamed_addr constant ptr @"$sSl5countSivgTq"
@"$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" = private unnamed_addr constant ptr @"$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq"
@"$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" = private unnamed_addr constant ptr @"$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq"
@"$sSl5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSl5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSl8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSl8distance4from2toSi5IndexQz_AEtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq"
@"$sSl5index5after5IndexQzAD_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index5after5IndexQzAD_tFTq" = private unnamed_addr constant ptr @"$sSl5index5after5IndexQzAD_tFTq"
@"$sSl9formIndex5aftery0B0Qzz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl9formIndex5aftery0B0Qzz_tFTq" = private unnamed_addr constant ptr @"$sSl9formIndex5aftery0B0Qzz_tFTq"
@"$s10BufferView07MutableaB0VyxGSlAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView07MutableaB0VyxGSlAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSlMp" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 24, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSlSTTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAAST", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5IndexSl_SLTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA5IndexSl_SL", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7IndicesSl_SlTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA7IndicesSl_Sl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl11SubSequenceSl_SlTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_Sl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s5IndexSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferView0aB5IndexV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s11SubSequenceSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferView07MutableaB0V", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s7IndicesSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl10startIndex0B0QzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl10startIndex0E0QzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 20) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl8endIndex0B0QzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 21) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl8endIndex0E0QzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 22) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSly7ElementQz5IndexQzcirTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 23) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 24) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSly11SubSequenceQzSny5IndexQzGcigTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 25) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASly11SubSequenceQzSny5IndexQzGcigTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 26) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7indices7IndicesQzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 27) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl7indices7IndicesQzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 28) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7isEmptySbvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 29) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl7isEmptySbvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 30) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5countSivgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 31) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl5countSivgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 32) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 33) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl30_customIndexOfEquatableElementy0E0QzSgSg0H0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 34) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 35) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl34_customLastIndexOfEquatableElementy0F0QzSgSg0I0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 36) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 37) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl5index_8offsetBy5IndexQzAH_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 38) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 39) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 40) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 41) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl8distance4from2toSi5IndexQz_AItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 42) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 43) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyAHGtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 44) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 45) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyAHGtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 46) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 47) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 48) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index5after5IndexQzAD_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 49) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl5index5after5IndexQzAH_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 50) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl9formIndex5aftery0B0Qzz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 51) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAASl9formIndex5aftery0E0Qzz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 52) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", i32 0, i32 56) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSMAASl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASlWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSMAASl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SM" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SMWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SM", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSM" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSM", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView07MutableaB0VyxGSMAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSM" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 1) to i64)) to i32), i32 3, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", i32 0, i32 9) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSMMp" = external global %swift.protocol, align 4
@"got.$sSMMp" = private unnamed_addr constant ptr @"$sSMMp"
@"$sSMSlTb" = external global %swift.protocol_requirement, align 4
@"got.$sSMSlTb" = private unnamed_addr constant ptr @"$sSMSlTb"
@"$sSM11SubSequenceSl_SMTn" = external global %swift.protocol_requirement, align 4
@"got.$sSM11SubSequenceSl_SMTn" = private unnamed_addr constant ptr @"$sSM11SubSequenceSl_SMTn"
@"$sSMy7ElementQz5IndexQzcisTq" = external global %swift.method_descriptor, align 4
@"got.$sSMy7ElementQz5IndexQzcisTq" = private unnamed_addr constant ptr @"$sSMy7ElementQz5IndexQzcisTq"
@"$sSMy7ElementQz5IndexQzciMTq" = external global %swift.method_descriptor, align 4
@"got.$sSMy7ElementQz5IndexQzciMTq" = private unnamed_addr constant ptr @"$sSMy7ElementQz5IndexQzciMTq"
@"$sSMy11SubSequenceQzSny5IndexQzGcisTq" = external global %swift.method_descriptor, align 4
@"got.$sSMy11SubSequenceQzSny5IndexQzGcisTq" = private unnamed_addr constant ptr @"$sSMy11SubSequenceQzSny5IndexQzGcisTq"
@"$sSMy11SubSequenceQzSny5IndexQzGciMTq" = external global %swift.method_descriptor, align 4
@"got.$sSMy11SubSequenceQzSny5IndexQzGciMTq" = private unnamed_addr constant ptr @"$sSMy11SubSequenceQzSny5IndexQzGciMTq"
@"$sSM9partition2by5IndexQzSb7ElementQzKXE_tKFTq" = external global %swift.method_descriptor, align 4
@"got.$sSM9partition2by5IndexQzSb7ElementQzKXE_tKFTq" = private unnamed_addr constant ptr @"$sSM9partition2by5IndexQzSb7ElementQzKXE_tKFTq"
@"$sSM6swapAtyy5IndexQz_ACtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSM6swapAtyy5IndexQz_ACtFTq" = private unnamed_addr constant ptr @"$sSM6swapAtyy5IndexQz_ACtFTq"
@"$sSM42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" = external global %swift.method_descriptor, align 4
@"got.$sSM42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" = private unnamed_addr constant ptr @"$sSM42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTq"
@"$sSM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" = external global %swift.method_descriptor, align 4
@"got.$sSM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" = private unnamed_addr constant ptr @"$sSM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTq"
@"$s10BufferView07MutableaB0VyxGSMAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView07MutableaB0VyxGSMAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMMp" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 10, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMSlTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSMAASl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSM11SubSequenceSl_SMTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SM", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMy7ElementQz5IndexQzcisTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzcisTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMy7ElementQz5IndexQzciMTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMy11SubSequenceQzSny5IndexQzGcisTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGcisTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSMy11SubSequenceQzSny5IndexQzGciMTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSM9partition2by5IndexQzSb7ElementQzKXE_tKFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASM9partition2by5IndexQzSb7ElementQzKXE_tKFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSM6swapAtyy5IndexQz_ACtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASM6swapAtyy5IndexQz_AGtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 20) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSM42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 21) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASM011_withUnsafecA18PointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 22) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 23) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAASM014withContiguousC18StorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 24) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", i32 0, i32 28) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSKAASl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASlWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAASl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSnyxGSKsSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSKAA7IndicesSl_SK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAA7IndicesSl_SKWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAA7IndicesSl_SK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SKWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSK" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSK", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView07MutableaB0VyxGSKAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 1) to i64)) to i32), i32 4, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", i32 0, i32 11) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSKMp" = external global %swift.protocol, align 4
@"got.$sSKMp" = private unnamed_addr constant ptr @"$sSKMp"
@"$sSKSlTb" = external global %swift.protocol_requirement, align 4
@"got.$sSKSlTb" = private unnamed_addr constant ptr @"$sSKSlTb"
@"$sSK7IndicesSl_SKTn" = external global %swift.protocol_requirement, align 4
@"got.$sSK7IndicesSl_SKTn" = private unnamed_addr constant ptr @"$sSK7IndicesSl_SKTn"
@"$sSK11SubSequenceSl_SKTn" = external global %swift.protocol_requirement, align 4
@"got.$sSK11SubSequenceSl_SKTn" = private unnamed_addr constant ptr @"$sSK11SubSequenceSl_SKTn"
@"$sSK5index6before5IndexQzAD_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index6before5IndexQzAD_tFTq" = private unnamed_addr constant ptr @"$sSK5index6before5IndexQzAD_tFTq"
@"$sSK9formIndex6beforey0B0Qzz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK9formIndex6beforey0B0Qzz_tFTq" = private unnamed_addr constant ptr @"$sSK9formIndex6beforey0B0Qzz_tFTq"
@"$sSK5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSK5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSK8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSK8distance4from2toSi5IndexQz_AEtFTq"
@"$s10BufferView07MutableaB0VyxGSKAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView07MutableaB0VyxGSKAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSKMp" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 8, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSKSlTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAASl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK7IndicesSl_SKTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAA7IndicesSl_SK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK11SubSequenceSl_SKTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index6before5IndexQzAD_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASK5index6before5IndexQzAH_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK9formIndex6beforey0B0Qzz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASK9formIndex6beforey0E0Qzz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASK5index_8offsetBy5IndexQzAH_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASK5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAASK8distance4from2toSi5IndexQz_AItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 20) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", i32 0, i32 24) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSkAASK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAASKWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAASK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSnyxGSksSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferView07MutableaB0VyxGSkAA7IndicesSl_Sk" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAA7IndicesSl_SkWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAA7IndicesSl_Sk", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_Sk" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_SkWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_Sk", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSk" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSk", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView07MutableaB0VyxGSkAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSk" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 1) to i64)) to i32), i32 4, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", i32 0, i32 11) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSkMp" = external global %swift.protocol, align 4
@"got.$sSkMp" = private unnamed_addr constant ptr @"$sSkMp"
@"$sSkSKTb" = external global %swift.protocol_requirement, align 4
@"got.$sSkSKTb" = private unnamed_addr constant ptr @"$sSkSKTb"
@"$sSk7IndicesSl_SkTn" = external global %swift.protocol_requirement, align 4
@"got.$sSk7IndicesSl_SkTn" = private unnamed_addr constant ptr @"$sSk7IndicesSl_SkTn"
@"$sSk11SubSequenceSl_SkTn" = external global %swift.protocol_requirement, align 4
@"got.$sSk11SubSequenceSl_SkTn" = private unnamed_addr constant ptr @"$sSk11SubSequenceSl_SkTn"
@"$sSk5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSk5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSk8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSk8distance4from2toSi5IndexQz_AEtFTq"
@"$s10BufferView07MutableaB0VyxGSkAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView07MutableaB0VyxGSkAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSkMp" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 6, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSkSKTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAASK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk7IndicesSl_SkTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAA7IndicesSl_Sk", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk11SubSequenceSl_SkTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_Sk", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAASk5index_8offsetBy5IndexQzAH_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAASk5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAASk8distance4from2toSi5IndexQz_AItFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 16) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", i32 0, i32 20) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV" = unnamed_addr constant { i32 } zeroinitializer, align 4
@"$s10BufferView07MutableaB0VWV" = internal constant %swift.vwtable { ptr @__swift_memcpy16_8, ptr @__swift_noop_void_return, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @"$s10BufferView07MutableaB0Vwet", ptr @"$s10BufferView07MutableaB0Vwst", i64 16, i64 16, i32 7, i32 1 }, align 8
@5 = internal constant <{ i32, i32 }> <{ i32 0, i32 8 }>, align 8
@.str.10.BufferView = private constant [11 x i8] c"BufferView\00"
@"$s10BufferViewMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32 }>, ptr @"$s10BufferViewMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__constg_swiftt", align 4
@.str.17.MutableBufferView = private constant [18 x i8] c"MutableBufferView\00"
@"$s10BufferView07MutableaB0VMI" = internal global [16 x ptr] zeroinitializer, align 8
@"$s10BufferView07MutableaB0VMn" = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }> <{ i32 209, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewMXM" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.17.MutableBufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMa" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMF" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 4) to i64)) to i32), i32 2, i32 3, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMI" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMP" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView07MutableaB0VMn", i32 0, i32 8) to i64)) to i32), i16 1, i16 0, i16 1, i16 0, i8 -128, i8 0, i8 0, i8 0 }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferView07MutableaB0VMP" = internal constant <{ i32, i32, i32, i32, i32, i16, i16 }> <{ i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMi" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMP" to i64)) to i32), i32 0, i32 1073741825, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VWV" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView07MutableaB0VMP", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @5 to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView07MutableaB0VMP", i32 0, i32 4) to i64)) to i32), i16 1, i16 1 }>, align 8
@6 = private constant [6 x i8] c"start\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"symbolic Si" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Si", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@7 = private constant [6 x i8] c"count\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView07MutableaB0VMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView07MutableaB0V" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMF" to i64)) to i32), i32 0, i16 0, i16 12, i32 2, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @6 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VMF", i32 0, i32 7) to i64)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Si" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VMF", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @7 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView07MutableaB0VMF", i32 0, i32 10) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular", no_sanitize_address, align 4
@".str.28.Swift/UnsafeRawPointer.swift" = private unnamed_addr constant [29 x i8] c"Swift/UnsafeRawPointer.swift\00"
@".str.35.Negative value is not representable" = private unnamed_addr constant [36 x i8] c"Negative value is not representable\00"
@".str.20.Swift/Integers.swift" = private unnamed_addr constant [21 x i8] c"Swift/Integers.swift\00"
@"$sxSgSQsSQRzlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSpyxGSQsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSiSQsWP" = external global ptr, align 8
@".str.94.MutableBufferView.withContiguousMutableStorageIfAvailable: replacing the buffer is not allowed" = private unnamed_addr constant [95 x i8] c"MutableBufferView.withContiguousMutableStorageIfAvailable: replacing the buffer is not allowed\00"
@".str.50.self must be a properly aligned pointer for type T" = private unnamed_addr constant [51 x i8] c"self must be a properly aligned pointer for type T\00"
@".str.31.Allocation byte count too large" = private unnamed_addr constant [32 x i8] c"Allocation byte count too large\00"
@".str.31.Swift/TemporaryAllocation.swift" = private unnamed_addr constant [32 x i8] c"Swift/TemporaryAllocation.swift\00"
@".str.41.Alignment value must be greater than zero" = private unnamed_addr constant [42 x i8] c"Alignment value must be greater than zero\00"
@".str.38.Alignment value must be a power of two" = private unnamed_addr constant [39 x i8] c"Alignment value must be a power of two\00"
@"$s10BufferView07MutableaB0VyxGSTAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSTAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0VyxGSlAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSlAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0VyxGSMAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSMAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0VyxGSKAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSKAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0VyxGSkAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VyxGSkAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView07MutableaB0VHn" = private constant %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VMn" to i64), i64 ptrtoint (ptr @"$s10BufferView07MutableaB0VHn" to i64)) to i32) }, section "__TEXT, __swift5_types, regular", no_sanitize_address, align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [94 x ptr] [ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvg", ptr @"$s10BufferView07MutableaB0V5countSivg", ptr @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC", ptr @"$s10BufferView07MutableaB0V5start5count9dependsOnACyxGAA0aB5IndexVyxG_Siqd__tclufC", ptr @"$s10BufferView07MutableaB0V06unsafecA7Pointer9dependsOnACyxGSgSryxG_qd__tclufC", ptr @"$s10BufferView07MutableaB0V06unsafec3RawA7Pointer9dependsOnACyxGSgSw_qd__tclufC", ptr @"$s10BufferView07MutableaB0V12makeIteratorAA0abE0VyxGyF", ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg", ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg", ptr @"$s10BufferView07MutableaB0V32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF", ptr @"$s10BufferView07MutableaB0VAASQRzlE13elementsEqualySbACyxGF", ptr @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg", ptr @"$s10BufferView07MutableaB0V7isEmptySbvg", ptr @"$s10BufferView07MutableaB0V12_checkBoundsyyAA0aB5IndexVyxGF", ptr @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF", ptr @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF", ptr @"$s10BufferView07MutableaB0V5index5afterAA0aB5IndexVyxGAH_tF", ptr @"$s10BufferView07MutableaB0V5index6beforeAA0aB5IndexVyxGAH_tF", ptr @"$s10BufferView07MutableaB0V9formIndex5afteryAA0abE0VyxGz_tF", ptr @"$s10BufferView07MutableaB0V9formIndex6beforeyAA0abE0VyxGz_tF", ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF", ptr @"$s10BufferView07MutableaB0V9formIndex_8offsetByyAA0abE0VyxGz_SitF", ptr @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcig", ptr @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcig", ptr @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM", ptr @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM", ptr @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcis", ptr @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcis", ptr @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcig", ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig", ptr @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis", ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis", ptr @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM", ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM", ptr @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlF", ptr @"$s10BufferView07MutableaB0V10copyMemory4fromAA0aB5IndexVyxGA2AVyxG_tF", ptr @"$s10BufferView07MutableaB0V6update9repeatingyx_tF", ptr @"$s10BufferView07MutableaB0V6update4from8IteratorQyd__9unwritten_AA0aB5IndexVyxG5indextqd___t7ElementQyd__RszSTRd__lF", ptr @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lF", ptr @"$s10BufferView07MutableaB0V20withUnsafeRawPointeryqd__qd__SV_SitKXEKlF", ptr @"$s10BufferView07MutableaB0V010withUnsafeC10RawPointeryqd__qd__Sv_SitKXEKlF", ptr @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlF", ptr @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlF", ptr @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF", ptr @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlF", ptr @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlF", ptr @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlF", ptr @"$s10BufferView07MutableaB0V4load14fromByteOffset2asqd__Si_qd__mtlF", ptr @"$s10BufferView07MutableaB0V4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF", ptr @"$s10BufferView07MutableaB0V13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF", ptr @"$s10BufferView07MutableaB0V13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF", ptr @"$s10BufferView07MutableaB0V10storeBytes2of12toByteOffset2asyqd___Siqd__mtlF", ptr @"$s10BufferView07MutableaB0V10storeBytes2of2to2asyqd___AA0aB5IndexVyxGqd__mtlF", ptr @"$s10BufferView07MutableaB0V6offsetxSi_tcig", ptr @"$s10BufferView07MutableaB0V9uncheckedxSi_tcig", ptr @"$s10BufferView07MutableaB0V6offsetxSi_tciM", ptr @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM", ptr @"$s10BufferView07MutableaB0V6offsetxSi_tcis", ptr @"$s10BufferView07MutableaB0V9uncheckedxSi_tcis", ptr @"$s10BufferView07MutableaB0V5firstxSgvg", ptr @"$s10BufferView07MutableaB0V4lastxSgvg", ptr @"$s10BufferView07MutableaB0V6prefixyACyxGSiF", ptr @"$s10BufferView07MutableaB0V6suffixyACyxGSiF", ptr @"$s10BufferView07MutableaB0V9dropFirstyACyxGSiF", ptr @"$s10BufferView07MutableaB0V8dropLastyACyxGSiF", ptr @"$s10BufferView07MutableaB0V6prefix4upToACyxGAA0aB5IndexVyxG_tF", ptr @"$s10BufferView07MutableaB0V6suffix4fromACyxGAA0aB5IndexVyxG_tF", ptr @"$s10BufferView07MutableaB0VyxGSTAAMA", ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", ptr @"$s10BufferView07MutableaB0VyxGSlAAMA", ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr @"$s10BufferView07MutableaB0VyxGSMAAMA", ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", ptr @"$s10BufferView07MutableaB0VyxGSKAAMA", ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", ptr @"$s10BufferView07MutableaB0VyxGSkAAMA", ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV", ptr @"$s10BufferView07MutableaB0VMn", ptr @"$s10BufferView07MutableaB0VMn", ptr @"$s10BufferView07MutableaB0VMa", ptr @"$s10BufferView07MutableaB0VMF", ptr @"$s10BufferView07MutableaB0VMa", ptr @"$s10BufferView07MutableaB0VyxGSTAAHc", ptr @"$s10BufferView07MutableaB0VyxGSlAAHc", ptr @"$s10BufferView07MutableaB0VyxGSMAAHc", ptr @"$s10BufferView07MutableaB0VyxGSKAAHc", ptr @"$s10BufferView07MutableaB0VyxGSkAAHc", ptr @"$s10BufferView07MutableaB0VHn", ptr @__swift_reflection_version], section "llvm.metadata"
@llvm.compiler.used = appending global [18 x ptr] [ptr @"$sS2iSZsWl", ptr @"$sS2iSZsWl", ptr @"$s10BufferView07MutableaB0VyxGSTAA8IteratorST_StWT", ptr @"$s10BufferView07MutableaB0VyxGSlAASTWb", ptr @"$s10BufferView07MutableaB0VyxGSlAA5IndexSl_SLWT", ptr @"$sS2iSZsWl", ptr @"$s10BufferView07MutableaB0VyxGSlAA7IndicesSl_SlWT", ptr @"$s10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_SlWT", ptr @"$s10BufferView07MutableaB0VyxGSMAASlWb", ptr @"$s10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SMWT", ptr @"$s10BufferView07MutableaB0VyxGSKAASlWb", ptr @"$sS2iSZsWl", ptr @"$s10BufferView07MutableaB0VyxGSKAA7IndicesSl_SKWT", ptr @"$s10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SKWT", ptr @"$s10BufferView07MutableaB0VyxGSkAASKWb", ptr @"$sS2iSZsWl", ptr @"$s10BufferView07MutableaB0VyxGSkAA7IndicesSl_SkWT", ptr @"$s10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_SkWT"], section "llvm.metadata"

@"$s10BufferView07MutableaB0V5countSivpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V7isEmptySbvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V6offsetxSi_tcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V9uncheckedxSi_tcipMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V5firstxSgvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"
@"$s10BufferView07MutableaB0V4lastxSgvpMV" = alias { i32 }, ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvpMV"

define swiftcc ptr @"$s10BufferView07MutableaB0V5startAA0aB5IndexVyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  ret ptr %0
}

define swiftcc i64 @"$s10BufferView07MutableaB0V5countSivg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  ret i64 %1
}

define internal swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  ret ptr %0
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %baseAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %baseAddress.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %3 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %4, align 8, !invariant.load !17
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %baseAddress.debug, align 8
  store i64 %1, ptr %count.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  %6 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %0, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  %9 = call ptr %8(ptr noalias %5, ptr noalias %2, ptr %Owner) #6
  %10 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V5start5count9dependsOnACyxGAA0aB5IndexVyxG_Siqd__tclufC"(ptr %6, i64 %1, ptr noalias nocapture %5, ptr %Element, ptr %Owner)
  %11 = extractvalue { ptr, i64 } %10, 0
  %12 = extractvalue { ptr, i64 } %10, 1
  %self.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %11, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %12, ptr %self.count._value, align 8
  %13 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %14 = load ptr, ptr %13, align 8, !invariant.load !17
  call void %14(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %5)
  %15 = insertvalue { ptr, i64 } undef, ptr %11, 0
  %16 = insertvalue { ptr, i64 } %15, i64 %12, 1
  ret { ptr, i64 } %16
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr, ptr) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V5start5count9dependsOnACyxGAA0aB5IndexVyxG_Siqd__tclufC"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %3 = alloca %Ts26DefaultStringInterpolationV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %index.debug, align 8
  store i64 %1, ptr %count.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %1, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.26.Count must not be negative", i64 26, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 32, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %12, align 8, !invariant.load !17, !dereferenceable !18
  %13 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %13, align 8, !invariant.load !17
  %14 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %14, 0
  %15 = xor i1 %flags.isTriviallyDestroyable, true
  br i1 %15, label %16, label %37

16:                                               ; preds = %11
  call void asm sideeffect "nop", ""()
  %17 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 true)
  br i1 %18, label %36, label %19

19:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %20 = call swiftcc { i64, ptr } @"$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC"(i64 41, i64 1)
  %21 = extractvalue { i64, ptr } %20, 0
  %22 = extractvalue { i64, ptr } %20, 1
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %3, i32 0, i32 0
  %._storage._guts = getelementptr inbounds %TSS, ptr %._storage, i32 0, i32 0
  %._storage._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage._guts, i32 0, i32 0
  %._storage._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 0
  %._storage._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, ptr %._storage._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %21, ptr %._storage._guts._object._countAndFlagsBits._value, align 8
  %._storage._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 1
  store ptr %22, ptr %._storage._guts._object._object, align 8
  %23 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.baseAddress must be properly aligned for ", i64 41, i1 true)
  %24 = extractvalue { i64, ptr } %23, 0
  %25 = extractvalue { i64, ptr } %23, 1
  call swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64 %24, ptr %25, ptr nocapture swiftself dereferenceable(16) %3)
  call void @swift_bridgeObjectRelease(ptr %25) #6
  call swiftcc void @"$ss26DefaultStringInterpolationV06appendC0yyypXpF"(ptr %Element, ptr nocapture swiftself dereferenceable(16) %3)
  %26 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @.str.0., i64 0, i1 true)
  %27 = extractvalue { i64, ptr } %26, 0
  %28 = extractvalue { i64, ptr } %26, 1
  call swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64 %27, ptr %28, ptr nocapture swiftself dereferenceable(16) %3)
  call void @swift_bridgeObjectRelease(ptr %28) #6
  %._storage3 = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %3, i32 0, i32 0
  %._storage3._guts = getelementptr inbounds %TSS, ptr %._storage3, i32 0, i32 0
  %._storage3._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage3._guts, i32 0, i32 0
  %._storage3._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage3._guts._object, i32 0, i32 0
  %._storage3._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, ptr %._storage3._guts._object._countAndFlagsBits, i32 0, i32 0
  %29 = load i64, ptr %._storage3._guts._object._countAndFlagsBits._value, align 8
  %._storage3._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage3._guts._object, i32 0, i32 1
  %30 = load ptr, ptr %._storage3._guts._object._object, align 8
  %31 = call ptr @swift_bridgeObjectRetain(ptr returned %30) #6
  %32 = call ptr @"$ss26DefaultStringInterpolationVWOh"(ptr %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %33 = call swiftcc { i64, ptr } @"$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC"(i64 %29, ptr %30)
  %34 = extractvalue { i64, ptr } %33, 0
  %35 = extractvalue { i64, ptr } %33, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %34, ptr %35, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 34, i32 1)
  unreachable

36:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  br label %38

37:                                               ; preds = %11
  br label %38

38:                                               ; preds = %36, %37
  %self.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %1, ptr %self.count._value, align 8
  %39 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %39, align 8, !invariant.load !17, !dereferenceable !18
  %40 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %41 = load ptr, ptr %40, align 8, !invariant.load !17
  call void %41(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  %42 = insertvalue { ptr, i64 } undef, ptr %0, 0
  %43 = insertvalue { ptr, i64 } %42, i64 %1, 1
  ret { ptr, i64 } %43
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #4

declare swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr, i64, i1) #0

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64, i64, i8, i64, ptr, i64, i64, i8, i64, i32) #5

declare swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr, ptr) #0

declare swiftcc { i64, ptr } @"$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC"(i64, i64) #0

declare swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64, ptr, ptr nocapture swiftself dereferenceable(16)) #0

; Function Attrs: nounwind
declare void @swift_bridgeObjectRelease(ptr) #6

define linkonce_odr hidden swiftcc void @"$ss26DefaultStringInterpolationV06appendC0yyypXpF"(ptr %0, ptr nocapture swiftself dereferenceable(16) %1) #0 {
entry:
  %2 = call swiftcc { i64, ptr } @"$ss9_typeName_9qualifiedSSypXp_SbtF"(ptr %0, i1 false)
  %3 = extractvalue { i64, ptr } %2, 0
  %4 = extractvalue { i64, ptr } %2, 1
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %1, i32 0, i32 0
  call swiftcc void @"$sSS6appendyySSF"(i64 %3, ptr %4, ptr nocapture swiftself dereferenceable(16) %._storage)
  call void @swift_bridgeObjectRelease(ptr %4) #6
  ret void
}

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #6

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$ss26DefaultStringInterpolationVWOh"(ptr %0) #7 {
entry:
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %0, i32 0, i32 0
  %._storage._guts = getelementptr inbounds %TSS, ptr %._storage, i32 0, i32 0
  %._storage._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage._guts, i32 0, i32 0
  %._storage._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 1
  %toDestroy = load ptr, ptr %._storage._guts._object._object, align 8
  call void @swift_bridgeObjectRelease(ptr %toDestroy) #6
  ret ptr %0
}

declare swiftcc { i64, ptr } @"$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC"(i64, ptr) #0

define swiftcc { i64, i64 } @"$s10BufferView07MutableaB0V06unsafecA7Pointer9dependsOnACyxGSgSryxG_qd__tclufC"(i64 %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %buffer.debug = alloca %TSr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buffer.debug, i8 0, i64 16, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %base.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %base.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %3 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %4, align 8, !invariant.load !17
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer.debug)
  %buffer.debug._position = getelementptr inbounds %TSr, ptr %buffer.debug, i32 0, i32 0
  store i64 %0, ptr %buffer.debug._position, align 8
  %buffer.debug.count = getelementptr inbounds %TSr, ptr %buffer.debug, i32 0, i32 1
  %buffer.debug.count._value = getelementptr inbounds %TSi, ptr %buffer.debug.count, i32 0, i32 0
  store i64 %1, ptr %buffer.debug.count._value, align 8
  store ptr %2, ptr %owner.debug, align 8
  %6 = call swiftcc i64 @"$sSr11baseAddressSpyxGSgvg"(i64 %0, i64 %1, ptr %Element)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %entry
  %9 = inttoptr i64 %6 to ptr
  br label %10

10:                                               ; preds = %8
  %11 = phi ptr [ %9, %8 ]
  %12 = ptrtoint ptr %11 to i64
  br label %14

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i64 [ 0, %13 ], [ %12, %10 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = inttoptr i64 %15 to ptr
  br label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %21 = load ptr, ptr %20, align 8, !invariant.load !17
  call void %21(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %33

22:                                               ; preds = %17
  %23 = phi ptr [ %18, %17 ]
  store ptr %23, ptr %base.debug, align 8
  %24 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %25 = load ptr, ptr %24, align 8, !invariant.load !17
  %26 = call ptr %25(ptr noalias %5, ptr noalias %2, ptr %Owner) #6
  %27 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %23, i64 %1, ptr noalias nocapture %5, ptr %Element, ptr %Owner)
  %28 = extractvalue { ptr, i64 } %27, 0
  %29 = extractvalue { ptr, i64 } %27, 1
  %self.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %28, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %29, ptr %self.count._value, align 8
  %30 = ptrtoint ptr %28 to i64
  %31 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %32 = load ptr, ptr %31, align 8, !invariant.load !17
  call void %32(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %33

33:                                               ; preds = %22, %19
  %34 = phi i64 [ 0, %19 ], [ %30, %22 ]
  %35 = phi i64 [ 0, %19 ], [ %29, %22 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %5)
  %36 = insertvalue { i64, i64 } undef, i64 %34, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

declare swiftcc i64 @"$sSr11baseAddressSpyxGSgvg"(i64, i64, ptr) #0

define swiftcc { i64, i64 } @"$s10BufferView07MutableaB0V06unsafec3RawA7Pointer9dependsOnACyxGSgSw_qd__tclufC"(i64 %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %buffer.debug = alloca %TSw, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buffer.debug, i8 0, i64 16, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %p.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %p.debug, i8 0, i64 8, i1 false)
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %q.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %q.debug, i8 0, i64 8, i1 false)
  %r.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %r.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %7 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %8, align 8, !invariant.load !17
  %9 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %9)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer.debug)
  %buffer.debug._position = getelementptr inbounds %TSw, ptr %buffer.debug, i32 0, i32 0
  store i64 %0, ptr %buffer.debug._position, align 8
  %buffer.debug._end = getelementptr inbounds %TSw, ptr %buffer.debug, i32 0, i32 1
  store i64 %1, ptr %buffer.debug._end, align 8
  store ptr %2, ptr %owner.debug, align 8
  %10 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %10, align 8, !invariant.load !17, !dereferenceable !18
  %11 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %11, align 8, !invariant.load !17
  %12 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %12, 0
  br i1 %flags.isTriviallyDestroyable, label %13, label %44

13:                                               ; preds = %entry
  %14 = call swiftcc i64 @"$sSw11baseAddressSvSgvg"(i64 %0, i64 %1)
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = inttoptr i64 %14 to ptr
  br label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %20 = load ptr, ptr %19, align 8, !invariant.load !17
  call void %20(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %48

21:                                               ; preds = %16
  %22 = phi ptr [ %17, %16 ]
  store ptr %22, ptr %p.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %23 = call swiftcc i64 @"$sSw5countSivg"(i64 %0, i64 %1)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._value = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  store i64 %23, ptr %._value, align 8
  %24 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %24, align 8, !invariant.load !17
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._value3 = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  store i64 %stride, ptr %._value3, align 8
  %25 = call ptr @"$sS2iSzsWl"() #18
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %3, ptr noalias nocapture %4, ptr noalias nocapture %6, ptr @"$sSiN", ptr %25, ptr noalias nocapture swiftself %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  %._value4 = getelementptr inbounds %TSi, ptr %3, i32 0, i32 0
  %26 = load i64, ptr %._value4, align 8
  %._value5 = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %27 = load i64, ptr %._value5, align 8
  store i64 %26, ptr %q.debug, align 8
  store i64 %27, ptr %r.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  call void asm sideeffect "nop", ""()
  %28 = icmp eq i64 %27, 0
  %29 = call i1 @llvm.expect.i1(i1 %28, i1 true)
  br i1 %29, label %34, label %30

30:                                               ; preds = %21
  %31 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %32 = extractvalue { i64, ptr } %31, 0
  %33 = extractvalue { i64, ptr } %31, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %32, ptr %33, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 61, i32 1)
  unreachable

34:                                               ; preds = %21
  call void asm sideeffect "nop", ""()
  %35 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %36 = load ptr, ptr %35, align 8, !invariant.load !17
  %37 = call ptr %36(ptr noalias %9, ptr noalias %2, ptr %Owner) #6
  %38 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %22, i64 %26, ptr noalias nocapture %9, ptr %Element, ptr %Owner)
  %39 = extractvalue { ptr, i64 } %38, 0
  %40 = extractvalue { ptr, i64 } %38, 1
  %self.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %39, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %40, ptr %self.count._value, align 8
  %41 = ptrtoint ptr %39 to i64
  %42 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %43 = load ptr, ptr %42, align 8, !invariant.load !17
  call void %43(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %48

44:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %45 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %46 = extractvalue { i64, ptr } %45, 0
  %47 = extractvalue { i64, ptr } %45, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %46, ptr %47, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 58, i32 1)
  unreachable

48:                                               ; preds = %34, %18
  %49 = phi i64 [ 0, %18 ], [ %41, %34 ]
  %50 = phi i64 [ 0, %18 ], [ %40, %34 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %9)
  %51 = insertvalue { i64, i64 } undef, i64 %49, 0
  %52 = insertvalue { i64, i64 } %51, i64 %50, 1
  ret { i64, i64 } %52
}

define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V12makeIteratorAA0abE0VyxGyF"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %2 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  %4 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %1, ptr %.count._value, align 8
  %5 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = call swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV4from2to9dependsOnACyxGAA0aB5IndexVyxG_AJqd__tclufC"(ptr %3, ptr %4, ptr noalias nocapture %2, ptr %Element, ptr %6)
  %8 = extractvalue { ptr, ptr } %7, 0
  %9 = extractvalue { ptr, ptr } %7, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  %10 = insertvalue { ptr, ptr } undef, ptr %8, 0
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1
  ret { ptr, ptr } %11
}

define swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  ret ptr %0
}

define swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %2 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %1, ptr %0, ptr %Element)
  ret ptr %2
}

define swiftcc void @"$s10BufferView07MutableaB0V32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %3, i64 %4, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  call swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %8, i64 %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %10 = load ptr, ptr %6, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %entry
  ret void

13:                                               ; preds = %entry
  %14 = phi ptr [ %10, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %14, ptr %6, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSTAAST12makeIterator0E0QzyFTW"(ptr noalias nocapture sret(%T10BufferView0aB8IteratorV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V12makeIteratorAA0abE0VyxGyF"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 0
  %.curPointer._rawValue = getelementptr inbounds %TSV, ptr %.curPointer, i32 0, i32 0
  store ptr %6, ptr %.curPointer._rawValue, align 8
  %.endPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 1
  %.endPointer._rawValue = getelementptr inbounds %TSV, ptr %.endPointer, i32 0, i32 0
  store ptr %7, ptr %.endPointer._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSTAAST19underestimatedCountSivgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %Self, ptr undef) #9
  %2 = call swiftcc i64 @"$sSlsE19underestimatedCountSivg"(ptr %Self, ptr %1, ptr noalias nocapture swiftself %0) #19
  ret i64 %2
}

define linkonce_odr hidden swiftcc i8 @"$s10BufferView07MutableaB0VyxGSTAAST31_customContainsEquatableElementySbSg0G0QzFTW"(ptr noalias nocapture %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %2 = call swiftcc i8 @"$sSTsE31_customContainsEquatableElementySbSg0D0QzF"(ptr noalias nocapture %0, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %1) #19
  ret i8 %2
}

define linkonce_odr hidden swiftcc ptr @"$s10BufferView07MutableaB0VyxGSTAAST22_copyToContiguousArrays0fG0Vy7ElementQzGyFTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %1 = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %0, i64 16, i1 false)
  %2 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %Self, ptr undef) #9
  %3 = call swiftcc ptr @"$sSlsE22_copyToContiguousArrays0cD0Vy7ElementQzGyF"(ptr %Self, ptr %2, ptr noalias nocapture swiftself %1) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr %1)
  ret ptr %3
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSTAAST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTW"(ptr noalias nocapture %0, i64 %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %4 = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %3, i64 16, i1 false)
  %5 = call swiftcc i64 @"$sSTsE13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tF"(ptr noalias nocapture %0, i64 %1, i64 %2, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %4) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  ret i64 %5
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSTAAST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTW"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %"\CF\84_1_0", ptr noalias nocapture swiftself dereferenceable(16) %3, ptr noalias nocapture swifterror dereferenceable(8) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0V32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %5, i64 %6, ptr %"\CF\84_0_0", ptr %"\CF\84_1_0", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4) #19
  %8 = load ptr, ptr %4, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %4, align 8
  store ptr %12, ptr %4, align 8
  ret void
}

define swiftcc i1 @"$s10BufferView07MutableaB0VAASQRzlE13elementsEqualySbACyxGF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element, ptr %Element.Equatable) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %other.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %other.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %other.debug)
  %other.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %other.debug, i32 0, i32 0
  %other.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %other.debug.start, i32 0, i32 0
  %other.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %other.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %other.debug.start._rawValue._rawValue, align 8
  %other.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %other.debug, i32 0, i32 1
  %other.debug.count._value = getelementptr inbounds %TSi, ptr %other.debug.count, i32 0, i32 0
  store i64 %1, ptr %other.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %2, i64 %3, ptr %Element)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  %7 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %0, i64 %1, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %10 = call swiftcc i1 @"$s10BufferViewAAVAASQRzlE13elementsEqualySbAByxGF"(ptr %8, i64 %9, ptr %5, i64 %6, ptr %Element, ptr %Element.Equatable)
  ret i1 %10
}

define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %2 = alloca %TSn, align 8
  %3 = alloca %T10BufferView0aB5IndexV, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %3, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  %6 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %6, ptr %._rawValue2._rawValue, align 8
  %7 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %8, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %2, ptr noalias nocapture %3, ptr noalias nocapture %4, ptr %8, ptr %9)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %.lowerBound = getelementptr inbounds %TSn, ptr %2, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %2, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  %12 = insertvalue { ptr, ptr } undef, ptr %10, 0
  %13 = insertvalue { ptr, ptr } %12, ptr %11, 1
  ret { ptr, ptr } %13
}

define swiftcc i1 @"$s10BufferView07MutableaB0V7isEmptySbvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %2 = icmp eq i64 %1, 0
  ret i1 %2
}

define swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyyAA0aB5IndexVyxGF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %3 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %4 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %3, ptr %0, ptr %1, i64 %2, ptr %Element)
  %5 = icmp slt i64 %4, 0
  %6 = xor i1 %5, true
  br i1 %6, label %7, label %11

7:                                                ; preds = %entry
  %8 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %9 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %0, ptr %8, ptr %1, i64 %2, ptr %Element)
  %10 = icmp slt i64 0, %9
  br label %12

11:                                               ; preds = %entry
  br label %12

12:                                               ; preds = %7, %11
  %13 = phi i1 [ false, %11 ], [ %10, %7 ]
  %14 = call i1 @llvm.expect.i1(i1 %13, i1 true)
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.19.Index out of bounds", i64 19, i1 true)
  %17 = extractvalue { i64, ptr } %16, 0
  %18 = extractvalue { i64, ptr } %16, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %17, ptr %18, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 119, i32 1)
  unreachable

19:                                               ; preds = %12
  call void asm sideeffect "nop", ""()
  %20 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %20, align 8, !invariant.load !17, !dereferenceable !18
  %21 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %21, align 8, !invariant.load !17
  %22 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %22, 0
  %23 = xor i1 %flags.isTriviallyDestroyable, true
  br i1 %23, label %24, label %32

24:                                               ; preds = %19
  call void asm sideeffect "nop", ""()
  %25 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 true)
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.30.Index is unaligned for Element", i64 30, i1 true)
  %29 = extractvalue { i64, ptr } %28, 0
  %30 = extractvalue { i64, ptr } %28, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %29, ptr %30, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 126, i32 1)
  unreachable

31:                                               ; preds = %24
  call void asm sideeffect "nop", ""()
  br label %33

32:                                               ; preds = %19
  br label %33

33:                                               ; preds = %31, %32
  ret void
}

define swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %start.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %start.debug, i8 0, i64 8, i1 false)
  %end.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %end.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %start.debug, align 8
  store ptr %1, ptr %end.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr %1, ptr %0, ptr %Element)
  ret i64 %4
}

define swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %5 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %4, ptr %0, ptr %2, i64 %3, ptr %Element)
  %6 = icmp slt i64 %5, 0
  %7 = xor i1 %6, true
  br i1 %7, label %8, label %12

8:                                                ; preds = %entry
  %9 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %10 = icmp slt i64 %9, 0
  %11 = xor i1 %10, true
  br label %13

12:                                               ; preds = %entry
  br label %13

13:                                               ; preds = %8, %12
  %14 = phi i1 [ false, %12 ], [ %11, %8 ]
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %17 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %1, ptr %16, ptr %2, i64 %3, ptr %Element)
  %18 = icmp slt i64 %17, 0
  %19 = xor i1 %18, true
  br label %21

20:                                               ; preds = %13
  br label %21

21:                                               ; preds = %15, %20
  %22 = phi i1 [ false, %20 ], [ %19, %15 ]
  %23 = call i1 @llvm.expect.i1(i1 %22, i1 true)
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.30.Range of indices out of bounds", i64 30, i1 true)
  %26 = extractvalue { i64, ptr } %25, 0
  %27 = extractvalue { i64, ptr } %25, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %26, ptr %27, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 135, i32 1)
  unreachable

28:                                               ; preds = %21
  call void asm sideeffect "nop", ""()
  %29 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %29, align 8, !invariant.load !17, !dereferenceable !18
  %30 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %30, align 8, !invariant.load !17
  %31 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %31, 0
  %32 = xor i1 %flags.isTriviallyDestroyable, true
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  call void asm sideeffect "nop", ""()
  %34 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %1, ptr %Element)
  br label %38

37:                                               ; preds = %33
  br label %38

38:                                               ; preds = %35, %37
  %39 = phi i1 [ false, %37 ], [ %36, %35 ]
  %40 = call i1 @llvm.expect.i1(i1 %39, i1 true)
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Range of indices is unaligned for Element", i64 41, i1 true)
  %43 = extractvalue { i64, ptr } %42, 0
  %44 = extractvalue { i64, ptr } %42, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %43, ptr %44, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 143, i32 1)
  unreachable

45:                                               ; preds = %38
  call void asm sideeffect "nop", ""()
  br label %47

46:                                               ; preds = %28
  br label %47

47:                                               ; preds = %45, %46
  ret void
}

define swiftcc ptr @"$s10BufferView07MutableaB0V5index5afterAA0aB5IndexVyxGAH_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 1, ptr %0, ptr %Element)
  ret ptr %3
}

define swiftcc ptr @"$s10BufferView07MutableaB0V5index6beforeAA0aB5IndexVyxGAH_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 -1, ptr %0, ptr %Element)
  ret ptr %3
}

define swiftcc void @"$s10BufferView07MutableaB0V9formIndex5afteryAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %4 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index5afterAA0aB5IndexVyxGAH_tF"(ptr %3, ptr %1, i64 %2, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %4, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9formIndex6beforeyAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %4 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index6beforeAA0aB5IndexVyxGAH_tF"(ptr %3, ptr %1, i64 %2, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %4, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %distance.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %distance.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  store i64 %1, ptr %distance.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %1, ptr %0, ptr %Element)
  ret ptr %4
}

define swiftcc void @"$s10BufferView07MutableaB0V9formIndex_8offsetByyAA0abE0VyxGz_SitF"(ptr nocapture dereferenceable(8) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %distance.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %distance.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  store i64 %1, ptr %distance.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %4, i64 %1, ptr %2, i64 %3, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %5, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyyAA0aB5IndexVyxGF"(ptr %1, ptr %2, i64 %3, ptr %Element)
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  br i1 %flags.isTriviallyDestroyable, label %7, label %9

7:                                                ; preds = %entry
  %8 = call swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %8, ptr %Element, ptr %1, ptr %Element)
  br label %11

9:                                                ; preds = %entry
  %10 = call swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %10, ptr %Element, ptr %1, ptr %Element)
  br label %11

11:                                               ; preds = %7, %9
  ret void
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %4 = call ptr @malloc(i64 40)
  store ptr %4, ptr %0, align 8
  %5 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame", ptr %4, i32 0, i32 0
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyyAA0aB5IndexVyxGF"(ptr %1, ptr %2, i64 %3, ptr %Element)
  %6 = getelementptr inbounds [32 x i8], ptr %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %6)
  %7 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %6, ptr %1, ptr %2, i64 %3, ptr %Element)
  %8 = extractvalue { ptr, ptr } %7, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame", ptr %4, i32 0, i32 1
  store ptr %8, ptr %.spill.addr, align 8
  %9 = extractvalue { ptr, ptr } %7, 1
  %10 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.resume.0", 0
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1
  ret { ptr, ptr } %11
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %position.debug = alloca ptr, align 8
  %Element1 = alloca ptr, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr2 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM.Frame", ptr %2, i32 0, i32 1
  %.reload3 = load ptr, ptr %.reload.addr2, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload3(ptr noalias dereferenceable(32) %7, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %rp.debug = alloca ptr, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.Frame", ptr %0, i32 0, i32 0
  store ptr %1, ptr %.spill.addr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %rp.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  store ptr %1, ptr %rp.debug, align 8
  %4 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.resume.0", 0
  %5 = insertvalue { ptr, ptr } %4, ptr %1, 1
  ret { ptr, ptr } %5
}

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %rp.debug = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %position.debug = alloca ptr, align 8
  %Element1 = alloca ptr, align 8
  br i1 %1, label %3, label %2

2:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.Frame", ptr %0, i32 0, i32 0
  %.reload = load ptr, ptr %.reload.addr, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM6$deferL_yylF"(ptr %.reload, i64 undef)
  br label %CoroEnd

3:                                                ; preds = %entryresume.0
  %.reload.addr2 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM.Frame", ptr %0, i32 0, i32 0
  %.reload3 = load ptr, ptr %.reload.addr2, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM6$deferL_yylF"(ptr %.reload3, i64 undef)
  br label %CoroEnd

CoroEnd:                                          ; preds = %2, %3
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcis"(ptr noalias nocapture %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %4 = alloca [32 x i8], align 8
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %6, align 8, !invariant.load !17
  %7 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %7)
  %8 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %9 = load ptr, ptr %8, align 8, !invariant.load !17
  %10 = call ptr %9(ptr noalias %7, ptr noalias %0, ptr %Element) #6
  %11 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %11)
  %12 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32) %11, ptr %1, ptr %2, i64 %3, ptr %Element)
  %13 = extractvalue { ptr, ptr } %12, 0
  %14 = extractvalue { ptr, ptr } %12, 1
  %15 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %16 = load ptr, ptr %15, align 8, !invariant.load !17
  %17 = call ptr %16(ptr noalias %14, ptr noalias %7, ptr %Element) #6
  call swiftcc void %13(ptr noalias dereferenceable(32) %11, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %11)
  %18 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %19 = load ptr, ptr %18, align 8, !invariant.load !17
  call void %19(ptr noalias %0, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %7)
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define linkonce_odr hidden swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %4 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  %7 = call i1 @llvm.expect.i1(i1 %flags.isTriviallyDestroyable, i1 true)
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @.str.0. to i64), i64 0, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 465, i32 1)
  unreachable

9:                                                ; preds = %entry
  %10 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %10, 255
  %11 = add i64 %flags.alignmentMask, 1
  %12 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %12, align 8, !invariant.load !17
  %13 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 1, i64 %stride)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.is.constant.i64(i64 1)
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  br label %22

20:                                               ; preds = %17
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Allocation byte count too large" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 46, i32 1)
  unreachable

21:                                               ; preds = %9
  br label %22

22:                                               ; preds = %21, %19
  %23 = call i1 @llvm.is.constant.i64(i64 %11)
  br i1 %23, label %42, label %24

24:                                               ; preds = %22
  %25 = icmp slt i64 0, %11
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 true)
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.41.Alignment value must be greater than zero" to i64), i64 41, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 67, i32 1)
  unreachable

28:                                               ; preds = %24
  %29 = icmp slt i64 0, %11
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  br label %37

31:                                               ; preds = %28
  %32 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %11, i64 1)
  %33 = extractvalue { i64, i1 } %32, 0
  %34 = extractvalue { i64, i1 } %32, 1
  %35 = and i64 %11, %33
  %36 = icmp eq i64 %35, 0
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i1 [ false, %30 ], [ %36, %31 ]
  %39 = call i1 @llvm.expect.i1(i1 %38, i1 true)
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.38.Alignment value must be a power of two" to i64), i64 38, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 68, i32 1)
  unreachable

41:                                               ; preds = %37
  br label %43

42:                                               ; preds = %22
  br label %43

43:                                               ; preds = %42, %41
  %44 = icmp slt i64 16, %11
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = icmp slt i64 1024, %stride
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  br label %54

48:                                               ; preds = %45
  %49 = call swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64 12, i64 3, i64 0)
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  br label %54

51:                                               ; preds = %48
  %52 = call zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 %stride, i64 %11)
  br label %54

53:                                               ; preds = %43
  br label %54

54:                                               ; preds = %53, %51, %50, %47
  %55 = phi i1 [ true, %47 ], [ false, %50 ], [ %52, %51 ], [ false, %53 ]
  br i1 %55, label %72, label %56

56:                                               ; preds = %54
  br i1 %44, label %58, label %57

57:                                               ; preds = %56
  br label %59

58:                                               ; preds = %56
  br label %59

59:                                               ; preds = %58, %57
  %60 = phi i64 [ 0, %57 ], [ %11, %58 ]
  %61 = sub i64 %60, 1
  %62 = call noalias ptr @swift_slowAlloc(i64 %stride, i64 %61) #6
  %63 = getelementptr inbounds i8, ptr %3, i64 %1
  %64 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %64, align 8, !invariant.load !17
  %65 = icmp slt i64 %size, 0
  %66 = call i1 @llvm.expect.i1(i1 %65, i1 false)
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  call void @llvm.memcpy.p0.p0.i64(ptr %62, ptr %63, i64 %size, i1 false)
  %68 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %69 = load ptr, ptr %68, align 8, !invariant.load !17
  %70 = call ptr %69(ptr noalias %0, ptr noalias %62, ptr %T) #6
  call void @swift_slowDealloc(ptr %62, i64 -1, i64 -1) #6
  br label %83

71:                                               ; preds = %59
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable

72:                                               ; preds = %54
  %73 = mul i64 1, %stride
  %74 = call i64 @llvm.umax.i64(i64 1, i64 %73)
  %spsave = call ptr @llvm.stacksave()
  %temp_alloc = alloca i8, i64 %74, align 16
  %75 = getelementptr inbounds i8, ptr %3, i64 %1
  %76 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %76, align 8, !invariant.load !17
  %77 = icmp slt i64 %size2, 0
  %78 = call i1 @llvm.expect.i1(i1 %77, i1 false)
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  call void @llvm.memcpy.p0.p0.i64(ptr %temp_alloc, ptr %75, i64 %size2, i1 false)
  %80 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %81 = load ptr, ptr %80, align 8, !invariant.load !17
  %82 = call ptr %81(ptr noalias %0, ptr noalias %temp_alloc, ptr %T) #6
  call void @llvm.stackrestore(ptr %spsave)
  br label %83

83:                                               ; preds = %79, %67
  ret void

84:                                               ; preds = %72
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable
}

define linkonce_odr hidden swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM6$deferL_yylF"(ptr %0, i64 %1) #0 {
entry:
  %rp.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %rp.debug, i8 0, i64 8, i1 false)
  %binding.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %binding.debug, i8 0, i64 8, i1 false)
  store ptr %0, ptr %rp.debug, align 8
  store i64 %1, ptr %binding.debug, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcis"(ptr noalias nocapture %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %4 = alloca [32 x i8], align 8
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %6, align 8, !invariant.load !17
  %7 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %7)
  %8 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %9 = load ptr, ptr %8, align 8, !invariant.load !17
  %10 = call ptr %9(ptr noalias %7, ptr noalias %0, ptr %Element) #6
  %11 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %11)
  %12 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %11, ptr %1, ptr %2, i64 %3, ptr %Element)
  %13 = extractvalue { ptr, ptr } %12, 0
  %14 = extractvalue { ptr, ptr } %12, 1
  %15 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %16 = load ptr, ptr %15, align 8, !invariant.load !17
  %17 = call ptr %16(ptr noalias %14, ptr noalias %7, ptr %Element) #6
  call swiftcc void %13(ptr noalias dereferenceable(32) %11, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %11)
  %18 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %19 = load ptr, ptr %18, align 8, !invariant.load !17
  call void %19(ptr noalias %0, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %7)
  ret void
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %4 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1
  ret { ptr, i64 } %8
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn, align 8
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %5 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %.upperBound._rawValue._rawValue, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 255, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = extractvalue %swift.metadata_response %6, 1
  %9 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %7, ptr undef) #9
  %10 = call swiftcc %swift.metadata_response @"$sSnMa"(i64 0, ptr %7, ptr %9) #18
  %11 = extractvalue %swift.metadata_response %10, 0
  %12 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %7, ptr undef) #9
  %13 = call ptr @"$sS2iSZsWl"() #18
  %14 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %15 = getelementptr inbounds ptr, ptr %14, i32 0
  store ptr %12, ptr %15, align 8
  %16 = getelementptr inbounds ptr, ptr %14, i32 1
  store ptr %13, ptr %16, align 8
  %17 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %11, ptr %14) #9
  %18 = call swiftcc i64 @"$sSlsE5countSivg"(ptr %11, ptr %17, ptr noalias nocapture swiftself %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %3, ptr %.count._value, align 8
  %19 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %20 = extractvalue %swift.metadata_response %19, 0
  %21 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %0, i64 %18, ptr noalias nocapture %5, ptr %Element, ptr %20)
  %22 = extractvalue { ptr, i64 } %21, 0
  %23 = extractvalue { ptr, i64 } %21, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %24 = insertvalue { ptr, i64 } undef, ptr %22, 0
  %25 = insertvalue { ptr, i64 } %24, i64 %23, 1
  ret { ptr, i64 } %25
}

define swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis"(ptr %0, i64 %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %6 = alloca %TSn, align 8
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %1, ptr %newValue.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %2, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %3, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element)
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.lowerBound = getelementptr inbounds %TSn, ptr %6, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %2, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %6, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %3, ptr %.upperBound._rawValue._rawValue, align 8
  %7 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 255, ptr %Element) #18
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = extractvalue %swift.metadata_response %7, 1
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %8, ptr undef) #9
  %11 = call swiftcc %swift.metadata_response @"$sSnMa"(i64 0, ptr %8, ptr %10) #18
  %12 = extractvalue %swift.metadata_response %11, 0
  %13 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %8, ptr undef) #9
  %14 = call ptr @"$sS2iSZsWl"() #18
  %15 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %16 = getelementptr inbounds ptr, ptr %15, i32 0
  store ptr %13, ptr %16, align 8
  %17 = getelementptr inbounds ptr, ptr %15, i32 1
  store ptr %14, ptr %17, align 8
  %18 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %12, ptr %15) #9
  %19 = call swiftcc i64 @"$sSlsE5countSivg"(ptr %12, ptr %18, ptr noalias nocapture swiftself %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %20 = icmp eq i64 %19, %1
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 true)
  br i1 %21, label %26, label %22

22:                                               ; preds = %entry
  %23 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.67.selected slice and assigned slice must have the same element count.", i64 67, i1 true)
  %24 = extractvalue { i64, ptr } %23, 0
  %25 = extractvalue { i64, ptr } %23, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %24, ptr %25, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 225, i32 1)
  unreachable

26:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %0, i64 %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %0, i64 %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %6 = alloca %TSn, align 8
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %7 = alloca %TSn, align 8
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %dest.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %dest.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %swifterror = alloca swifterror ptr, align 8
  store ptr null, ptr %swifterror, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %1, ptr %newValue.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %2, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %3, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.lowerBound = getelementptr inbounds %TSn, ptr %6, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %2, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %6, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %3, ptr %.upperBound._rawValue._rawValue, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 255, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = extractvalue %swift.metadata_response %8, 1
  %11 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %9, ptr undef) #9
  %12 = call swiftcc %swift.metadata_response @"$sSnMa"(i64 0, ptr %9, ptr %11) #18
  %13 = extractvalue %swift.metadata_response %12, 0
  %14 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %9, ptr undef) #9
  %15 = call ptr @"$sS2iSZsWl"() #18
  %16 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %17 = getelementptr inbounds ptr, ptr %16, i32 0
  store ptr %14, ptr %17, align 8
  %18 = getelementptr inbounds ptr, ptr %16, i32 1
  store ptr %15, ptr %18, align 8
  %19 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %13, ptr %16) #9
  %20 = call swiftcc i64 @"$sSlsE5countSivg"(ptr %13, ptr %19, ptr noalias nocapture swiftself %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %21 = icmp eq i64 %20, %1
  %22 = call i1 @llvm.expect.i1(i1 %21, i1 true)
  br i1 %22, label %27, label %23

23:                                               ; preds = %entry
  %24 = call swiftcc { i64, ptr } @"$ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %25 = extractvalue { i64, ptr } %24, 0
  %26 = extractvalue { i64, ptr } %24, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.16.Assertion failed" to i64), i64 16, i8 2, i64 %25, ptr %26, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 243, i32 1)
  unreachable

27:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 16, ptr %7)
  %.lowerBound2 = getelementptr inbounds %TSn, ptr %7, i32 0, i32 0
  %.lowerBound2._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound2, i32 0, i32 0
  %.lowerBound2._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound2._rawValue, i32 0, i32 0
  store ptr %2, ptr %.lowerBound2._rawValue._rawValue, align 8
  %.upperBound3 = getelementptr inbounds %TSn, ptr %7, i32 0, i32 1
  %.upperBound3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound3, i32 0, i32 0
  %.upperBound3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound3._rawValue, i32 0, i32 0
  store ptr %3, ptr %.upperBound3._rawValue._rawValue, align 8
  %28 = call swiftcc i64 @"$sSlsE5countSivg"(ptr %13, ptr %19, ptr noalias nocapture swiftself %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr %7)
  store i64 %28, ptr %count.debug, align 8
  store ptr %2, ptr %dest.debug, align 8
  store ptr %0, ptr %source.debug, align 8
  %spsave = call ptr @llvm.stacksave()
  %29 = alloca i8, i64 56, align 16
  %30 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %29, i32 0, i32 1
  store ptr %Element, ptr %30, align 8
  %31 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %29, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSV, ptr %31, i32 0, i32 0
  store ptr %0, ptr %._rawValue, align 8
  %32 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %29, i32 0, i32 3
  %._value = getelementptr inbounds %TSi, ptr %32, i32 0, i32 0
  store i64 %28, ptr %._value, align 8
  %33 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %29, i32 0, i32 4
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %33, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %33, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %1, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) undef, ptr %Element, i64 %28, ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_TA", ptr %29, ptr %2, ptr %Element, ptr getelementptr inbounds (%swift.full_existential_type, ptr @"$sytN", i32 0, i32 1), ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %swifterror)
  %34 = load ptr, ptr %swifterror, align 8
  %35 = icmp ne ptr %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %27
  call void @llvm.stackrestore(ptr %spsave)
  ret void

37:                                               ; preds = %27
  %38 = phi ptr [ %34, %27 ]
  store ptr null, ptr %swifterror, align 8
  unreachable
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element) #5 {
entry:
  %5 = call ptr @malloc(i64 56)
  store ptr %5, ptr %0, align 8
  %6 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 0
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 5
  store ptr %Element, ptr %Element.spill.addr, align 8
  %.spill.addr17 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 4
  store i64 %4, ptr %.spill.addr17, align 8
  %.spill.addr12 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 3
  store ptr %3, ptr %.spill.addr12, align 8
  %.spill.addr7 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 2
  store ptr %2, ptr %.spill.addr7, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %5, i32 0, i32 1
  store ptr %1, ptr %.spill.addr, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %7 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcig"(ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %8, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %9, ptr %.count._value, align 8
  %10 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.resume.0", 0
  %11 = insertvalue { ptr, ptr } %10, ptr %6, 1
  ret { ptr, ptr } %11
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %7, label %4

4:                                                ; preds = %entryresume.0
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %.reload.addr18 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 4
  %.reload19 = load i64, ptr %.reload.addr18, align 8
  %.reload.addr13 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 3
  %.reload14 = load ptr, ptr %.reload.addr13, align 8
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 2
  %.reload9 = load ptr, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %.start3 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start3, i32 0, i32 0
  %.start3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start3._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start3._rawValue._rawValue, align 8
  %.count4 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count4._value = getelementptr inbounds %TSi, ptr %.count4, i32 0, i32 0
  %6 = load i64, ptr %.count4._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis"(ptr %5, i64 %6, ptr %.reload, ptr %.reload9, ptr %.reload14, i64 %.reload19, ptr %Element.reload)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

7:                                                ; preds = %entryresume.0
  %Element.reload.addr22 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload23 = load ptr, ptr %Element.reload.addr22, align 8
  %.reload.addr20 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 4
  %.reload21 = load i64, ptr %.reload.addr20, align 8
  %.reload.addr15 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 3
  %.reload16 = load ptr, ptr %.reload.addr15, align 8
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 2
  %.reload11 = load ptr, ptr %.reload.addr10, align 8
  %.reload.addr5 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM.Frame", ptr %2, i32 0, i32 1
  %.reload6 = load ptr, ptr %.reload.addr5, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %8 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %9 = load i64, ptr %.count2._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis"(ptr %8, i64 %9, ptr %.reload6, ptr %.reload11, ptr %.reload16, i64 %.reload21, ptr %Element.reload23)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %7
  call void @free(ptr %2)
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %4, i64 %5, ptr %Element, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store ptr %2, ptr %source.debug, align 8
  store i64 %3, ptr %count.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %5, ptr %newValue.debug.count._value, align 8
  %8 = alloca i8, i64 48, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSp, ptr %10, i32 0, i32 0
  store ptr %1, ptr %._rawValue, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %11, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %11, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %5, ptr %.count._value, align 8
  call swiftcc void @"$sSV17withMemoryRebound2to8capacity_q_xm_Siq_SPyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %3, ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_ySPyxGXEfU_TA", ptr %8, ptr %2, ptr %Element, ptr getelementptr inbounds (%swift.full_existential_type, ptr @"$sytN", i32 0, i32 1), ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %12 = load ptr, ptr %7, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %entry
  ret void

15:                                               ; preds = %entry
  %16 = phi ptr [ %12, %entry ]
  store ptr null, ptr %7, align 8
  unreachable
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_ySPyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %dest.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %dest.debug, i8 0, i64 8, i1 false)
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %source.debug, align 8
  store ptr %2, ptr %dest.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %4, ptr %newValue.debug.count._value, align 8
  call swiftcc void @"$sSp6assign4from5countySPyxG_SitF"(ptr %1, i64 %4, ptr %2, ptr %Element)
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSV17withMemoryRebound2to8capacity_q_xm_Siq_SPyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %5, ptr %T, ptr %Result, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %T1 = alloca ptr, align 8
  %Result2 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %Result, ptr %Result2, align 8
  %8 = ptrtoint ptr %5 to i64
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %10, align 8, !invariant.load !17
  %11 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %11, 255
  %12 = add i64 %flags.alignmentMask, 1
  %13 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %12, i64 1)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %16, label %28, label %17

17:                                               ; preds = %entry
  %18 = and i64 %8, %14
  %19 = icmp eq i64 %18, 0
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 true)
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.50.self must be a properly aligned pointer for type T" to i64), i64 50, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 380, i32 1)
  unreachable

22:                                               ; preds = %17
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %23 = load ptr, ptr %7, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = phi ptr [ %23, %22 ]
  store ptr null, ptr %7, align 8
  store ptr %26, ptr %7, align 8
  ret void

27:                                               ; preds = %22
  ret void

28:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %5, ptr %T, ptr %Result, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %T1 = alloca ptr, align 8
  %Result2 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %Result, ptr %Result2, align 8
  %8 = ptrtoint ptr %5 to i64
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %10, align 8, !invariant.load !17
  %11 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %11, 255
  %12 = add i64 %flags.alignmentMask, 1
  %13 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %12, i64 1)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %16, label %28, label %17

17:                                               ; preds = %entry
  %18 = and i64 %8, %14
  %19 = icmp eq i64 %18, 0
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 true)
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.50.self must be a properly aligned pointer for type T" to i64), i64 50, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 941, i32 1)
  unreachable

22:                                               ; preds = %17
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %23 = load ptr, ptr %7, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = phi ptr [ %23, %22 ]
  store ptr null, ptr %7, align 8
  store ptr %26, ptr %7, align 8
  ret void

27:                                               ; preds = %22
  ret void

28:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element) #5 {
entry:
  %5 = call ptr @malloc(i64 56)
  store ptr %5, ptr %0, align 8
  %6 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 0
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 5
  store ptr %Element, ptr %Element.spill.addr, align 8
  %.spill.addr17 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 4
  store i64 %4, ptr %.spill.addr17, align 8
  %.spill.addr12 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 3
  store ptr %3, ptr %.spill.addr12, align 8
  %.spill.addr7 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 2
  store ptr %2, ptr %.spill.addr7, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %5, i32 0, i32 1
  store ptr %1, ptr %.spill.addr, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %7 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig"(ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %8, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %9, ptr %.count._value, align 8
  %10 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.resume.0", 0
  %11 = insertvalue { ptr, ptr } %10, ptr %6, 1
  ret { ptr, ptr } %11
}

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %7, label %4

4:                                                ; preds = %entryresume.0
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %.reload.addr18 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 4
  %.reload19 = load i64, ptr %.reload.addr18, align 8
  %.reload.addr13 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 3
  %.reload14 = load ptr, ptr %.reload.addr13, align 8
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 2
  %.reload9 = load ptr, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %.start3 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start3, i32 0, i32 0
  %.start3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start3._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start3._rawValue._rawValue, align 8
  %.count4 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count4._value = getelementptr inbounds %TSi, ptr %.count4, i32 0, i32 0
  %6 = load i64, ptr %.count4._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %5, i64 %6, ptr %.reload, ptr %.reload9, ptr %.reload14, i64 %.reload19, ptr %Element.reload)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

7:                                                ; preds = %entryresume.0
  %Element.reload.addr22 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload23 = load ptr, ptr %Element.reload.addr22, align 8
  %.reload.addr20 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 4
  %.reload21 = load i64, ptr %.reload.addr20, align 8
  %.reload.addr15 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 3
  %.reload16 = load ptr, ptr %.reload.addr15, align 8
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 2
  %.reload11 = load ptr, ptr %.reload.addr10, align 8
  %.reload.addr5 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload6 = load ptr, ptr %.reload.addr5, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %8 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %9 = load i64, ptr %.count2._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %8, i64 %9, ptr %.reload6, ptr %.reload11, ptr %.reload16, i64 %.reload21, ptr %Element.reload23)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %7
  call void @free(ptr %2)
  ret void
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn.0, align 8
  %5 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %3, align 8
  store ptr %0, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %7, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr noalias nocapture %5, ptr %7, ptr %8, ptr noalias nocapture swiftself %0, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %9 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %11 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcig"(ptr %9, ptr %10, ptr %1, i64 %2, ptr %Element)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  %14 = insertvalue { ptr, i64 } undef, ptr %12, 0
  %15 = insertvalue { ptr, i64 } %14, i64 %13, 1
  ret { ptr, i64 } %15
}

define weak_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %3, i64 %4, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %6 = alloca %TSn.0, align 8
  %7 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %1, ptr %newValue.debug.count._value, align 8
  store ptr %2, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr %7)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %6, ptr noalias nocapture %7, ptr %9, ptr %10, ptr noalias nocapture swiftself %2, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %7)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %6, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %6, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis"(ptr %0, i64 %1, ptr %11, ptr %12, ptr %3, i64 %4, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %13 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>", i64 -1
  %"some RangeExpression<Index>.valueWitnesses" = load ptr, ptr %13, align 8, !invariant.load !17, !dereferenceable !18
  %14 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses", i32 1
  %15 = load ptr, ptr %14, align 8, !invariant.load !17
  call void %15(ptr noalias %2, ptr %"some RangeExpression<Index>") #6
  ret void
}

; Function Attrs: noinline
define weak_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #5 {
entry:
  %4 = call ptr @malloc(i64 96)
  store ptr %4, ptr %0, align 8
  %5 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 0
  %"some RangeExpression<Index>.RangeExpression.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 5
  store ptr %"some RangeExpression<Index>.RangeExpression", ptr %"some RangeExpression<Index>.RangeExpression.spill.addr", align 8
  %"some RangeExpression<Index>.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 4
  store ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.spill.addr", align 8
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 3
  store ptr %Element, ptr %Element.spill.addr, align 8
  %.spill.addr7 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 2
  store i64 %3, ptr %.spill.addr7, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 1
  store ptr %2, ptr %.spill.addr, align 8
  %6 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>", i64 -1
  %"some RangeExpression<Index>.valueWitnesses" = load ptr, ptr %6, align 8, !invariant.load !17, !dereferenceable !18
  %"some RangeExpression<Index>.valueWitnesses.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 6
  store ptr %"some RangeExpression<Index>.valueWitnesses", ptr %"some RangeExpression<Index>.valueWitnesses.spill.addr", align 8
  %7 = getelementptr inbounds %swift.vwtable, ptr %"some RangeExpression<Index>.valueWitnesses", i32 0, i32 8
  %size = load i64, ptr %7, align 8, !invariant.load !17
  %8 = call ptr @malloc(i64 %size)
  %.spill.addr20 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 7
  store ptr %8, ptr %.spill.addr20, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %8)
  %9 = call ptr @malloc(i64 %size)
  %.spill.addr29 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 8
  store ptr %9, ptr %.spill.addr29, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %9)
  %10 = call ptr @malloc(i64 %size)
  %.spill.addr38 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 9
  store ptr %10, ptr %.spill.addr38, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %10)
  %11 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses", i32 2
  %12 = load ptr, ptr %11, align 8, !invariant.load !17
  %.spill.addr47 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 10
  store ptr %12, ptr %.spill.addr47, align 8
  %13 = call ptr %12(ptr noalias %10, ptr noalias %1, ptr %"some RangeExpression<Index>") #6
  %14 = call ptr %12(ptr noalias %9, ptr noalias %10, ptr %"some RangeExpression<Index>") #6
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %15 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %10, ptr %2, i64 %3, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  %16 = extractvalue { ptr, i64 } %15, 0
  %17 = extractvalue { ptr, i64 } %15, 1
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %16, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %17, ptr %.count._value, align 8
  %18 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.resume.0", 0
  %19 = insertvalue { ptr, ptr } %18, ptr %5, 1
  ret { ptr, ptr } %19
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %9, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr45 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload46 = load ptr, ptr %.reload.addr45, align 8
  %.reload.addr41 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload42 = load ptr, ptr %.reload.addr41, align 8
  %.reload.addr36 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload37 = load ptr, ptr %.reload.addr36, align 8
  %.reload.addr32 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload33 = load ptr, ptr %.reload.addr32, align 8
  %.reload.addr27 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload28 = load ptr, ptr %.reload.addr27, align 8
  %.reload.addr23 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload24 = load ptr, ptr %.reload.addr23, align 8
  %"some RangeExpression<Index>.valueWitnesses.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 6
  %"some RangeExpression<Index>.valueWitnesses.reload" = load ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload.addr", align 8
  %"some RangeExpression<Index>.RangeExpression.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 5
  %"some RangeExpression<Index>.RangeExpression.reload" = load ptr, ptr %"some RangeExpression<Index>.RangeExpression.reload.addr", align 8
  %"some RangeExpression<Index>.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 4
  %"some RangeExpression<Index>.reload" = load ptr, ptr %"some RangeExpression<Index>.reload.addr", align 8
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 3
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 2
  %.reload9 = load i64, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %.start3 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start3, i32 0, i32 0
  %.start3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start3._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start3._rawValue._rawValue, align 8
  %.count4 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count4._value = getelementptr inbounds %TSi, ptr %.count4, i32 0, i32 0
  %6 = load i64, ptr %.count4._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %5, i64 %6, ptr noalias nocapture %.reload33, ptr %.reload, i64 %.reload9, ptr %Element.reload, ptr %"some RangeExpression<Index>.reload", ptr %"some RangeExpression<Index>.RangeExpression.reload")
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %7 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload", i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %.reload42, ptr %"some RangeExpression<Index>.reload") #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload42)
  call void @free(ptr %.reload46)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload33)
  call void @free(ptr %.reload37)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload24)
  call void @free(ptr %.reload28)
  br label %CoroEnd

9:                                                ; preds = %entryresume.0
  %.reload.addr48 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 10
  %.reload49 = load ptr, ptr %.reload.addr48, align 8
  %.reload.addr43 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload44 = load ptr, ptr %.reload.addr43, align 8
  %.reload.addr39 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload40 = load ptr, ptr %.reload.addr39, align 8
  %.reload.addr34 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload35 = load ptr, ptr %.reload.addr34, align 8
  %.reload.addr30 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload31 = load ptr, ptr %.reload.addr30, align 8
  %.reload.addr25 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload26 = load ptr, ptr %.reload.addr25, align 8
  %.reload.addr21 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload22 = load ptr, ptr %.reload.addr21, align 8
  %"some RangeExpression<Index>.valueWitnesses.reload.addr18" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 6
  %"some RangeExpression<Index>.valueWitnesses.reload19" = load ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload.addr18", align 8
  %"some RangeExpression<Index>.RangeExpression.reload.addr16" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 5
  %"some RangeExpression<Index>.RangeExpression.reload17" = load ptr, ptr %"some RangeExpression<Index>.RangeExpression.reload.addr16", align 8
  %"some RangeExpression<Index>.reload.addr14" = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 4
  %"some RangeExpression<Index>.reload15" = load ptr, ptr %"some RangeExpression<Index>.reload.addr14", align 8
  %Element.reload.addr12 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 3
  %Element.reload13 = load ptr, ptr %Element.reload.addr12, align 8
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 2
  %.reload11 = load i64, ptr %.reload.addr10, align 8
  %.reload.addr5 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 1
  %.reload6 = load ptr, ptr %.reload.addr5, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %11 = load i64, ptr %.count2._value, align 8
  %12 = call ptr %.reload49(ptr noalias %.reload22, ptr noalias %.reload31, ptr %"some RangeExpression<Index>.reload15") #6
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %10, i64 %11, ptr noalias nocapture %.reload22, ptr %.reload6, i64 %.reload11, ptr %Element.reload13, ptr %"some RangeExpression<Index>.reload15", ptr %"some RangeExpression<Index>.RangeExpression.reload17")
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload19", i32 1
  %14 = load ptr, ptr %13, align 8, !invariant.load !17
  call void %14(ptr noalias %.reload31, ptr %"some RangeExpression<Index>.reload15") #6
  call void %14(ptr noalias %.reload40, ptr %"some RangeExpression<Index>.reload15") #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload40)
  call void @free(ptr %.reload44)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload31)
  call void @free(ptr %.reload35)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload22)
  call void @free(ptr %.reload26)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %9
  call void @free(ptr %2)
  ret void
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn.0, align 8
  %5 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %3, align 8
  store ptr %0, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %7, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr noalias nocapture %5, ptr %7, ptr %8, ptr noalias nocapture swiftself %0, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %9 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %11 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig"(ptr %9, ptr %10, ptr %1, i64 %2, ptr %Element)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  %14 = insertvalue { ptr, i64 } undef, ptr %12, 0
  %15 = insertvalue { ptr, i64 } %14, i64 %13, 1
  ret { ptr, i64 } %15
}

define weak_odr hidden swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %3, i64 %4, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %6 = alloca %TSn.0, align 8
  %7 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %1, ptr %newValue.debug.count._value, align 8
  store ptr %2, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr %7)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %6, ptr noalias nocapture %7, ptr %9, ptr %10, ptr noalias nocapture swiftself %2, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %7)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %6, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %6, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %0, i64 %1, ptr %11, ptr %12, ptr %3, i64 %4, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %13 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>", i64 -1
  %"some RangeExpression<Index>.valueWitnesses" = load ptr, ptr %13, align 8, !invariant.load !17, !dereferenceable !18
  %14 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses", i32 1
  %15 = load ptr, ptr %14, align 8, !invariant.load !17
  call void %15(ptr noalias %2, ptr %"some RangeExpression<Index>") #6
  ret void
}

; Function Attrs: noinline
define weak_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #5 {
entry:
  %4 = call ptr @malloc(i64 96)
  store ptr %4, ptr %0, align 8
  %5 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 0
  %"some RangeExpression<Index>.RangeExpression.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 5
  store ptr %"some RangeExpression<Index>.RangeExpression", ptr %"some RangeExpression<Index>.RangeExpression.spill.addr", align 8
  %"some RangeExpression<Index>.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 4
  store ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.spill.addr", align 8
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 3
  store ptr %Element, ptr %Element.spill.addr, align 8
  %.spill.addr7 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 2
  store i64 %3, ptr %.spill.addr7, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 1
  store ptr %2, ptr %.spill.addr, align 8
  %6 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>", i64 -1
  %"some RangeExpression<Index>.valueWitnesses" = load ptr, ptr %6, align 8, !invariant.load !17, !dereferenceable !18
  %"some RangeExpression<Index>.valueWitnesses.spill.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 6
  store ptr %"some RangeExpression<Index>.valueWitnesses", ptr %"some RangeExpression<Index>.valueWitnesses.spill.addr", align 8
  %7 = getelementptr inbounds %swift.vwtable, ptr %"some RangeExpression<Index>.valueWitnesses", i32 0, i32 8
  %size = load i64, ptr %7, align 8, !invariant.load !17
  %8 = call ptr @malloc(i64 %size)
  %.spill.addr20 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 7
  store ptr %8, ptr %.spill.addr20, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %8)
  %9 = call ptr @malloc(i64 %size)
  %.spill.addr29 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 8
  store ptr %9, ptr %.spill.addr29, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %9)
  %10 = call ptr @malloc(i64 %size)
  %.spill.addr38 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 9
  store ptr %10, ptr %.spill.addr38, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %10)
  %11 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses", i32 2
  %12 = load ptr, ptr %11, align 8, !invariant.load !17
  %.spill.addr47 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %4, i32 0, i32 10
  store ptr %12, ptr %.spill.addr47, align 8
  %13 = call ptr %12(ptr noalias %10, ptr noalias %1, ptr %"some RangeExpression<Index>") #6
  %14 = call ptr %12(ptr noalias %9, ptr noalias %10, ptr %"some RangeExpression<Index>") #6
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %15 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %10, ptr %2, i64 %3, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  %16 = extractvalue { ptr, i64 } %15, 0
  %17 = extractvalue { ptr, i64 } %15, 1
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %16, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %17, ptr %.count._value, align 8
  %18 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.resume.0", 0
  %19 = insertvalue { ptr, ptr } %18, ptr %5, 1
  ret { ptr, ptr } %19
}

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %9, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr45 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload46 = load ptr, ptr %.reload.addr45, align 8
  %.reload.addr41 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload42 = load ptr, ptr %.reload.addr41, align 8
  %.reload.addr36 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload37 = load ptr, ptr %.reload.addr36, align 8
  %.reload.addr32 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload33 = load ptr, ptr %.reload.addr32, align 8
  %.reload.addr27 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload28 = load ptr, ptr %.reload.addr27, align 8
  %.reload.addr23 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload24 = load ptr, ptr %.reload.addr23, align 8
  %"some RangeExpression<Index>.valueWitnesses.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 6
  %"some RangeExpression<Index>.valueWitnesses.reload" = load ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload.addr", align 8
  %"some RangeExpression<Index>.RangeExpression.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 5
  %"some RangeExpression<Index>.RangeExpression.reload" = load ptr, ptr %"some RangeExpression<Index>.RangeExpression.reload.addr", align 8
  %"some RangeExpression<Index>.reload.addr" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 4
  %"some RangeExpression<Index>.reload" = load ptr, ptr %"some RangeExpression<Index>.reload.addr", align 8
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 3
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 2
  %.reload9 = load i64, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %.start3 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start3, i32 0, i32 0
  %.start3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start3._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start3._rawValue._rawValue, align 8
  %.count4 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count4._value = getelementptr inbounds %TSi, ptr %.count4, i32 0, i32 0
  %6 = load i64, ptr %.count4._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %5, i64 %6, ptr noalias nocapture %.reload33, ptr %.reload, i64 %.reload9, ptr %Element.reload, ptr %"some RangeExpression<Index>.reload", ptr %"some RangeExpression<Index>.RangeExpression.reload")
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %7 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload", i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %.reload42, ptr %"some RangeExpression<Index>.reload") #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload42)
  call void @free(ptr %.reload46)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload33)
  call void @free(ptr %.reload37)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload24)
  call void @free(ptr %.reload28)
  br label %CoroEnd

9:                                                ; preds = %entryresume.0
  %.reload.addr48 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 10
  %.reload49 = load ptr, ptr %.reload.addr48, align 8
  %.reload.addr43 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload44 = load ptr, ptr %.reload.addr43, align 8
  %.reload.addr39 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 9
  %.reload40 = load ptr, ptr %.reload.addr39, align 8
  %.reload.addr34 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload35 = load ptr, ptr %.reload.addr34, align 8
  %.reload.addr30 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 8
  %.reload31 = load ptr, ptr %.reload.addr30, align 8
  %.reload.addr25 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload26 = load ptr, ptr %.reload.addr25, align 8
  %.reload.addr21 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 7
  %.reload22 = load ptr, ptr %.reload.addr21, align 8
  %"some RangeExpression<Index>.valueWitnesses.reload.addr18" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 6
  %"some RangeExpression<Index>.valueWitnesses.reload19" = load ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload.addr18", align 8
  %"some RangeExpression<Index>.RangeExpression.reload.addr16" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 5
  %"some RangeExpression<Index>.RangeExpression.reload17" = load ptr, ptr %"some RangeExpression<Index>.RangeExpression.reload.addr16", align 8
  %"some RangeExpression<Index>.reload.addr14" = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 4
  %"some RangeExpression<Index>.reload15" = load ptr, ptr %"some RangeExpression<Index>.reload.addr14", align 8
  %Element.reload.addr12 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 3
  %Element.reload13 = load ptr, ptr %Element.reload.addr12, align 8
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 2
  %.reload11 = load i64, ptr %.reload.addr10, align 8
  %.reload.addr5 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luiM.Frame", ptr %2, i32 0, i32 1
  %.reload6 = load ptr, ptr %.reload.addr5, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %11 = load i64, ptr %.count2._value, align 8
  %12 = call ptr %.reload49(ptr noalias %.reload22, ptr noalias %.reload31, ptr %"some RangeExpression<Index>.reload15") #6
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luis"(ptr %10, i64 %11, ptr noalias nocapture %.reload22, ptr %.reload6, i64 %.reload11, ptr %Element.reload13, ptr %"some RangeExpression<Index>.reload15", ptr %"some RangeExpression<Index>.RangeExpression.reload17")
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = getelementptr inbounds ptr, ptr %"some RangeExpression<Index>.valueWitnesses.reload19", i32 1
  %14 = load ptr, ptr %13, align 8, !invariant.load !17
  call void %14(ptr noalias %.reload31, ptr %"some RangeExpression<Index>.reload15") #6
  call void %14(ptr noalias %.reload40, ptr %"some RangeExpression<Index>.reload15") #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload40)
  call void @free(ptr %.reload44)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload31)
  call void @free(ptr %.reload35)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload22)
  call void @free(ptr %.reload26)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %9
  call void @free(ptr %2)
  ret void
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %x.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %x.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %x.debug)
  %x.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 0
  store ptr %0, ptr %x.debug.fn, align 8
  %x.debug.data = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 1
  store ptr %1, ptr %x.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %2, i64 %3, ptr %Element)
  %5 = extractvalue { ptr, ptr } %4, 0
  %6 = extractvalue { ptr, ptr } %4, 1
  %7 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcig"(ptr %5, ptr %6, ptr %2, i64 %3, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1
  ret { ptr, i64 } %11
}

define weak_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEcis"(ptr %0, i64 %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %newValue.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newValue.debug, i8 0, i64 16, i1 false)
  %x.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %x.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %newValue.debug)
  %newValue.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 0
  %newValue.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %newValue.debug.start, i32 0, i32 0
  %newValue.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %newValue.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %newValue.debug.start._rawValue._rawValue, align 8
  %newValue.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %newValue.debug, i32 0, i32 1
  %newValue.debug.count._value = getelementptr inbounds %TSi, ptr %newValue.debug.count, i32 0, i32 0
  store i64 %1, ptr %newValue.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %x.debug)
  %x.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 0
  store ptr %2, ptr %x.debug.fn, align 8
  %x.debug.data = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 1
  store ptr %3, ptr %x.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %6 = icmp eq i64 %5, %1
  %7 = call i1 @llvm.expect.i1(i1 %6, i1 true)
  br i1 %7, label %12, label %8

8:                                                ; preds = %entry
  %9 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %10 = extractvalue { i64, ptr } %9, 0
  %11 = extractvalue { i64, ptr } %9, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %10, ptr %11, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 282, i32 1)
  unreachable

12:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %13 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %4, i64 %5, ptr %Element)
  %14 = extractvalue { ptr, ptr } %13, 0
  %15 = extractvalue { ptr, ptr } %13, 1
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcis"(ptr %0, i64 %1, ptr %14, ptr %15, ptr %4, i64 %5, ptr %Element)
  ret void
}

; Function Attrs: noinline
define weak_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element) #5 {
entry:
  %5 = call ptr @malloc(i64 56)
  store ptr %5, ptr %0, align 8
  %6 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 0
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 5
  store ptr %Element, ptr %Element.spill.addr, align 8
  %.spill.addr17 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 4
  store i64 %4, ptr %.spill.addr17, align 8
  %.spill.addr12 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 3
  store ptr %3, ptr %.spill.addr12, align 8
  %.spill.addr7 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 2
  store ptr %2, ptr %.spill.addr7, align 8
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %5, i32 0, i32 1
  store ptr %1, ptr %.spill.addr, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %7 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEcig"(ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %8, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %9, ptr %.count._value, align 8
  %10 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.resume.0", 0
  %11 = insertvalue { ptr, ptr } %10, ptr %6, 1
  ret { ptr, ptr } %11
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %7, label %4

4:                                                ; preds = %entryresume.0
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %.reload.addr18 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 4
  %.reload19 = load i64, ptr %.reload.addr18, align 8
  %.reload.addr13 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 3
  %.reload14 = load ptr, ptr %.reload.addr13, align 8
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 2
  %.reload9 = load ptr, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %.start3 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start3._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start3, i32 0, i32 0
  %.start3._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start3._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start3._rawValue._rawValue, align 8
  %.count4 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count4._value = getelementptr inbounds %TSi, ptr %.count4, i32 0, i32 0
  %6 = load i64, ptr %.count4._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEcis"(ptr %5, i64 %6, ptr %.reload, ptr %.reload9, ptr %.reload14, i64 %.reload19, ptr %Element.reload)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

7:                                                ; preds = %entryresume.0
  %Element.reload.addr22 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 5
  %Element.reload23 = load ptr, ptr %Element.reload.addr22, align 8
  %.reload.addr20 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 4
  %.reload21 = load i64, ptr %.reload.addr20, align 8
  %.reload.addr15 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 3
  %.reload16 = load ptr, ptr %.reload.addr15, align 8
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 2
  %.reload11 = load ptr, ptr %.reload.addr10, align 8
  %.reload.addr5 = getelementptr inbounds %"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEciM.Frame", ptr %2, i32 0, i32 1
  %.reload6 = load ptr, ptr %.reload.addr5, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %8 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %9 = load i64, ptr %.count2._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGys15UnboundedRange_OXEcis"(ptr %8, i64 %9, ptr %.reload6, ptr %.reload11, ptr %.reload16, i64 %.reload21, ptr %Element.reload23)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %7
  call void @free(ptr %2)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %8 = alloca i8, i64 64, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i32 1
  store ptr %R, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %8, i32 0, i32 2
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %11, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %11, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %8, i32 0, i32 3
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %12, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %12, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %4, ptr @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_TA", ptr %8, ptr %7, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %entry
  %16 = getelementptr inbounds ptr, ptr %R, i64 -1
  %R.valueWitnesses = load ptr, ptr %16, align 8, !invariant.load !17, !dereferenceable !18
  %17 = getelementptr inbounds ptr, ptr %R.valueWitnesses, i32 7
  %18 = load ptr, ptr %17, align 8, !invariant.load !17
  call void %18(ptr noalias %0, i32 0, i32 1, ptr %R) #6
  ret void

19:                                               ; preds = %entry
  %20 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %20, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %4, ptr %5, ptr %Element, ptr %R, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %ptr.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %ptr.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %buf = alloca %TSr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buf, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %ptr.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %4, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %5, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %buf)
  %8 = ptrtoint ptr %1 to i64
  %9 = call swiftcc { i64, i64 } @"$sSr5start5countSryxGSpyxGSg_SitcfC"(i64 %8, i64 %3, ptr %Element)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  %buf._position = getelementptr inbounds %TSr, ptr %buf, i32 0, i32 0
  store i64 %10, ptr %buf._position, align 8
  %buf.count = getelementptr inbounds %TSr, ptr %buf, i32 0, i32 1
  %buf.count._value = getelementptr inbounds %TSi, ptr %buf.count, i32 0, i32 0
  store i64 %11, ptr %buf.count._value, align 8
  call swiftcc void %4(ptr noalias nocapture sret(%swift.opaque) %0, ptr nocapture dereferenceable(16) %buf, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %12 = load ptr, ptr %7, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %entry
  call swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_6$deferL_yyr__lF"(ptr nocapture dereferenceable(16) %buf, ptr %1, ptr %2, i64 %3, ptr %Element, ptr %R)
  call void @llvm.lifetime.end.p0(i64 16, ptr %buf)
  ret void

15:                                               ; preds = %entry
  %16 = phi ptr [ %12, %entry ]
  store ptr null, ptr %7, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_6$deferL_yyr__lF"(ptr nocapture dereferenceable(16) %buf, ptr %1, ptr %2, i64 %3, ptr %Element, ptr %R)
  call void @llvm.lifetime.end.p0(i64 16, ptr %buf)
  store ptr %16, ptr %7, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_6$deferL_yyr__lF"(ptr nocapture dereferenceable(16) %0, ptr %1, ptr %2, i64 %3, ptr %Element, ptr %R) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %buf.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buf.debug, i8 0, i64 8, i1 false)
  %ptr.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %ptr.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSq, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSq, align 8
  %7 = alloca %TSi, align 8
  %conditional.requirement.buffer = alloca [1 x ptr], align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %0, ptr %buf.debug, align 8
  store ptr %1, ptr %ptr.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %._position = getelementptr inbounds %TSr, ptr %0, i32 0, i32 0
  %8 = load i64, ptr %._position, align 8
  %.count = getelementptr inbounds %TSr, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %9 = load i64, ptr %.count._value, align 8
  %10 = call swiftcc i64 @"$sSr11baseAddressSpyxGSgvg"(i64 %8, i64 %9, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  store i64 %10, ptr %4, align 8
  %.count3 = getelementptr inbounds %TSr, ptr %0, i32 0, i32 1
  %.count3._value = getelementptr inbounds %TSi, ptr %.count3, i32 0, i32 0
  %11 = load i64, ptr %.count3._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._value = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  store i64 %11, ptr %._value, align 8
  %12 = ptrtoint ptr %1 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  store i64 %12, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._value4 = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  store i64 %3, ptr %._value4, align 8
  %13 = call swiftcc %swift.metadata_response @"$sSpMa"(i64 255, ptr %Element) #18
  %14 = extractvalue %swift.metadata_response %13, 0
  %15 = extractvalue %swift.metadata_response %13, 1
  %16 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %14) #18
  %17 = extractvalue %swift.metadata_response %16, 0
  %18 = call ptr @swift_getWitnessTable(ptr @"$sSpyxGSQsMc", ptr %14, ptr undef) #9
  %19 = getelementptr inbounds [1 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %20 = getelementptr inbounds ptr, ptr %19, i32 0
  store ptr %18, ptr %20, align 8
  %21 = call ptr @swift_getWitnessTable(ptr @"$sxSgSQsSQRzlMc", ptr %17, ptr %19) #9
  %22 = call swiftcc i1 @"$ss2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF"(ptr noalias nocapture %4, ptr noalias nocapture %5, ptr noalias nocapture %6, ptr noalias nocapture %7, ptr %17, ptr @"$sSiN", ptr %21, ptr @"$sSiSQsWP")
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %23 = call i1 @llvm.expect.i1(i1 %22, i1 true)
  br i1 %23, label %28, label %24

24:                                               ; preds = %entry
  %25 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.94.MutableBufferView.withContiguousMutableStorageIfAvailable: replacing the buffer is not allowed", i64 94, i1 true)
  %26 = extractvalue { i64, ptr } %25, 0
  %27 = extractvalue { i64, ptr } %25, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %26, ptr %27, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 295, i32 1)
  unreachable

28:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl10startIndex0E0QzvgTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl8endIndex0E0QzvgTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #5 {
entry:
  %3 = call ptr @malloc(i64 40)
  store ptr %3, ptr %0, align 8
  %4 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %3, i32 0, i32 0
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %6 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %7 = load i64, ptr %.count._value, align 8
  %8 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %8)
  %9 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %9, align 8, !invariant.load !17
  %10 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir"(ptr noalias dereferenceable(32) %8, ptr %5, ptr %6, i64 %7, ptr %"\CF\84_0_0") #19
  %11 = extractvalue { ptr, ptr } %10, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %3, i32 0, i32 1
  store ptr %11, ptr %.spill.addr, align 8
  %12 = extractvalue { ptr, ptr } %10, 1
  %13 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.resume.0", 0
  %14 = insertvalue { ptr, ptr } %13, ptr %12, 1
  ret { ptr, ptr } %14
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr1 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 1
  %.reload2 = load ptr, ptr %.reload.addr1, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload2(ptr noalias dereferenceable(32) %7, i1 true)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %Element.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  store ptr %Element, ptr %Element.spill.addr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %Element.valueWitnesses.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  store ptr %Element.valueWitnesses, ptr %Element.valueWitnesses.spill.addr, align 8
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %5, align 8, !invariant.load !17
  %6 = call ptr @malloc(i64 %size)
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  store ptr %6, ptr %.spill.addr, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %6)
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %6, ptr %1, ptr %2, i64 %3, ptr %Element)
  %7 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.resume.0", 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %position.debug = alloca ptr, align 8
  %Element1 = alloca ptr, align 8
  br i1 %1, label %5, label %2

2:                                                ; preds = %entryresume.0
  %.reload.addr10 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload11 = load ptr, ptr %.reload.addr10, align 8
  %.reload.addr6 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload7 = load ptr, ptr %.reload.addr6, align 8
  %Element.valueWitnesses.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  %Element.valueWitnesses.reload = load ptr, ptr %Element.valueWitnesses.reload.addr, align 8
  %Element.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %3 = getelementptr inbounds ptr, ptr %Element.valueWitnesses.reload, i32 1
  %4 = load ptr, ptr %3, align 8, !invariant.load !17
  call void %4(ptr noalias %.reload7, ptr %Element.reload) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload7)
  call void @free(ptr %.reload11)
  br label %CoroEnd

5:                                                ; preds = %entryresume.0
  %.reload.addr8 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload9 = load ptr, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload = load ptr, ptr %.reload.addr, align 8
  %Element.valueWitnesses.reload.addr4 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  %Element.valueWitnesses.reload5 = load ptr, ptr %Element.valueWitnesses.reload.addr4, align 8
  %Element.reload.addr2 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  %Element.reload3 = load ptr, ptr %Element.reload.addr2, align 8
  %6 = getelementptr inbounds ptr, ptr %Element.valueWitnesses.reload5, i32 1
  %7 = load ptr, ptr %6, align 8, !invariant.load !17
  call void %7(ptr noalias %.reload, ptr %Element.reload3) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload)
  call void @free(ptr %.reload9)
  br label %CoroEnd

CoroEnd:                                          ; preds = %2, %5
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASly11SubSequenceQzSny5IndexQzGcigTW"(ptr noalias nocapture sret(%T10BufferView07MutableaB0V) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.lowerBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcig"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %9 = extractvalue { ptr, i64 } %8, 0
  %10 = extractvalue { ptr, i64 } %8, 1
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  store ptr %9, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  store i64 %10, ptr %.count2._value, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl7indices7IndicesQzvgTW"(ptr noalias nocapture sret(%TSn) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %.lowerBound = getelementptr inbounds %TSn, ptr %0, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %6, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %0, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %7, ptr %.upperBound._rawValue._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferView07MutableaB0VyxGSlAASl7isEmptySbvgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %1 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %2 = load i64, ptr %.count._value, align 8
  %3 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %3, align 8, !invariant.load !17
  %4 = call swiftcc i1 @"$s10BufferView07MutableaB0V7isEmptySbvg"(ptr %1, i64 %2, ptr %"\CF\84_0_0") #19
  ret i1 %4
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSlAASl5countSivgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %1 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %2 = load i64, ptr %.count._value, align 8
  %3 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %3, align 8, !invariant.load !17
  %4 = call swiftcc i64 @"$s10BufferView07MutableaB0V5countSivg"(ptr %1, i64 %2, ptr %"\CF\84_0_0") #19
  ret i64 %4
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl30_customIndexOfEquatableElementy0E0QzSgSg0H0QzFTW"(ptr noalias nocapture sret(%TSq.11) %0, ptr noalias nocapture %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE30_customIndexOfEquatableElementy0B0QzSgSg0E0QzF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl34_customLastIndexOfEquatableElementy0F0QzSgSg0I0QzFTW"(ptr noalias nocapture sret(%TSq.11) %0, ptr noalias nocapture %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl5index_8offsetBy5IndexQzAH_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW"(ptr noalias nocapture sret(%TSq.12) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %5 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", ptr %Self, ptr undef) #9
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %5, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSlAASl8distance4from2toSi5IndexQz_AItFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyAHGtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyAHGtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AItFTW"(ptr noalias nocapture dereferenceable(16) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl5index5after5IndexQzAH_tFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %5 = load i64, ptr %.count._value, align 8
  %6 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %6, align 8, !invariant.load !17
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index5afterAA0aB5IndexVyxGAH_tF"(ptr %3, ptr %4, i64 %5, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %7, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSlAASl9formIndex5aftery0E0Qzz_tFTW"(ptr nocapture dereferenceable(8) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0V9formIndex5afteryAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzcisTW"(ptr noalias nocapture %0, ptr noalias nocapture dereferenceable(8) %1, ptr nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %5 = load i64, ptr %.count._value, align 8
  %6 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %6, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcis"(ptr noalias nocapture %0, ptr %3, ptr %4, i64 %5, ptr %"\CF\84_0_0") #19
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture dereferenceable(8) %1, ptr nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #5 {
entry:
  %3 = call ptr @malloc(i64 40)
  store ptr %3, ptr %0, align 8
  %4 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame", ptr %3, i32 0, i32 0
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %6 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %7 = load i64, ptr %.count._value, align 8
  %8 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %8)
  %9 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %9, align 8, !invariant.load !17
  %10 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32) %8, ptr %5, ptr %6, i64 %7, ptr %"\CF\84_0_0") #19
  %11 = extractvalue { ptr, ptr } %10, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame", ptr %3, i32 0, i32 1
  store ptr %11, ptr %.spill.addr, align 8
  %12 = extractvalue { ptr, ptr } %10, 1
  %13 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.resume.0", 0
  %14 = insertvalue { ptr, ptr } %13, ptr %12, 1
  ret { ptr, ptr } %14
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr1 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy7ElementQz5IndexQzciMTW.Frame", ptr %2, i32 0, i32 1
  %.reload2 = load ptr, ptr %.reload.addr1, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload2(ptr noalias dereferenceable(32) %7, i1 true)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGcisTW"(ptr noalias nocapture dereferenceable(16) %0, ptr noalias nocapture dereferenceable(16) %1, ptr nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %4 = load i64, ptr %.count._value, align 8
  %.lowerBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %6 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %.start1 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  %7 = load ptr, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  %8 = load i64, ptr %.count2._value, align 8
  %9 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %9, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGcis"(ptr %3, i64 %4, ptr %5, ptr %6, ptr %7, i64 %8, ptr %"\CF\84_0_0") #19
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture dereferenceable(16) %1, ptr nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #5 {
entry:
  %3 = call ptr @malloc(i64 40)
  store ptr %3, ptr %0, align 8
  %4 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame", ptr %3, i32 0, i32 0
  %.lowerBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %6 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %7 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %8 = load i64, ptr %.count._value, align 8
  %9 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %9)
  %10 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %10, align 8, !invariant.load !17
  %11 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyACyxGSnyAA0aB5IndexVyxGGciM"(ptr noalias dereferenceable(32) %9, ptr %5, ptr %6, ptr %7, i64 %8, ptr %"\CF\84_0_0") #19
  %12 = extractvalue { ptr, ptr } %11, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame", ptr %3, i32 0, i32 1
  store ptr %12, ptr %.spill.addr, align 8
  %13 = extractvalue { ptr, ptr } %11, 1
  %14 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.resume.0", 0
  %15 = insertvalue { ptr, ptr } %14, ptr %13, 1
  ret { ptr, ptr } %15
}

define internal swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr1 = getelementptr inbounds %"$s10BufferView07MutableaB0VyxGSMAASMy11SubSequenceQzSny5IndexQzGciMTW.Frame", ptr %2, i32 0, i32 1
  %.reload2 = load ptr, ptr %.reload.addr1, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload2(ptr noalias dereferenceable(32) %7, i1 true)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASM9partition2by5IndexQzSb7ElementQzKXE_tKFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr %1, ptr %2, ptr nocapture swiftself dereferenceable(16) %3, ptr noalias nocapture swifterror dereferenceable(8) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %5 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", ptr %Self, ptr undef) #9
  call swiftcc void @"$sSMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %Self, ptr %5, ptr %SelfWitnessTable, ptr nocapture swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #19
  %6 = load ptr, ptr %4, align 8
  %7 = icmp ne ptr %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  ret void

9:                                                ; preds = %entry
  %10 = phi ptr [ %6, %entry ]
  store ptr null, ptr %4, align 8
  store ptr %10, ptr %4, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASM6swapAtyy5IndexQz_AGtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSMsE6swapAtyy5IndexQz_ACtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASM011_withUnsafecA18PointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlFTW"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %"\CF\84_1_0", ptr nocapture swiftself dereferenceable(16) %3, ptr noalias nocapture swifterror dereferenceable(8) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSMsE42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %Self, ptr %"\CF\84_1_0", ptr %SelfWitnessTable, ptr nocapture swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #19
  %5 = load ptr, ptr %4, align 8
  %6 = icmp ne ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %entry
  ret void

8:                                                ; preds = %entry
  %9 = phi ptr [ %5, %entry ]
  store ptr null, ptr %4, align 8
  store ptr %9, ptr %4, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSMAASM014withContiguousC18StorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlFTW"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %"\CF\84_1_0", ptr nocapture swiftself dereferenceable(16) %3, ptr noalias nocapture swifterror dereferenceable(8) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %5, i64 %6, ptr %"\CF\84_0_0", ptr %"\CF\84_1_0", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4) #19
  %8 = load ptr, ptr %4, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %4, align 8
  store ptr %12, ptr %4, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSKAASK5index6before5IndexQzAH_tFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %5 = load i64, ptr %.count._value, align 8
  %6 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %6, align 8, !invariant.load !17
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index6beforeAA0aB5IndexVyxGAH_tF"(ptr %3, ptr %4, i64 %5, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %7, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSKAASK9formIndex6beforey0E0Qzz_tFTW"(ptr nocapture dereferenceable(8) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView07MutableaB0V9formIndex6beforeyAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSKAASK5index_8offsetBy5IndexQzAH_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSKAASK5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW"(ptr noalias nocapture sret(%TSq.12) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %5 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", ptr %Self, ptr undef) #9
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %5, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSKAASK8distance4from2toSi5IndexQz_AItFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSkAASk5index_8offsetBy5IndexQzAH_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView07MutableaB0VyxGSkAASk5index_8offsetBy07limitedF05IndexQzSgAI_SiAItFTW"(ptr noalias nocapture sret(%TSq.12) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0VyxGSkAASk8distance4from2toSi5IndexQz_AItFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define weak_odr hidden swiftcc ptr @"$s10BufferView07MutableaB0V10copyMemory4fromAA0aB5IndexVyxGACyxG_tF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %source.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %source.debug)
  %source.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %source.debug, i32 0, i32 0
  %source.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %source.debug.start, i32 0, i32 0
  %source.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %source.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %source.debug.start._rawValue._rawValue, align 8
  %source.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %source.debug, i32 0, i32 1
  %source.debug.count._value = getelementptr inbounds %TSi, ptr %source.debug.count, i32 0, i32 0
  store i64 %1, ptr %source.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  br i1 %flags.isTriviallyDestroyable, label %7, label %12

7:                                                ; preds = %entry
  %8 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %0, i64 %1, ptr %Element)
  %9 = extractvalue { ptr, i64 } %8, 0
  %10 = extractvalue { ptr, i64 } %8, 1
  %11 = call swiftcc ptr @"$s10BufferView07MutableaB0V10copyMemory4fromAA0aB5IndexVyxGA2AVyxG_tF"(ptr %9, i64 %10, ptr %2, i64 %3, ptr %Element)
  ret ptr %11

12:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %13 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %14 = extractvalue { i64, ptr } %13, 0
  %15 = extractvalue { i64, ptr } %13, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %14, ptr %15, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 312, i32 1)
  unreachable
}

define swiftcc ptr @"$s10BufferView07MutableaB0V10copyMemory4fromAA0aB5IndexVyxGA2AVyxG_tF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %source.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %source.debug)
  %source.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %source.debug, i32 0, i32 0
  %source.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %source.debug.start, i32 0, i32 0
  %source.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %source.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %source.debug.start._rawValue._rawValue, align 8
  %source.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %source.debug, i32 0, i32 1
  %source.debug.count._value = getelementptr inbounds %TSi, ptr %source.debug.count, i32 0, i32 0
  store i64 %1, ptr %source.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  br i1 %flags.isTriviallyDestroyable, label %7, label %26

7:                                                ; preds = %entry
  call void asm sideeffect "nop", ""()
  %8 = icmp slt i64 %3, %1
  %9 = xor i1 %8, true
  %10 = call i1 @llvm.expect.i1(i1 %9, i1 true)
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.57.MutableBufferView.copyMemory source has too many elements", i64 57, i1 true)
  %13 = extractvalue { i64, ptr } %12, 0
  %14 = extractvalue { i64, ptr } %12, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %13, ptr %14, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 318, i32 1)
  unreachable

15:                                               ; preds = %7
  call void asm sideeffect "nop", ""()
  %16 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %2, i64 %3, ptr %Element)
  %17 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  %18 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %18, align 8, !invariant.load !17
  %19 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %1, i64 %stride)
  %20 = extractvalue { i64, i1 } %19, 0
  %21 = extractvalue { i64, i1 } %19, 1
  %22 = call i1 @llvm.expect.i1(i1 %21, i1 false)
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  call swiftcc void @"$sSv10copyMemory4from9byteCountySV_SitF"(ptr %17, i64 %20, ptr %16)
  %24 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %25 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %1, ptr %24, ptr %Element)
  ret ptr %25

26:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %27 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %28 = extractvalue { i64, ptr } %27, 0
  %29 = extractvalue { i64, ptr } %27, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %28, ptr %29, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 317, i32 1)
  unreachable

30:                                               ; preds = %15
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferView07MutableaB0V6update9repeatingyx_tF"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %repeatedValue.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %repeatedValue.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %swifterror = alloca swifterror ptr, align 8
  store ptr null, ptr %swifterror, align 8
  store ptr %Element, ptr %Element1, align 8
  %3 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %4, align 8, !invariant.load !17
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %5)
  store ptr %0, ptr %repeatedValue.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %6 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  %9 = call ptr %8(ptr noalias %5, ptr noalias %0, ptr %Element) #6
  %10 = alloca i8, i64 48, align 16
  %11 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %10, i32 0, i32 1
  store ptr %Element, ptr %11, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %10, i32 0, i32 2
  store ptr %5, ptr %12, align 8
  %13 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %10, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %13, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %13, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) undef, ptr %Element, i64 %2, ptr @"$s10BufferView07MutableaB0V6update9repeatingyx_tFySpyxGXEfU_TA", ptr %10, ptr %6, ptr %Element, ptr getelementptr inbounds (%swift.full_existential_type, ptr @"$sytN", i32 0, i32 1), ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %swifterror)
  %14 = load ptr, ptr %swifterror, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %entry
  %17 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %18 = load ptr, ptr %17, align 8, !invariant.load !17
  call void %18(ptr noalias %5, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %5)
  ret void

19:                                               ; preds = %entry
  %20 = phi ptr [ %14, %entry ]
  store ptr null, ptr %swifterror, align 8
  unreachable
}

define internal swiftcc void @"$s10BufferView07MutableaB0V6update9repeatingyx_tFySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr noalias nocapture %2, ptr %3, i64 %4, ptr %Element, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %repeatedValue.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %repeatedValue.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store ptr %2, ptr %repeatedValue.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  call swiftcc void @"$sSp6assign9repeating5countyx_SitF"(ptr noalias nocapture %2, i64 %4, ptr %1, ptr %Element)
  ret void
}

define swiftcc ptr @"$s10BufferView07MutableaB0V6update4from8IteratorQyd__9unwritten_AA0aB5IndexVyxG5indextqd___t7ElementQyd__RszSTRd__lF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %Element, ptr %S, ptr %S.Sequence) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %S2 = alloca ptr, align 8
  %value.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %value.debug, i8 0, i64 8, i1 false)
  %iterator.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %iterator.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %index = alloca %T10BufferView0aB5IndexV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index, i8 0, i64 8, i1 false)
  %4 = alloca [32 x i8], align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %S, ptr %S2, align 8
  %5 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %Element) #18
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = getelementptr inbounds ptr, ptr %6, i64 -1
  %.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %8, align 8, !invariant.load !17
  %9 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %9)
  %10 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %10, align 8, !invariant.load !17, !dereferenceable !18
  %11 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size3 = load i64, ptr %11, align 8, !invariant.load !17
  %12 = alloca i8, i64 %size3, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %12)
  %value = alloca i8, i64 %size3, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %value)
  store ptr %value, ptr %value.debug, align 8
  %13 = getelementptr inbounds ptr, ptr %S, i64 -1
  %S.valueWitnesses = load ptr, ptr %13, align 8, !invariant.load !17, !dereferenceable !18
  %14 = getelementptr inbounds %swift.vwtable, ptr %S.valueWitnesses, i32 0, i32 8
  %size4 = load i64, ptr %14, align 8, !invariant.load !17
  %15 = alloca i8, i64 %size4, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %15)
  %16 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 0, ptr %S.Sequence, ptr %S, ptr @"$sSTTL", ptr @"$s8IteratorSTTl") #12
  %S.Iterator = extractvalue %swift.metadata_response %16, 0
  %17 = getelementptr inbounds ptr, ptr %S.Iterator, i64 -1
  %S.Iterator.valueWitnesses = load ptr, ptr %17, align 8, !invariant.load !17, !dereferenceable !18
  %18 = getelementptr inbounds %swift.vwtable, ptr %S.Iterator.valueWitnesses, i32 0, i32 8
  %size5 = load i64, ptr %18, align 8, !invariant.load !17
  %iterator = alloca i8, i64 %size5, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %iterator)
  store ptr %iterator, ptr %iterator.debug, align 8
  store ptr %1, ptr %source.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %19 = getelementptr inbounds ptr, ptr %S.valueWitnesses, i32 2
  %20 = load ptr, ptr %19, align 8, !invariant.load !17
  %21 = call ptr %20(ptr noalias %15, ptr noalias %1, ptr %S) #6
  call swiftcc void @"$sST12makeIterator0B0QzyFTj"(ptr noalias nocapture sret(%swift.opaque) %iterator, ptr noalias nocapture swiftself %15, ptr %S, ptr %S.Sequence)
  %22 = call swiftcc i1 @"$s10BufferView07MutableaB0V7isEmptySbvg"(ptr %2, i64 %3, ptr %Element)
  %23 = xor i1 %22, true
  br i1 %23, label %24, label %63

24:                                               ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %index)
  %25 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %index._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue, i32 0, i32 0
  store ptr %25, ptr %index._rawValue._rawValue, align 8
  br label %26

26:                                               ; preds = %36, %24
  %index._rawValue6 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue6._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue6, i32 0, i32 0
  %27 = load ptr, ptr %index._rawValue6._rawValue, align 8
  %28 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %29 = call swiftcc i1 @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ"(ptr %27, ptr %28, ptr %Element)
  br i1 %29, label %30, label %55

30:                                               ; preds = %26
  %S.Iterator.IteratorProtocol = call swiftcc ptr @swift_getAssociatedConformanceWitness(ptr %S.Sequence, ptr %S, ptr %S.Iterator, ptr @"$sSTTL", ptr @"$sST8IteratorST_StTn") #12
  call swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque) %9, ptr nocapture swiftself %iterator, ptr %S.Iterator, ptr %S.Iterator.IteratorProtocol)
  %31 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 6
  %32 = load ptr, ptr %31, align 8, !invariant.load !17
  %33 = call i32 %32(ptr noalias %9, i32 1, ptr %Element) #9
  %34 = icmp ne i32 %33, 1
  br i1 %34, label %36, label %53

35:                                               ; No predecessors!
  unreachable

36:                                               ; preds = %30
  %37 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 4
  %38 = load ptr, ptr %37, align 8, !invariant.load !17
  %39 = call ptr %38(ptr noalias %value, ptr noalias %9, ptr %Element) #6
  %index._rawValue8 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue8._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue8, i32 0, i32 0
  %40 = load ptr, ptr %index._rawValue8._rawValue, align 8
  %41 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %42 = load ptr, ptr %41, align 8, !invariant.load !17
  %43 = call ptr %42(ptr noalias %12, ptr noalias %value, ptr %Element) #6
  %44 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %44)
  %45 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %44, ptr %40, ptr %2, i64 %3, ptr %Element)
  %46 = extractvalue { ptr, ptr } %45, 0
  %47 = extractvalue { ptr, ptr } %45, 1
  %48 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %49 = load ptr, ptr %48, align 8, !invariant.load !17
  %50 = call ptr %49(ptr noalias %47, ptr noalias %12, ptr %Element) #6
  call swiftcc void %46(ptr noalias dereferenceable(32) %44, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %44)
  call swiftcc void @"$s10BufferView07MutableaB0V9formIndex5afteryAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %index, ptr %2, i64 %3, ptr %Element)
  %51 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %52 = load ptr, ptr %51, align 8, !invariant.load !17
  call void %52(ptr noalias %value, ptr %Element) #6
  br label %26

53:                                               ; preds = %30
  %54 = call ptr @"$sxSg7ElementQyd__RszSTRd__r__lWOh"(ptr %9, ptr %Element, ptr %6)
  br label %56

55:                                               ; preds = %26
  br label %56

56:                                               ; preds = %53, %55
  %57 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 2
  %58 = load ptr, ptr %57, align 8, !invariant.load !17
  %59 = call ptr %58(ptr noalias %0, ptr noalias %iterator, ptr %S.Iterator) #6
  %index._rawValue7 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue7._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue7, i32 0, i32 0
  %60 = load ptr, ptr %index._rawValue7._rawValue, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %index)
  %61 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 1
  %62 = load ptr, ptr %61, align 8, !invariant.load !17
  call void %62(ptr noalias %iterator, ptr %S.Iterator) #6
  br label %70

63:                                               ; preds = %entry
  %64 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 2
  %65 = load ptr, ptr %64, align 8, !invariant.load !17
  %66 = call ptr %65(ptr noalias %0, ptr noalias %iterator, ptr %S.Iterator) #6
  %67 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %68 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 1
  %69 = load ptr, ptr %68, align 8, !invariant.load !17
  call void %69(ptr noalias %iterator, ptr %S.Iterator) #6
  br label %70

70:                                               ; preds = %56, %63
  %71 = phi ptr [ %67, %63 ], [ %60, %56 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %iterator)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %15)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %value)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %12)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %9)
  ret ptr %71
}

define swiftcc ptr @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lF"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %value.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %value.debug, i8 0, i64 8, i1 false)
  %iterator.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %iterator.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSiSg, align 8
  %swifterror = alloca swifterror ptr, align 8
  store ptr null, ptr %swifterror, align 8
  %updated.debug = alloca %TSiSg, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %updated.debug, i8 0, i64 9, i1 false)
  %index = alloca %T10BufferView0aB5IndexV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index, i8 0, i64 8, i1 false)
  %5 = alloca [32 x i8], align 8
  %updated.debug8 = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %updated.debug8, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some Collection<Element>", ptr %3, align 8
  %6 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = getelementptr inbounds ptr, ptr %7, i64 -1
  %.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %9, align 8, !invariant.load !17
  %10 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %10)
  %11 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %11, align 8, !invariant.load !17, !dereferenceable !18
  %12 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %12, align 8, !invariant.load !17
  %13 = alloca i8, i64 %size2, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %13)
  %value = alloca i8, i64 %size2, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %value)
  store ptr %value, ptr %value.debug, align 8
  %14 = getelementptr inbounds ptr, ptr %"some Collection<Element>.Collection", i32 1
  %"some Collection<Element>.Sequence" = load ptr, ptr %14, align 8, !invariant.load !17
  %15 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 0, ptr %"some Collection<Element>.Sequence", ptr %"some Collection<Element>", ptr @"$sSTTL", ptr @"$s8IteratorSTTl") #12
  %"(some Collection<Element>).Iterator" = extractvalue %swift.metadata_response %15, 0
  %16 = getelementptr inbounds ptr, ptr %"(some Collection<Element>).Iterator", i64 -1
  %"(some Collection<Element>).Iterator.valueWitnesses" = load ptr, ptr %16, align 8, !invariant.load !17, !dereferenceable !18
  %17 = getelementptr inbounds %swift.vwtable, ptr %"(some Collection<Element>).Iterator.valueWitnesses", i32 0, i32 8
  %size3 = load i64, ptr %17, align 8, !invariant.load !17
  %iterator = alloca i8, i64 %size3, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %iterator)
  store ptr %iterator, ptr %iterator.debug, align 8
  %18 = getelementptr inbounds ptr, ptr %"some Collection<Element>", i64 -1
  %"some Collection<Element>.valueWitnesses" = load ptr, ptr %18, align 8, !invariant.load !17, !dereferenceable !18
  %19 = getelementptr inbounds %swift.vwtable, ptr %"some Collection<Element>.valueWitnesses", i32 0, i32 8
  %size4 = load i64, ptr %19, align 8, !invariant.load !17
  %20 = alloca i8, i64 %size4, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %20)
  %21 = alloca i8, i64 %size4, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %21)
  store ptr %0, ptr %source.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 9, ptr %4)
  %22 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  %23 = alloca i8, i64 56, align 16
  %24 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %23, i32 0, i32 1
  store ptr %Element, ptr %24, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i32 1
  store ptr %"some Collection<Element>", ptr %25, align 8
  %26 = getelementptr inbounds ptr, ptr %24, i32 2
  store ptr %"some Collection<Element>.Collection", ptr %26, align 8
  %27 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %23, i32 0, i32 2
  %._value = getelementptr inbounds %TSi, ptr %27, i32 0, i32 0
  store i64 %2, ptr %._value, align 8
  %28 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %23, i32 0, i32 3
  %._rawValue = getelementptr inbounds %TSv, ptr %28, i32 0, i32 0
  store ptr %22, ptr %._rawValue, align 8
  call swiftcc void @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_TA", ptr %23, ptr @"$sSiN", ptr noalias nocapture swiftself %0, ptr noalias nocapture swifterror dereferenceable(8) %swifterror, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Sequence")
  %29 = load ptr, ptr %swifterror, align 8
  %30 = icmp ne ptr %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %entry
  %32 = load i64, ptr %4, align 8
  %33 = getelementptr inbounds %TSiSg, ptr %4, i32 0, i32 1
  %34 = load i1, ptr %33, align 8
  call void @llvm.lifetime.start.p0(i64 9, ptr %updated.debug)
  store i64 %32, ptr %updated.debug, align 8
  %35 = getelementptr inbounds %TSiSg, ptr %updated.debug, i32 0, i32 1
  store i1 %34, ptr %35, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %4)
  br i1 %34, label %41, label %36

36:                                               ; preds = %31
  br label %37

37:                                               ; preds = %36
  %38 = phi i64 [ %32, %36 ]
  store i64 %38, ptr %updated.debug8, align 8
  %39 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %40 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %38, ptr %39, ptr %Element)
  br label %99

41:                                               ; preds = %31
  %42 = call swiftcc i1 @"$s10BufferView07MutableaB0V7isEmptySbvg"(ptr %1, i64 %2, ptr %Element)
  br i1 %42, label %43, label %58

43:                                               ; preds = %41
  %44 = getelementptr inbounds ptr, ptr %"some Collection<Element>.valueWitnesses", i32 2
  %45 = load ptr, ptr %44, align 8, !invariant.load !17
  %46 = call ptr %45(ptr noalias %21, ptr noalias %0, ptr %"some Collection<Element>") #6
  call void asm sideeffect "nop", ""()
  %47 = call ptr %45(ptr noalias %20, ptr noalias %21, ptr %"some Collection<Element>") #6
  %48 = call swiftcc i1 @"$sSl7isEmptySbvgTj"(ptr noalias nocapture swiftself %20, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection")
  %49 = getelementptr inbounds ptr, ptr %"some Collection<Element>.valueWitnesses", i32 1
  %50 = load ptr, ptr %49, align 8, !invariant.load !17
  call void %50(ptr noalias %20, ptr %"some Collection<Element>") #6
  %51 = call i1 @llvm.expect.i1(i1 %48, i1 true)
  br i1 %51, label %56, label %52

52:                                               ; preds = %43
  %53 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.65.destination buffer view cannot contain every element from source.", i64 65, i1 true)
  %54 = extractvalue { i64, ptr } %53, 0
  %55 = extractvalue { i64, ptr } %53, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %54, ptr %55, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 375, i32 1)
  unreachable

56:                                               ; preds = %43
  call void asm sideeffect "nop", ""()
  call void %50(ptr noalias %21, ptr %"some Collection<Element>") #6
  %57 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  br label %99

58:                                               ; preds = %41
  %59 = getelementptr inbounds ptr, ptr %"some Collection<Element>.valueWitnesses", i32 2
  %60 = load ptr, ptr %59, align 8, !invariant.load !17
  %61 = call ptr %60(ptr noalias %20, ptr noalias %0, ptr %"some Collection<Element>") #6
  call swiftcc void @"$sST12makeIterator0B0QzyFTj"(ptr noalias nocapture sret(%swift.opaque) %iterator, ptr noalias nocapture swiftself %20, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Sequence")
  call void @llvm.lifetime.start.p0(i64 8, ptr %index)
  %62 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %index._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue, i32 0, i32 0
  store ptr %62, ptr %index._rawValue._rawValue, align 8
  br label %63

63:                                               ; preds = %81, %58
  %"(some Collection<Element>).Iterator.IteratorProtocol" = call swiftcc ptr @swift_getAssociatedConformanceWitness(ptr %"some Collection<Element>.Sequence", ptr %"some Collection<Element>", ptr %"(some Collection<Element>).Iterator", ptr @"$sSTTL", ptr @"$sST8IteratorST_StTn") #12
  call swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque) %10, ptr nocapture swiftself %iterator, ptr %"(some Collection<Element>).Iterator", ptr %"(some Collection<Element>).Iterator.IteratorProtocol")
  %64 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 6
  %65 = load ptr, ptr %64, align 8, !invariant.load !17
  %66 = call i32 %65(ptr noalias %10, i32 1, ptr %Element) #9
  %67 = icmp ne i32 %66, 1
  br i1 %67, label %74, label %69

68:                                               ; No predecessors!
  unreachable

69:                                               ; preds = %63
  %70 = call ptr @"$sxSg7ElementQyd__RszSlRd__r__lWOh"(ptr %10, ptr %Element, ptr %7)
  %index._rawValue5 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue5._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue5, i32 0, i32 0
  %71 = load ptr, ptr %index._rawValue5._rawValue, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %index)
  %72 = getelementptr inbounds ptr, ptr %"(some Collection<Element>).Iterator.valueWitnesses", i32 1
  %73 = load ptr, ptr %72, align 8, !invariant.load !17
  call void %73(ptr noalias %iterator, ptr %"(some Collection<Element>).Iterator") #6
  br label %99

74:                                               ; preds = %63
  %75 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 4
  %76 = load ptr, ptr %75, align 8, !invariant.load !17
  %77 = call ptr %76(ptr noalias %value, ptr noalias %10, ptr %Element) #6
  %index._rawValue6 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue6._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue6, i32 0, i32 0
  %78 = load ptr, ptr %index._rawValue6._rawValue, align 8
  %79 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %80 = call swiftcc i1 @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ"(ptr %78, ptr %79, ptr %Element)
  br i1 %80, label %81, label %95

81:                                               ; preds = %74
  %index._rawValue7 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %index, i32 0, i32 0
  %index._rawValue7._rawValue = getelementptr inbounds %TSV, ptr %index._rawValue7, i32 0, i32 0
  %82 = load ptr, ptr %index._rawValue7._rawValue, align 8
  %83 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %84 = load ptr, ptr %83, align 8, !invariant.load !17
  %85 = call ptr %84(ptr noalias %13, ptr noalias %value, ptr %Element) #6
  %86 = getelementptr inbounds [32 x i8], ptr %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %86)
  %87 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %86, ptr %82, ptr %1, i64 %2, ptr %Element)
  %88 = extractvalue { ptr, ptr } %87, 0
  %89 = extractvalue { ptr, ptr } %87, 1
  %90 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %91 = load ptr, ptr %90, align 8, !invariant.load !17
  %92 = call ptr %91(ptr noalias %89, ptr noalias %13, ptr %Element) #6
  call swiftcc void %88(ptr noalias dereferenceable(32) %86, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %86)
  call swiftcc void @"$s10BufferView07MutableaB0V9formIndex5afteryAA0abE0VyxGz_tF"(ptr nocapture dereferenceable(8) %index, ptr %1, i64 %2, ptr %Element)
  %93 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %94 = load ptr, ptr %93, align 8, !invariant.load !17
  call void %94(ptr noalias %value, ptr %Element) #6
  br label %63

95:                                               ; preds = %74
  call void asm sideeffect "nop", ""()
  %96 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.65.destination buffer view cannot contain every element from source.", i64 65, i1 true)
  %97 = extractvalue { i64, ptr } %96, 0
  %98 = extractvalue { i64, ptr } %96, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %97, ptr %98, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 386, i32 1)
  unreachable

99:                                               ; preds = %37, %56, %69
  %100 = phi ptr [ %71, %69 ], [ %57, %56 ], [ %40, %37 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %21)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %20)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %iterator)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %value)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %13)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %10)
  ret ptr %100

101:                                              ; preds = %entry
  %102 = phi ptr [ %29, %entry ]
  store ptr null, ptr %swifterror, align 8
  unreachable
}

define internal swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_"(ptr noalias nocapture sret(%TSi) %0, i64 %1, i64 %2, i64 %3, ptr %4, ptr %Element, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection", ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %sourceBuffer.debug = alloca %TSR.13, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceBuffer.debug, i8 0, i64 16, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %baseAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %baseAddress.debug, i8 0, i64 8, i1 false)
  %sourceAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceAddress.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some Collection<Element>", ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %sourceBuffer.debug)
  %sourceBuffer.debug._position = getelementptr inbounds %TSR.13, ptr %sourceBuffer.debug, i32 0, i32 0
  store i64 %1, ptr %sourceBuffer.debug._position, align 8
  %sourceBuffer.debug.count = getelementptr inbounds %TSR.13, ptr %sourceBuffer.debug, i32 0, i32 1
  %sourceBuffer.debug.count._value = getelementptr inbounds %TSi, ptr %sourceBuffer.debug.count, i32 0, i32 0
  store i64 %2, ptr %sourceBuffer.debug.count._value, align 8
  store i64 %3, ptr %count.debug, align 8
  store ptr %4, ptr %baseAddress.debug, align 8
  %8 = call swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64 %1, i64 %2, ptr %Element)
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = inttoptr i64 %8 to ptr
  br label %13

12:                                               ; preds = %entry
  %._value = getelementptr inbounds %TSi, ptr %0, i32 0, i32 0
  store i64 0, ptr %._value, align 8
  br label %32

13:                                               ; preds = %10
  %14 = phi ptr [ %11, %10 ]
  store ptr %14, ptr %sourceAddress.debug, align 8
  call void asm sideeffect "nop", ""()
  %15 = icmp slt i64 %3, %2
  %16 = xor i1 %15, true
  %17 = call i1 @llvm.expect.i1(i1 %16, i1 true)
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.65.destination buffer view cannot contain every element from source.", i64 65, i1 true)
  %20 = extractvalue { i64, ptr } %19, 0
  %21 = extractvalue { i64, ptr } %19, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %20, ptr %21, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 361, i32 1)
  unreachable

22:                                               ; preds = %13
  call void asm sideeffect "nop", ""()
  %spsave = call ptr @llvm.stacksave()
  %23 = alloca i8, i64 64, align 16
  %24 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %23, i32 0, i32 1
  store ptr %Element, ptr %24, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i32 1
  store ptr %"some Collection<Element>", ptr %25, align 8
  %26 = getelementptr inbounds ptr, ptr %24, i32 2
  store ptr %"some Collection<Element>.Collection", ptr %26, align 8
  %27 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %23, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSP, ptr %27, i32 0, i32 0
  store ptr %14, ptr %._rawValue, align 8
  %28 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %23, i32 0, i32 3
  %._position = getelementptr inbounds %TSR.13, ptr %28, i32 0, i32 0
  store i64 %1, ptr %._position, align 8
  %.count = getelementptr inbounds %TSR.13, ptr %28, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) undef, ptr %Element, i64 %2, ptr @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_ySpyxGXEfU_TA", ptr %23, ptr %4, ptr %Element, ptr getelementptr inbounds (%swift.full_existential_type, ptr @"$sytN", i32 0, i32 1), ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %29 = load ptr, ptr %6, align 8
  %30 = icmp ne ptr %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  call void @llvm.stackrestore(ptr %spsave)
  %._value2 = getelementptr inbounds %TSi, ptr %0, i32 0, i32 0
  store i64 %2, ptr %._value2, align 8
  br label %32

32:                                               ; preds = %31, %12
  ret void

33:                                               ; preds = %22
  %34 = phi ptr [ %29, %22 ]
  store ptr null, ptr %6, align 8
  unreachable
}

define internal swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_ySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, i64 %4, ptr %Element, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection", ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %sourceAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceAddress.debug, i8 0, i64 8, i1 false)
  %sourceBuffer.debug = alloca %TSR.13, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceBuffer.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some Collection<Element>", ptr %7, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store ptr %2, ptr %sourceAddress.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %sourceBuffer.debug)
  %sourceBuffer.debug._position = getelementptr inbounds %TSR.13, ptr %sourceBuffer.debug, i32 0, i32 0
  store i64 %3, ptr %sourceBuffer.debug._position, align 8
  %sourceBuffer.debug.count = getelementptr inbounds %TSR.13, ptr %sourceBuffer.debug, i32 0, i32 1
  %sourceBuffer.debug.count._value = getelementptr inbounds %TSi, ptr %sourceBuffer.debug.count, i32 0, i32 0
  store i64 %4, ptr %sourceBuffer.debug.count._value, align 8
  call swiftcc void @"$sSp6assign4from5countySPyxG_SitF"(ptr %2, i64 %4, ptr %1, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V20withUnsafeRawPointeryqd__qd__SV_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %9, align 8, !invariant.load !17
  %10 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 %stride)
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false)
  br i1 %13, label %20, label %14

14:                                               ; preds = %entry
  call swiftcc void %1(ptr noalias nocapture sret(%swift.opaque) %0, ptr %7, i64 %11, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %15 = load ptr, ptr %6, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  ret void

18:                                               ; preds = %14
  %19 = phi ptr [ %15, %14 ]
  store ptr null, ptr %6, align 8
  store ptr %19, ptr %6, align 8
  ret void

20:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC10RawPointeryqd__qd__Sv_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %9, align 8, !invariant.load !17
  %10 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 %stride)
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false)
  br i1 %13, label %20, label %14

14:                                               ; preds = %entry
  call swiftcc void %1(ptr noalias nocapture sret(%swift.opaque) %0, ptr %7, i64 %11, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %15 = load ptr, ptr %6, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  ret void

18:                                               ; preds = %14
  %19 = phi ptr [ %15, %14 ]
  store ptr null, ptr %6, align 8
  store ptr %19, ptr %6, align 8
  ret void

20:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = alloca i8, i64 48, align 16
  %8 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 1
  store ptr %Element, ptr %8, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %R, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V20withUnsafeRawPointeryqd__qd__SV_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlFqd__SV_SitKXEfU_TA", ptr %7, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlFqd__SV_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %"$1.debug" = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$1.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store i64 %2, ptr %"$1.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %3, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %4, ptr %body.debug.data, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSW5start5countSWSVSg_SitcfC"(i64 %7, i64 %2)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = alloca i8, i64 48, align 16
  %8 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 1
  store ptr %Element, ptr %8, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %R, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC10RawPointeryqd__qd__Sv_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlFqd__Sv_SitKXEfU_TA", ptr %7, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlFqd__Sv_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %"$1.debug" = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$1.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store i64 %2, ptr %"$1.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %3, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %4, ptr %body.debug.data, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSw5start5countSwSvSg_SitcfC"(i64 %7, i64 %2)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %8 = alloca i8, i64 64, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i32 1
  store ptr %R, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %12, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %12, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %4, ptr @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__SpyxGKXEfU_TA", ptr %8, ptr %7, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %entry
  ret void

16:                                               ; preds = %entry
  %17 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %17, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__SpyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element, ptr %R, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %2, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %3, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call swiftcc void %2(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %5, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %8 = load ptr, ptr %7, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %7, align 8
  store ptr %12, ptr %7, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = alloca i8, i64 48, align 16
  %8 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 1
  store ptr %Element, ptr %8, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %R, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_TA", ptr %7, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %"$1.debug" = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$1.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store i64 %2, ptr %"$1.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %3, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %4, ptr %body.debug.data, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSR5start5countSRyxGSPyxGSg_SitcfC"(i64 %7, i64 %2, ptr %Element)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %8 = alloca i8, i64 64, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i32 1
  store ptr %R, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %8, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %12, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %12, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %4, ptr @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlFqd__AEKXEfU_TA", ptr %8, ptr %7, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %entry
  ret void

16:                                               ; preds = %entry
  %17 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %17, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlFqd__AEKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element, ptr %R, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %2, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %3, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call swiftcc void %2(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %5, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %8 = load ptr, ptr %7, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %7, align 8
  store ptr %12, ptr %7, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = alloca i8, i64 48, align 16
  %8 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 1
  store ptr %Element, ptr %8, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %R, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlFqd__SpyxG_SitKXEfU_TA", ptr %7, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlFqd__SpyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %"$1.debug" = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$1.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store i64 %2, ptr %"$1.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %3, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %4, ptr %body.debug.data, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSr5start5countSryxGSpyxGSg_SitcfC"(i64 %7, i64 %2, ptr %Element)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V4load14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %3, i64 %4, ptr %Element)
  %6 = extractvalue { ptr, i64 } %5, 0
  %7 = extractvalue { ptr, i64 } %5, 1
  call swiftcc void @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %T, ptr %6, i64 %7, ptr %Element, ptr %T)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %1, ptr %index.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %3, i64 %4, ptr %Element)
  %6 = extractvalue { ptr, i64 } %5, 0
  %7 = extractvalue { ptr, i64 } %5, 1
  call swiftcc void @"$s10BufferViewAAV4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %T, ptr %6, i64 %7, ptr %Element, ptr %T)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %3, i64 %4, ptr %Element)
  %6 = extractvalue { ptr, i64 } %5, 0
  %7 = extractvalue { ptr, i64 } %5, 1
  call swiftcc void @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %T, ptr %6, i64 %7, ptr %Element, ptr %T)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %1, ptr %index.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %3, i64 %4, ptr %Element)
  %6 = extractvalue { ptr, i64 } %5, 0
  %7 = extractvalue { ptr, i64 } %5, 1
  call swiftcc void @"$s10BufferViewAAV13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %T, ptr %6, i64 %7, ptr %Element, ptr %T)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V10storeBytes2of12toByteOffset2asyqd___Siqd__mtlF"(ptr noalias nocapture %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %value.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %value.debug, i8 0, i64 8, i1 false)
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %5 = alloca %TSn.3, align 8
  %6 = alloca %T10BufferView0aB5IndexV, align 8
  %7 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %0, ptr %value.debug, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %9, align 8, !invariant.load !17
  %10 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %10, 0
  br i1 %flags.isTriviallyDestroyable, label %11, label %15

11:                                               ; preds = %entry
  %12 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses4 = load ptr, ptr %12, align 8, !invariant.load !17, !dereferenceable !18
  %13 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses4, i32 0, i32 10
  %flags5 = load i32, ptr %13, align 8, !invariant.load !17
  %14 = and i32 %flags5, 65536
  %flags5.isTriviallyDestroyable = icmp eq i32 %14, 0
  br label %16

15:                                               ; preds = %entry
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ %flags5.isTriviallyDestroyable, %11 ]
  br i1 %17, label %18, label %36

18:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %19 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %20 = getelementptr inbounds i8, ptr %19, i64 %1
  %21 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %20, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %6, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %21, ptr %._rawValue._rawValue, align 8
  %22 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  %23 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %23, align 8, !invariant.load !17, !dereferenceable !18
  %24 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %24, align 8, !invariant.load !17
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %size)
  %26 = extractvalue { i64, i1 } %25, 0
  %27 = extractvalue { i64, i1 } %25, 1
  %28 = getelementptr inbounds i8, ptr %22, i64 %26
  %29 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %28, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._rawValue3 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %7, i32 0, i32 0
  %._rawValue3._rawValue = getelementptr inbounds %TSV, ptr %._rawValue3, i32 0, i32 0
  store ptr %29, ptr %._rawValue3._rawValue, align 8
  %30 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %31 = extractvalue %swift.metadata_response %30, 0
  %32 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %31, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %5, ptr noalias nocapture %6, ptr noalias nocapture %7, ptr %31, ptr %32)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  %.lowerBound = getelementptr inbounds %TSn.3, ptr %5, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %33 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.3, ptr %5, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %34 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %33, ptr %34, ptr %3, i64 %4, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %35 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %3, i64 %4, ptr %Element)
  call swiftcc void @_swift_se0349_UnsafeMutableRawPointer_storeBytes(ptr noalias nocapture %0, i64 %1, ptr %T, ptr %35, ptr %T)
  ret void

36:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  %37 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %38 = extractvalue { i64, ptr } %37, 0
  %39 = extractvalue { i64, ptr } %37, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %38, ptr %39, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 498, i32 1)
  unreachable
}

define linkonce_odr hidden swiftcc void @_swift_se0349_UnsafeMutableRawPointer_storeBytes(ptr noalias nocapture %0, i64 %1, ptr %2, ptr %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %4 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  %7 = call i1 @llvm.expect.i1(i1 %flags.isTriviallyDestroyable, i1 true)
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @.str.0. to i64), i64 0, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 1304, i32 1)
  unreachable

9:                                                ; preds = %entry
  %10 = getelementptr inbounds i8, ptr %3, i64 %1
  %11 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %11, align 8, !invariant.load !17
  %12 = icmp slt i64 %size, 0
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false)
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @llvm.memcpy.p0.p0.i64(ptr %10, ptr %0, i64 %size, i1 false)
  ret void

15:                                               ; preds = %9
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable
}

define swiftcc void @"$s10BufferView07MutableaB0V10storeBytes2of2to2asyqd___AA0aB5IndexVyxGqd__mtlF"(ptr noalias nocapture %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %value.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %value.debug, i8 0, i64 8, i1 false)
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %o.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %o.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %0, ptr %value.debug, align 8
  store ptr %1, ptr %index.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %3, i64 %4, ptr %Element)
  %6 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %5, ptr %1, ptr %3, i64 %4, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %8, align 8, !invariant.load !17
  %9 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %6, i64 %stride)
  %10 = extractvalue { i64, i1 } %9, 0
  %11 = extractvalue { i64, i1 } %9, 1
  %12 = call i1 @llvm.expect.i1(i1 %11, i1 false)
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  store i64 %10, ptr %o.debug, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V10storeBytes2of12toByteOffset2asyqd___Siqd__mtlF"(ptr noalias nocapture %0, i64 %10, ptr %T, ptr %3, i64 %4, ptr %Element, ptr %T)
  ret void

14:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferView07MutableaB0V6offsetxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %1, 0
  %5 = xor i1 %4, true
  br i1 %5, label %6, label %8

6:                                                ; preds = %entry
  %7 = icmp slt i64 %1, %3
  br label %9

8:                                                ; preds = %entry
  br label %9

9:                                                ; preds = %6, %8
  %10 = phi i1 [ false, %8 ], [ %7, %6 ]
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 true)
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %14 = extractvalue { i64, ptr } %13, 0
  %15 = extractvalue { i64, ptr } %13, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %14, ptr %15, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 523, i32 1)
  unreachable

16:                                               ; preds = %9
  call void asm sideeffect "nop", ""()
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %5 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %4, i64 %1, ptr %2, i64 %3, ptr %Element)
  call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr %2, i64 %3, ptr %Element)
  ret void
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V6offsetxSi_tciM"(ptr noalias dereferenceable(32) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %4 = call ptr @malloc(i64 40)
  store ptr %4, ptr %0, align 8
  %5 = getelementptr inbounds %"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame", ptr %4, i32 0, i32 0
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %6 = icmp slt i64 %1, 0
  %7 = xor i1 %6, true
  %8 = icmp slt i64 %1, %3
  %spec.select = select i1 %7, i1 %8, i1 false
  %9 = call i1 @llvm.expect.i1(i1 %spec.select, i1 true)
  br i1 %9, label %CoroSuspend, label %10

10:                                               ; preds = %entry
  %11 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %12 = extractvalue { i64, ptr } %11, 0
  %13 = extractvalue { i64, ptr } %11, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %12, ptr %13, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 527, i32 1)
  unreachable

CoroSuspend:                                      ; preds = %entry
  call void asm sideeffect "nop", ""()
  %14 = getelementptr inbounds [32 x i8], ptr %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %14)
  %15 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM"(ptr noalias dereferenceable(32) %14, i64 %1, ptr %2, i64 %3, ptr %Element)
  %16 = extractvalue { ptr, ptr } %15, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame", ptr %4, i32 0, i32 1
  store ptr %16, ptr %.spill.addr, align 8
  %17 = extractvalue { ptr, ptr } %15, 1
  %18 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0V6offsetxSi_tciM.resume.0", 0
  %19 = insertvalue { ptr, ptr } %18, ptr %17, 1
  ret { ptr, ptr } %19
}

define internal swiftcc void @"$s10BufferView07MutableaB0V6offsetxSi_tciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %offset.debug = alloca i64, align 8
  %Element1 = alloca ptr, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr4 = getelementptr inbounds %"$s10BufferView07MutableaB0V6offsetxSi_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload5 = load ptr, ptr %.reload.addr4, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload5(ptr noalias dereferenceable(32) %7, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

; Function Attrs: noinline
define swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM"(ptr noalias dereferenceable(32) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %4 = call ptr @malloc(i64 40)
  store ptr %4, ptr %0, align 8
  %5 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame", ptr %4, i32 0, i32 0
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %6 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V5index_8offsetByAA0aB5IndexVyxGAH_SitF"(ptr %6, i64 %1, ptr %2, i64 %3, ptr %Element)
  %8 = getelementptr inbounds [32 x i8], ptr %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %8)
  %9 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxAA0aB5IndexVyxG_tciM"(ptr noalias dereferenceable(32) %8, ptr %7, ptr %2, i64 %3, ptr %Element)
  %10 = extractvalue { ptr, ptr } %9, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame", ptr %4, i32 0, i32 1
  store ptr %10, ptr %.spill.addr, align 8
  %11 = extractvalue { ptr, ptr } %9, 1
  %12 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.resume.0", 0
  %13 = insertvalue { ptr, ptr } %12, ptr %11, 1
  ret { ptr, ptr } %13
}

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  %offset.debug = alloca i64, align 8
  %Element1 = alloca ptr, align 8
  %3 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr2 = getelementptr inbounds %"$s10BufferView07MutableaB0V9uncheckedxSi_tciM.Frame", ptr %2, i32 0, i32 1
  %.reload3 = load ptr, ptr %.reload.addr2, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload3(ptr noalias dereferenceable(32) %7, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V6offsetxSi_tcis"(ptr noalias nocapture %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %4 = alloca [32 x i8], align 8
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %6, align 8, !invariant.load !17
  %7 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %7)
  %8 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %9 = load ptr, ptr %8, align 8, !invariant.load !17
  %10 = call ptr %9(ptr noalias %7, ptr noalias %0, ptr %Element) #6
  %11 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %11)
  %12 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V6offsetxSi_tciM"(ptr noalias dereferenceable(32) %11, i64 %1, ptr %2, i64 %3, ptr %Element)
  %13 = extractvalue { ptr, ptr } %12, 0
  %14 = extractvalue { ptr, ptr } %12, 1
  %15 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %16 = load ptr, ptr %15, align 8, !invariant.load !17
  %17 = call ptr %16(ptr noalias %14, ptr noalias %7, ptr %Element) #6
  call swiftcc void %13(ptr noalias dereferenceable(32) %11, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %11)
  %18 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %19 = load ptr, ptr %18, align 8, !invariant.load !17
  call void %19(ptr noalias %0, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %7)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V9uncheckedxSi_tcis"(ptr noalias nocapture %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %4 = alloca [32 x i8], align 8
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %6, align 8, !invariant.load !17
  %7 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %7)
  %8 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 2
  %9 = load ptr, ptr %8, align 8, !invariant.load !17
  %10 = call ptr %9(ptr noalias %7, ptr noalias %0, ptr %Element) #6
  %11 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %11)
  %12 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V9uncheckedxSi_tciM"(ptr noalias dereferenceable(32) %11, i64 %1, ptr %2, i64 %3, ptr %Element)
  %13 = extractvalue { ptr, ptr } %12, 0
  %14 = extractvalue { ptr, ptr } %12, 1
  %15 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 5
  %16 = load ptr, ptr %15, align 8, !invariant.load !17
  %17 = call ptr %16(ptr noalias %14, ptr noalias %7, ptr %Element) #6
  call swiftcc void %13(ptr noalias dereferenceable(32) %11, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %11)
  %18 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %19 = load ptr, ptr %18, align 8, !invariant.load !17
  call void %19(ptr noalias %0, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %7)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V5firstxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %1, i64 %2, ptr %Element)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  call swiftcc void @"$s10BufferViewAAV5firstxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %4, i64 %5, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferView07MutableaB0V4lastxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %1, i64 %2, ptr %Element)
  %4 = extractvalue { ptr, i64 } %3, 0
  %5 = extractvalue { ptr, i64 } %3, 1
  call swiftcc void @"$s10BufferViewAAV4lastxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %4, i64 %5, ptr %Element)
  ret void
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V6prefixyACyxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %maxLength.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %maxLength.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %maxLength.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.39.Can't have a prefix of negative length.", i64 39, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 559, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %nc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %18 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %19 = extractvalue %swift.metadata_response %18, 0
  %20 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %17, i64 %16, ptr noalias nocapture %3, ptr %Element, ptr %19)
  %21 = extractvalue { ptr, i64 } %20, 0
  %22 = extractvalue { ptr, i64 } %20, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %23 = insertvalue { ptr, i64 } undef, ptr %21, 0
  %24 = insertvalue { ptr, i64 } %23, i64 %22, 1
  ret { ptr, i64 } %24
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V6suffixyACyxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %maxLength.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %maxLength.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %newStart.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newStart.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %maxLength.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.39.Can't have a suffix of negative length.", i64 39, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 565, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %nc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  %18 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %16)
  %19 = extractvalue { i64, i1 } %18, 0
  %20 = extractvalue { i64, i1 } %18, 1
  %21 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %21, align 8, !invariant.load !17, !dereferenceable !18
  %22 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %22, align 8, !invariant.load !17
  %23 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %19, i64 %stride)
  %24 = extractvalue { i64, i1 } %23, 0
  %25 = extractvalue { i64, i1 } %23, 1
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 false)
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds i8, ptr %17, i64 %24
  store ptr %28, ptr %newStart.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %29 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %30 = extractvalue %swift.metadata_response %29, 0
  %31 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %28, i64 %16, ptr noalias nocapture %3, ptr %Element, ptr %30)
  %32 = extractvalue { ptr, i64 } %31, 0
  %33 = extractvalue { ptr, i64 } %31, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %34 = insertvalue { ptr, i64 } undef, ptr %32, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

36:                                               ; preds = %15
  call void @llvm.trap()
  unreachable
}

define weak_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0V9dropFirstyACyxGSiFfA_"(ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  ret i64 1
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V9dropFirstyACyxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %k.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %k.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %dc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %dc.debug, i8 0, i64 8, i1 false)
  %newStart.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newStart.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %k.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Can't drop a negative number of elements.", i64 41, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 572, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %dc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  %18 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %18, align 8, !invariant.load !17, !dereferenceable !18
  %19 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %19, align 8, !invariant.load !17
  %20 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %16, i64 %stride)
  %21 = extractvalue { i64, i1 } %20, 0
  %22 = extractvalue { i64, i1 } %20, 1
  %23 = call i1 @llvm.expect.i1(i1 %22, i1 false)
  br i1 %23, label %36, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, ptr %17, i64 %21
  store ptr %25, ptr %newStart.debug, align 8
  %26 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %16)
  %27 = extractvalue { i64, i1 } %26, 0
  %28 = extractvalue { i64, i1 } %26, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %29 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %30 = extractvalue %swift.metadata_response %29, 0
  %31 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %25, i64 %27, ptr noalias nocapture %3, ptr %Element, ptr %30)
  %32 = extractvalue { ptr, i64 } %31, 0
  %33 = extractvalue { ptr, i64 } %31, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %34 = insertvalue { ptr, i64 } undef, ptr %32, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

36:                                               ; preds = %15
  call void @llvm.trap()
  unreachable
}

define weak_odr hidden swiftcc i64 @"$s10BufferView07MutableaB0V8dropLastyACyxGSiFfA_"(ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  ret i64 1
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V8dropLastyACyxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %k.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %k.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %k.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Can't drop a negative number of elements.", i64 41, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.35.BufferView/BufferView+Mutable.swift" to i64), i64 35, i8 2, i64 579, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %0)
  %15 = extractvalue { i64, i1 } %14, 0
  %16 = extractvalue { i64, i1 } %14, 1
  br label %18

17:                                               ; preds = %11
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi i64 [ 0, %17 ], [ %15, %13 ]
  store i64 %19, ptr %nc.debug, align 8
  %20 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %21 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %22 = extractvalue %swift.metadata_response %21, 0
  %23 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %20, i64 %19, ptr noalias nocapture %3, ptr %Element, ptr %22)
  %24 = extractvalue { ptr, i64 } %23, 0
  %25 = extractvalue { ptr, i64 } %23, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %26 = insertvalue { ptr, i64 } undef, ptr %24, 0
  %27 = insertvalue { ptr, i64 } %26, i64 %25, 1
  ret { ptr, i64 } %27
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V6prefix4upToACyxGAA0aB5IndexVyxG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %3 = alloca %TSn, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %6 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %index.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %7, ptr %._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %0, ptr %._rawValue2._rawValue, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %3, ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %9, ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %11, ptr %12, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = call swiftcc ptr @"$s10BufferView07MutableaB0V11baseAddress33_16B4EDD70A1B7386F2645A9A4DF693F8LLSvvg"(ptr %1, i64 %2, ptr %Element)
  %14 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %15 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %14, ptr %0, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %16 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %17 = extractvalue %swift.metadata_response %16, 0
  %18 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %13, i64 %15, ptr noalias nocapture %6, ptr %Element, ptr %17)
  %19 = extractvalue { ptr, i64 } %18, 0
  %20 = extractvalue { ptr, i64 } %18, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %21 = insertvalue { ptr, i64 } undef, ptr %19, 0
  %22 = insertvalue { ptr, i64 } %21, i64 %20, 1
  ret { ptr, i64 } %22
}

define swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V6suffix4fromACyxGAA0aB5IndexVyxG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %3 = alloca %TSn, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %6 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %index.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %0, ptr %._rawValue._rawValue, align 8
  %7 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %7, ptr %._rawValue2._rawValue, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %3, ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %9, ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferView07MutableaB0V12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %11, ptr %12, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = call swiftcc ptr @"$s10BufferView07MutableaB0V8endIndexAA0abE0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %14 = call swiftcc i64 @"$s10BufferView07MutableaB0V8distance4from2toSiAA0aB5IndexVyxG_AItF"(ptr %0, ptr %13, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %15 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %16 = extractvalue %swift.metadata_response %15, 0
  %17 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %0, i64 %14, ptr noalias nocapture %6, ptr %Element, ptr %16)
  %18 = extractvalue { ptr, i64 } %17, 0
  %19 = extractvalue { ptr, i64 } %17, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %20 = insertvalue { ptr, i64 } undef, ptr %18, 0
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1
  ret { ptr, i64 } %21
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #6
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

declare swiftcc i64 @"$sSw11baseAddressSvSgvg"(i64, i64) #0

declare swiftcc i64 @"$sSw5countSivg"(i64, i64) #0

declare swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSzsWl"() #8 {
entry:
  %0 = load ptr, ptr @"$sS2iSzsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSzsMc", ptr @"$sSiN", ptr undef) #9
  store atomic ptr %2, ptr @"$sS2iSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

; Function Attrs: nounwind readonly
declare ptr @swift_getWitnessTable(ptr, ptr, ptr) #9

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #6
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

declare swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV4from2to9dependsOnACyxGAA0aB5IndexVyxG_AJqd__tclufC"(ptr, ptr, ptr noalias nocapture, ptr, ptr) #0

; Function Attrs: noinline nounwind readnone
define swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 %0, ptr %1) #8 {
entry:
  %2 = call swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr undef, ptr undef, ptr @"$s10BufferView07MutableaB0VMn") #18
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = insertvalue %swift.metadata_response undef, ptr %3, 0
  %6 = insertvalue %swift.metadata_response %5, i64 %4, 1
  ret %swift.metadata_response %6
}

declare swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64, ptr, ptr) #0

declare swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr, i64, ptr) #0

declare swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, i64, ptr, ptr, ptr swiftself, ptr noalias nocapture swifterror dereferenceable(8)) #0

declare swiftcc i1 @"$s10BufferViewAAVAASQRzlE13elementsEqualySbAByxGF"(ptr, i64, ptr, i64, ptr, ptr) #0

declare swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr noalias nocapture, ptr, ptr) #0

declare swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64, ptr) #0

declare swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr, ptr, ptr) #0

declare swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque), i64, ptr, ptr, ptr) #0

declare ptr @malloc(i64)

declare void @free(ptr)

declare swiftcc i64 @"$sSlsE5countSivg"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc %swift.metadata_response @"$sSnMa"(i64, ptr, ptr) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSZsWl"() #8 {
entry:
  %0 = load ptr, ptr @"$sS2iSZsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSZsMc", ptr @"$sSiN", ptr undef) #9
  store atomic ptr %2, ptr @"$sS2iSZsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #6
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare ptr @llvm.stacksave() #10

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSV, ptr %5, i32 0, i32 0
  %6 = load ptr, ptr %._rawValue, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 3
  %._value = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  %8 = load i64, ptr %._value, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSV, %TSi, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 4
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %11 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %6, i64 %8, ptr %10, i64 %11, ptr %Element, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.stackrestore(ptr) #10

declare swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself, ptr, ptr) #0

define internal swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i32 1
  %R = load ptr, ptr %5, align 8
  store ptr %R, ptr %R2, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %2, i32 0, i32 2
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %7 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %8 = load i64, ptr %.count._value, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView07MutableaB0V, %swift.noescape.function }>, ptr %2, i32 0, i32 3
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %9, i32 0, i32 1
  %11 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V014withContiguousC18StorageIfAvailableyqd__Sgqd__SryxGzKXEKlFqd__SpyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %7, i64 %8, ptr %10, ptr %11, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr, i64, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #11

declare swiftcc void @"$sSv10copyMemory4from9byteCountySV_SitF"(ptr, i64, ptr) #0

define internal swiftcc void @"$s10BufferView07MutableaB0V6update9repeatingyx_tFySpyxGXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], ptr, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %8 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %9 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V6update9repeatingyx_tFySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr noalias nocapture %6, ptr %8, i64 %9, ptr %Element, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc %swift.metadata_response @"$sSqMa"(i64, ptr) #0

; Function Attrs: nounwind readnone willreturn
declare swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64, ptr, ptr, ptr, ptr) #12

declare swiftcc void @"$sST12makeIterator0B0QzyFTj"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture swiftself, ptr, ptr) #0

declare swiftcc i1 @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ"(ptr, ptr, ptr) #0

declare swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque), ptr nocapture swiftself, ptr, ptr) #0

; Function Attrs: nounwind readnone willreturn
declare swiftcc ptr @swift_getAssociatedConformanceWitness(ptr, ptr, ptr, ptr, ptr) #12

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$sxSg7ElementQyd__RszSTRd__r__lWOh"(ptr %0, ptr %Element, ptr %"Optional<Element>") #7 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  %1 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %1, align 8, !invariant.load !17, !dereferenceable !18
  %2 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 6
  %3 = load ptr, ptr %2, align 8, !invariant.load !17
  %4 = call i32 %3(ptr noalias %0, i32 1, ptr %Element) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %entry
  %7 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %0, ptr %Element) #6
  br label %9

9:                                                ; preds = %6, %entry
  ret ptr %0
}

define internal swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_TA"(ptr noalias nocapture sret(%TSi) %0, i64 %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %6, align 8
  store ptr %Element, ptr %Element1, align 8
  %7 = getelementptr inbounds ptr, ptr %6, i32 1
  %"some Collection<Element>" = load ptr, ptr %7, align 8
  store ptr %"some Collection<Element>", ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %6, i32 2
  %"some Collection<Element>.Collection" = load ptr, ptr %8, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %3, i32 0, i32 2
  %._value = getelementptr inbounds %TSi, ptr %9, i32 0, i32 0
  %10 = load i64, ptr %._value, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSi, %TSv }>, ptr %3, i32 0, i32 3
  %._rawValue = getelementptr inbounds %TSv, ptr %11, i32 0, i32 0
  %12 = load ptr, ptr %._rawValue, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_"(ptr noalias nocapture sret(%TSi) %0, i64 %1, i64 %2, i64 %10, ptr %12, ptr %Element, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

declare swiftcc void @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTj"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, ptr noalias nocapture swiftself, ptr noalias nocapture swifterror dereferenceable(8), ptr, ptr) #0

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$sxSg7ElementQyd__RszSlRd__r__lWOh"(ptr %0, ptr %Element, ptr %"Optional<Element>") #7 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  %1 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %1, align 8, !invariant.load !17, !dereferenceable !18
  %2 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 6
  %3 = load ptr, ptr %2, align 8, !invariant.load !17
  %4 = call i32 %3(ptr noalias %0, i32 1, ptr %Element) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %entry
  %7 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %0, ptr %Element) #6
  br label %9

9:                                                ; preds = %6, %entry
  ret ptr %0
}

declare swiftcc i1 @"$sSl7isEmptySbvgTj"(ptr noalias nocapture swiftself, ptr, ptr) #0

define internal swiftcc void @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlFqd__SV_SitKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %R = load ptr, ptr %6, align 8
  store ptr %R, ptr %R2, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V15withUnsafeBytesyqd__qd__SWKXEKlFqd__SV_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %8, ptr %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlFqd__Sv_SitKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %R = load ptr, ptr %6, align 8
  store ptr %R, ptr %R2, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC5Bytesyqd__qd__SwKXEKlFqd__Sv_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %8, ptr %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__SpyxGKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i32 1
  %R = load ptr, ptr %5, align 8
  store ptr %R, ptr %R2, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 1
  %8 = load ptr, ptr %.data, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %11 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__SpyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %7, ptr %8, ptr %10, i64 %11, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %R = load ptr, ptr %6, align 8
  store ptr %R, ptr %R2, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %8, ptr %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlFqd__AEKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i32 1
  %R = load ptr, ptr %5, align 8
  store ptr %R, ptr %R2, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 1
  %8 = load ptr, ptr %.data, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %9, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %11 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafeC7Pointeryqd__qd__SpyxG_SitKXEKlFqd__AEKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %7, ptr %8, ptr %10, i64 %11, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

define internal swiftcc void @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlFqd__SpyxG_SitKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %R = load ptr, ptr %6, align 8
  store ptr %R, ptr %R2, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V010withUnsafecA7Pointeryqd__qd__SryxGKXEKlFqd__SpyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %8, ptr %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

declare swiftcc void @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque), i64, ptr, ptr, i64, ptr, ptr) #0

declare swiftcc void @"$s10BufferViewAAV4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, i64, ptr, ptr) #0

declare swiftcc void @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque), i64, ptr, ptr, i64, ptr, ptr) #0

declare swiftcc void @"$s10BufferViewAAV13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, i64, ptr, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

declare swiftcc void @"$s10BufferViewAAV5firstxSgvg"(ptr noalias nocapture sret(%swift.opaque), ptr, i64, ptr) #0

declare swiftcc void @"$s10BufferViewAAV4lastxSgvg"(ptr noalias nocapture sret(%swift.opaque), ptr, i64, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSTAA8IteratorST_StWT"(ptr %"MutableBufferView<Element>.Iterator", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.Sequence") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", ptr %"MutableBufferView<Element>.Iterator", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSlAASTWb"(ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>1", ptr %"MutableBufferView<Element>.Collection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSTAAMc", ptr %"MutableBufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSlAA5IndexSl_SLWT"(ptr %"MutableBufferView<Element>.Index", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.Collection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %"MutableBufferView<Element>.Index", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSlAA7IndicesSl_SlWT"(ptr %"MutableBufferView<Element>.Indices", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.Collection") #13 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"MutableBufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %"MutableBufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSlAA11SubSequenceSl_SlWT"(ptr %"MutableBufferView<Element>.SubSequence", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.Collection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %"MutableBufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSMAASlWb"(ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>1", ptr %"MutableBufferView<Element>.MutableCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %"MutableBufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSMAA11SubSequenceSl_SMWT"(ptr %"MutableBufferView<Element>.SubSequence", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.MutableCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSMAAMc", ptr %"MutableBufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSKAASlWb"(ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>1", ptr %"MutableBufferView<Element>.BidirectionalCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSlAAMc", ptr %"MutableBufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSKAA7IndicesSl_SKWT"(ptr %"MutableBufferView<Element>.Indices", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.BidirectionalCollection") #13 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"MutableBufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSKsSxRzSZ6StrideRpzrlMc", ptr %"MutableBufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSKAA11SubSequenceSl_SKWT"(ptr %"MutableBufferView<Element>.SubSequence", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.BidirectionalCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", ptr %"MutableBufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSkAASKWb"(ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>1", ptr %"MutableBufferView<Element>.RandomAccessCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSKAAMc", ptr %"MutableBufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSkAA7IndicesSl_SkWT"(ptr %"MutableBufferView<Element>.Indices", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.RandomAccessCollection") #13 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"MutableBufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSksSxRzSZ6StrideRpzrlMc", ptr %"MutableBufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView07MutableaB0VyxGSkAA11SubSequenceSl_SkWT"(ptr %"MutableBufferView<Element>.SubSequence", ptr %"MutableBufferView<Element>", ptr %"MutableBufferView<Element>.RandomAccessCollection") #13 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView07MutableaB0VyxGSkAAMc", ptr %"MutableBufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal ptr @"$s10BufferView07MutableaB0VMi"(ptr %0, ptr %1, ptr %2) #13 {
entry:
  %Element1 = alloca ptr, align 8
  %Element = load ptr, ptr %1, align 8
  store ptr %Element, ptr %Element1, align 8
  %3 = call ptr @swift_allocateGenericValueMetadata(ptr %0, ptr %1, ptr %2, i64 16) #6
  ret ptr %3
}

; Function Attrs: nounwind
define linkonce_odr hidden ptr @__swift_memcpy16_8(ptr %0, ptr %1, ptr %2) #13 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 16, i1 false)
  ret ptr %0
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #14

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(ptr %0, ptr %1) #13 {
entry:
  ret void
}

; Function Attrs: nounwind readonly
define internal i32 @"$s10BufferView07MutableaB0Vwet"(ptr noalias %value, i32 %numEmptyCases, ptr %"MutableBufferView<Element>") #15 {
entry:
  %0 = icmp eq i32 0, %numEmptyCases
  br i1 %0, label %34, label %1

1:                                                ; preds = %entry
  %2 = icmp ugt i32 %numEmptyCases, 1
  br i1 %2, label %3, label %30

3:                                                ; preds = %1
  %4 = sub i32 %numEmptyCases, 1
  %5 = getelementptr inbounds i8, ptr %value, i32 16
  br i1 false, label %6, label %7

6:                                                ; preds = %3
  br label %19

7:                                                ; preds = %3
  br i1 true, label %8, label %11

8:                                                ; preds = %7
  %9 = load i8, ptr %5, align 1
  %10 = zext i8 %9 to i32
  br label %19

11:                                               ; preds = %7
  br i1 false, label %12, label %15

12:                                               ; preds = %11
  %13 = load i16, ptr %5, align 1
  %14 = zext i16 %13 to i32
  br label %19

15:                                               ; preds = %11
  br i1 false, label %16, label %18

16:                                               ; preds = %15
  %17 = load i32, ptr %5, align 1
  br label %19

18:                                               ; preds = %15
  unreachable

19:                                               ; preds = %16, %12, %8, %6
  %20 = phi i32 [ 0, %6 ], [ %10, %8 ], [ %14, %12 ], [ %17, %16 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = sub i32 %20, 1
  %24 = shl i32 %23, 128
  %25 = select i1 true, i32 0, i32 %24
  %26 = load i128, ptr %value, align 1
  %27 = trunc i128 %26 to i32
  %28 = or i32 %27, %25
  %29 = add i32 1, %28
  br label %35

30:                                               ; preds = %19, %1
  %value.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %value, i32 0, i32 0
  %value.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value.start, i32 0, i32 0
  %value.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value.start._rawValue, i32 0, i32 0
  %31 = load i64, ptr %value.start._rawValue._rawValue, align 8
  %32 = icmp ne i64 %31, 0
  %33 = sext i1 %32 to i32
  br label %35

34:                                               ; preds = %entry
  br label %35

35:                                               ; preds = %34, %30, %22
  %36 = phi i32 [ %33, %30 ], [ %29, %22 ], [ -1, %34 ]
  %37 = add i32 %36, 1
  ret i32 %37
}

; Function Attrs: nounwind
define internal void @"$s10BufferView07MutableaB0Vwst"(ptr noalias %value, i32 %whichCase, i32 %numEmptyCases, ptr %"MutableBufferView<Element>") #13 {
entry:
  %0 = getelementptr inbounds i8, ptr %value, i32 16
  %1 = icmp ugt i32 %numEmptyCases, 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %entry
  %3 = sub i32 %numEmptyCases, 1
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i32 [ 0, %entry ], [ 1, %2 ]
  %6 = icmp ule i32 %whichCase, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  br label %20

10:                                               ; preds = %7
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8 0, ptr %0, align 8
  br label %20

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i16 0, ptr %0, align 8
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq i32 %5, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i32 0, ptr %0, align 8
  br label %20

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %18, %15, %12, %9
  %21 = icmp eq i32 %whichCase, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  %23 = sub i32 %whichCase, 1
  %value.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %value, i32 0, i32 0
  %value.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value.start, i32 0, i32 0
  %value.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value.start._rawValue, i32 0, i32 0
  store i64 0, ptr %value.start._rawValue._rawValue, align 8
  br label %50

24:                                               ; preds = %4
  %25 = sub i32 %whichCase, 1
  %26 = sub i32 %25, 1
  br i1 true, label %31, label %27

27:                                               ; preds = %24
  %28 = lshr i32 %26, 128
  %29 = add i32 1, %28
  %30 = and i32 poison, %26
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ 1, %24 ], [ %29, %27 ]
  %33 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %34 = zext i32 %33 to i128
  store i128 %34, ptr %value, align 8
  %35 = icmp eq i32 %5, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %49

37:                                               ; preds = %31
  %38 = icmp eq i32 %5, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = trunc i32 %32 to i8
  store i8 %40, ptr %0, align 8
  br label %49

41:                                               ; preds = %37
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = trunc i32 %32 to i16
  store i16 %44, ptr %0, align 8
  br label %49

45:                                               ; preds = %41
  %46 = icmp eq i32 %5, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  store i32 %32, ptr %0, align 8
  br label %49

48:                                               ; preds = %45
  unreachable

49:                                               ; preds = %47, %43, %39, %36
  br label %50

50:                                               ; preds = %49, %22, %20
  ret void
}

; Function Attrs: nounwind
declare ptr @swift_allocateGenericValueMetadata(ptr, ptr, ptr, i64) #6

declare swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, i64, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSMsE42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__Sry7ElementQzGzKXEKlF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, ptr, ptr, ptr nocapture swiftself, ptr noalias nocapture swifterror dereferenceable(8)) #0

declare swiftcc void @"$sSMsE6swapAtyy5IndexQz_ACtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr nocapture swiftself) #0

declare swiftcc void @"$sSMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, ptr, ptr, ptr nocapture swiftself, ptr noalias nocapture swifterror dereferenceable(8)) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE30_customIndexOfEquatableElementy0B0QzSgSg0E0QzF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i64 @"$sSTsE13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tF"(ptr noalias nocapture, i64, i64, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc ptr @"$sSlsE22_copyToContiguousArrays0cD0Vy7ElementQzGyF"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i8 @"$sSTsE31_customContainsEquatableElementySbSg0D0QzF"(ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i64 @"$sSlsE19underestimatedCountSivg"(ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline
declare swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

declare swiftcc { i64, i64 } @"$sSr5start5countSryxGSpyxGSg_SitcfC"(i64, i64, ptr) #0

declare swiftcc { i64, i64 } @"$sSR5start5countSRyxGSPyxGSg_SitcfC"(i64, i64, ptr) #0

declare swiftcc { i64, i64 } @"$sSw5start5countSwSvSg_SitcfC"(i64, i64) #0

declare swiftcc { i64, i64 } @"$sSW5start5countSWSVSg_SitcfC"(i64, i64) #0

declare swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64, i64, ptr) #0

define internal swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_ySpyxGXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %"some Collection<Element>" = load ptr, ptr %6, align 8
  store ptr %"some Collection<Element>", ptr %4, align 8
  %7 = getelementptr inbounds ptr, ptr %5, i32 2
  %"some Collection<Element>.Collection" = load ptr, ptr %7, align 8
  %8 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %2, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSP, ptr %8, i32 0, i32 0
  %9 = load ptr, ptr %._rawValue, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [24 x i8], %TSP, %TSR.13 }>, ptr %2, i32 0, i32 3
  %._position = getelementptr inbounds %TSR.13, ptr %10, i32 0, i32 0
  %11 = load i64, ptr %._position, align 8
  %.count = getelementptr inbounds %TSR.13, ptr %10, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %12 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V6update14fromContentsOfAA0aB5IndexVyxGqd___t7ElementQyd__RszSlRd__lFSiSRyxGXEfU_ySpyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %9, i64 %11, i64 %12, ptr %Element, ptr %"some Collection<Element>", ptr %"some Collection<Element>.Collection", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc void @"$sSp6assign4from5countySPyxG_SitF"(ptr, i64, ptr, ptr) #0

declare swiftcc void @"$sSp6assign9repeating5countyx_SitF"(ptr noalias nocapture, i64, ptr, ptr) #0

declare swiftcc i1 @"$ss2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF"(ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr, ptr) #0

declare swiftcc %swift.metadata_response @"$sSpMa"(i64, ptr) #0

define internal swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_ySPyxGXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 2
  %._rawValue = getelementptr inbounds %TSp, ptr %5, i32 0, i32 0
  %6 = load ptr, ptr %._rawValue, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %TSp, %T10BufferView07MutableaB0V }>, ptr %2, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %8 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %9 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView07MutableaB0V9uncheckedACyxGSnyAA0aB5IndexVyxGG_tcisySpyxGXEfU_ySPyxGXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %6, ptr %8, i64 %9, ptr %Element, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

; Function Attrs: convergent nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #16

; Function Attrs: nounwind
declare ptr @swift_slowAlloc(i64, i64) #6

; Function Attrs: nounwind
declare void @swift_slowDealloc(ptr, i64, i64) #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #11

declare swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64, i64, i64) #0

declare extern_weak zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 noundef, i64 noundef) #0

declare swiftcc { i64, ptr } @"$ss9_typeName_9qualifiedSSypXp_SbtF"(ptr, i1) #0

declare swiftcc void @"$sSS6appendyySSF"(i64, ptr, ptr nocapture swiftself dereferenceable(16)) #0

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr %2, ptr %3, ptr %4) #17 {
entry:
  %generic.arguments = alloca [3 x ptr], align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %generic.arguments)
  %5 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 0
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 1
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 2
  store ptr %3, ptr %7, align 8
  %8 = call swiftcc %swift.metadata_response @swift_getGenericMetadata(i64 %0, ptr %generic.arguments, ptr %4) #9
  ret %swift.metadata_response %8
}

; Function Attrs: nounwind readonly
declare swiftcc %swift.metadata_response @swift_getGenericMetadata(i64, ptr, ptr) #9

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #6 = { nounwind }
attributes #7 = { noinline nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #8 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #9 = { nounwind readonly }
attributes #10 = { nocallback nofree nosync nounwind willreturn }
attributes #11 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { nounwind readnone willreturn }
attributes #13 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #14 = { argmemonly nocallback nofree nounwind willreturn }
attributes #15 = { nounwind readonly "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #16 = { convergent nocallback nofree nosync nounwind readnone willreturn }
attributes #17 = { noinline nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #18 = { nounwind readnone }
attributes #19 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
!17 = !{}
!18 = !{i64 96}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.type = type { i64 }
%swift.protocol_conformance_descriptor = type { i32, i32, i32, i32 }
%swift.type_descriptor = type opaque
%swift.protocol = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%swift.protocol_requirement = type { i32, i32 }
%swift.method_descriptor = type { i32, i32 }
%swift.vwtable = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32 }
%swift.type_metadata_record = type { i32 }
%T10BufferViewAAV = type <{ %T10BufferView0aB5IndexV, %TSi }>
%T10BufferView0aB5IndexV = type <{ %TSV }>
%TSV = type <{ ptr }>
%TSi = type <{ i64 }>
%Ts26DefaultStringInterpolationV = type <{ %TSS }>
%TSS = type <{ %Ts11_StringGutsV }>
%Ts11_StringGutsV = type <{ %Ts13_StringObjectV }>
%Ts13_StringObjectV = type <{ %Ts6UInt64V, ptr }>
%Ts6UInt64V = type <{ i64 }>
%TSR = type <{ %TSq.2, %TSi }>
%TSq.2 = type <{ [8 x i8] }>
%TSVSg = type <{ [8 x i8] }>
%T10BufferView07MutableaB0V = type <{ %T10BufferView0aB5IndexV, %TSi }>
%swift.metadata_response = type { ptr, i64 }
%TSW = type <{ %TSVSg, %TSVSg }>
%swift.opaque = type opaque
%swift.noescape.function = type { ptr, ptr }
%swift.refcounted = type { ptr, i64 }
%T10BufferView0aB8IteratorV = type <{ %TSV, %TSV }>
%Ts12Zip2SequenceV8IteratorV = type <{ %T10BufferView0aB8IteratorV, %T10BufferView0aB8IteratorV, %TSb }>
%TSb = type <{ i1 }>
%Ts12Zip2SequenceV = type <{ %T10BufferViewAAV, %T10BufferViewAAV }>
%swift.tuple_type = type { %swift.type, i64, ptr, [0 x %swift.tuple_element_type] }
%swift.tuple_element_type = type { ptr, i32 }
%TSn = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%TSn.0 = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame" = type { [32 x i8], ptr }
%"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame" = type { ptr, ptr, ptr }
%TSq.13 = type <{ [8 x i8], [1 x i8] }>
%TSq.14 = type <{ [8 x i8] }>
%TSn.1 = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>

@".str.27.BufferView/BufferView.swift" = private unnamed_addr constant [28 x i8] c"BufferView/BufferView.swift\00"
@".str.19.Precondition failed" = private unnamed_addr constant [20 x i8] c"Precondition failed\00"
@".str.26.Count must not be negative" = private unnamed_addr constant [27 x i8] c"Count must not be negative\00"
@".str.41.baseAddress must be properly aligned for " = private unnamed_addr constant [42 x i8] c"baseAddress must be properly aligned for \00"
@.str.0. = private unnamed_addr constant [1 x i8] zeroinitializer
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@"$sSiN" = external global %swift.type, align 8
@"$sS2iSzsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$s10BufferView0aB5IndexVyxGSxAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$s10BufferView0aB5IndexVyxGSLAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.19.Index out of bounds" = private unnamed_addr constant [20 x i8] c"Index out of bounds\00"
@".str.30.Index is unaligned for Element" = private unnamed_addr constant [31 x i8] c"Index is unaligned for Element\00"
@".str.41.Range of indices is unaligned for Element" = private unnamed_addr constant [42 x i8] c"Range of indices is unaligned for Element\00"
@".str.30.Range of indices out of bounds" = private unnamed_addr constant [31 x i8] c"Range of indices out of bounds\00"
@".str.31.Division results in an overflow" = private unnamed_addr constant [32 x i8] c"Division results in an overflow\00"
@".str.24.Swift/IntegerTypes.swift" = private unnamed_addr constant [25 x i8] c"Swift/IntegerTypes.swift\00"
@"$sSnyxGSlsSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sS2iSZsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSZsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.39.Can't have a prefix of negative length." = private unnamed_addr constant [40 x i8] c"Can't have a prefix of negative length.\00"
@".str.39.Can't have a suffix of negative length." = private unnamed_addr constant [40 x i8] c"Can't have a suffix of negative length.\00"
@".str.41.Can't drop a negative number of elements." = private unnamed_addr constant [42 x i8] c"Can't drop a negative number of elements.\00"
@"$s10BufferView0aB8IteratorVyxGStAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferViewAAVyxGSTAA8IteratorST_St" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAA8IteratorST_StWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSTAA8IteratorST_St", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic x" = linkonce_odr hidden constant <{ [1 x i8], i8 }> <{ [1 x i8] c"x", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB8IteratorVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB8IteratorVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB8IteratorVMn"
@"symbolic _____yxG 10BufferView0aB8IteratorV" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferView0aB8IteratorV", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____ 10BufferViewAAV" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, i8 }>, ptr @"symbolic _____ 10BufferViewAAV", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sST" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sST", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@0 = private constant [8 x i8] c"Element\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@1 = private constant [9 x i8] c"Iterator\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferViewAAVyxGSTAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferViewAAV" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sST" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMA", i32 0, i32 1) to i64)) to i32), i32 2, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMA", i32 0, i32 7) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSTMp" = external global %swift.protocol, align 4
@"got.$sSTMp" = private unnamed_addr constant ptr @"$sSTMp"
@"$sST8IteratorST_StTn" = external global %swift.protocol_requirement, align 4
@"got.$sST8IteratorST_StTn" = private unnamed_addr constant ptr @"$sST8IteratorST_StTn"
@"$s7ElementSTTl" = external global %swift.protocol_requirement, align 4
@"got.$s7ElementSTTl" = private unnamed_addr constant ptr @"$s7ElementSTTl"
@"$s8IteratorSTTl" = external global %swift.protocol_requirement, align 4
@"got.$s8IteratorSTTl" = private unnamed_addr constant ptr @"$s8IteratorSTTl"
@"$sST12makeIterator0B0QzyFTq" = external global %swift.method_descriptor, align 4
@"got.$sST12makeIterator0B0QzyFTq" = private unnamed_addr constant ptr @"$sST12makeIterator0B0QzyFTq"
@"$sST19underestimatedCountSivgTq" = external global %swift.method_descriptor, align 4
@"got.$sST19underestimatedCountSivgTq" = private unnamed_addr constant ptr @"$sST19underestimatedCountSivgTq"
@"$sST31_customContainsEquatableElementySbSg0D0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sST31_customContainsEquatableElementySbSg0D0QzFTq" = private unnamed_addr constant ptr @"$sST31_customContainsEquatableElementySbSg0D0QzFTq"
@"$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" = external global %swift.method_descriptor, align 4
@"got.$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" = private unnamed_addr constant ptr @"$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq"
@"$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" = private unnamed_addr constant ptr @"$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq"
@"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" = external global %swift.method_descriptor, align 4
@"got.$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" = private unnamed_addr constant ptr @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq"
@"$s10BufferViewAAVyxGSTAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferViewAAVyxGSTAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSTMp" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 9, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST8IteratorST_StTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSTAA8IteratorST_St", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s7ElementSTTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic x", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s8IteratorSTTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferView0aB8IteratorV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST12makeIterator0B0QzyFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST12makeIterator0D0QzyFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST19underestimatedCountSivgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST19underestimatedCountSivgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST31_customContainsEquatableElementySbSg0D0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST31_customContainsEquatableElementySbSg0F0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST22_copyToContiguousArrays0eF0Vy7ElementQzGyFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 20) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 21) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 22) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSTAAMc", i32 0, i32 26) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferViewAAVyxGSlAAST" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASTWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSlAAST", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferViewAAVyxGSlAA5IndexSl_SL" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAA5IndexSl_SLWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSlAA5IndexSl_SL", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferViewAAVyxGSlAA7IndicesSl_Sl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAA7IndicesSl_SlWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSlAA7IndicesSl_Sl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferViewAAVyxGSlAA11SubSequenceSl_Sl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAA11SubSequenceSl_SlWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSlAA11SubSequenceSl_Sl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB5IndexVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB5IndexVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB5IndexVMn"
@"symbolic _____yxG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferView0aB5IndexV", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____yxG 10BufferViewAAV" = linkonce_odr hidden constant <{ i8, i32, [3 x i8], i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [3 x i8], i8 }>, ptr @"symbolic _____yxG 10BufferViewAAV", i32 0, i32 1) to i64)) to i32), [3 x i8] c"yxG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic Sny_____yxGG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ [3 x i8], i8, i32, [4 x i8], i8 }> <{ [3 x i8] c"Sny", i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ [3 x i8], i8, i32, [4 x i8], i8 }>, ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV", i32 0, i32 2) to i64)) to i32), [4 x i8] c"yxGG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSl" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSl", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@2 = private constant [6 x i8] c"Index\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@3 = private constant [12 x i8] c"SubSequence\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@4 = private constant [8 x i8] c"Indices\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferViewAAVyxGSlAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferViewAAV" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 1) to i64)) to i32), i32 5, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferViewAAV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 11) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 12) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMA", i32 0, i32 13) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSlMp" = external global %swift.protocol, align 4
@"got.$sSlMp" = private unnamed_addr constant ptr @"$sSlMp"
@"$sSlSTTb" = external global %swift.protocol_requirement, align 4
@"got.$sSlSTTb" = private unnamed_addr constant ptr @"$sSlSTTb"
@"$sSl5IndexSl_SLTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl5IndexSl_SLTn" = private unnamed_addr constant ptr @"$sSl5IndexSl_SLTn"
@"$sSl7IndicesSl_SlTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl7IndicesSl_SlTn" = private unnamed_addr constant ptr @"$sSl7IndicesSl_SlTn"
@"$sSl11SubSequenceSl_SlTn" = external global %swift.protocol_requirement, align 4
@"got.$sSl11SubSequenceSl_SlTn" = private unnamed_addr constant ptr @"$sSl11SubSequenceSl_SlTn"
@"$s5IndexSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s5IndexSlTl" = private unnamed_addr constant ptr @"$s5IndexSlTl"
@"$s11SubSequenceSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s11SubSequenceSlTl" = private unnamed_addr constant ptr @"$s11SubSequenceSlTl"
@"$s7IndicesSlTl" = external global %swift.protocol_requirement, align 4
@"got.$s7IndicesSlTl" = private unnamed_addr constant ptr @"$s7IndicesSlTl"
@"$sSl10startIndex0B0QzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl10startIndex0B0QzvgTq" = private unnamed_addr constant ptr @"$sSl10startIndex0B0QzvgTq"
@"$sSl8endIndex0B0QzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl8endIndex0B0QzvgTq" = private unnamed_addr constant ptr @"$sSl8endIndex0B0QzvgTq"
@"$sSly7ElementQz5IndexQzcirTq" = external global %swift.method_descriptor, align 4
@"got.$sSly7ElementQz5IndexQzcirTq" = private unnamed_addr constant ptr @"$sSly7ElementQz5IndexQzcirTq"
@"$sSly11SubSequenceQzSny5IndexQzGcigTq" = external global %swift.method_descriptor, align 4
@"got.$sSly11SubSequenceQzSny5IndexQzGcigTq" = private unnamed_addr constant ptr @"$sSly11SubSequenceQzSny5IndexQzGcigTq"
@"$sSl7indices7IndicesQzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl7indices7IndicesQzvgTq" = private unnamed_addr constant ptr @"$sSl7indices7IndicesQzvgTq"
@"$sSl7isEmptySbvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl7isEmptySbvgTq" = private unnamed_addr constant ptr @"$sSl7isEmptySbvgTq"
@"$sSl5countSivgTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5countSivgTq" = private unnamed_addr constant ptr @"$sSl5countSivgTq"
@"$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" = private unnamed_addr constant ptr @"$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq"
@"$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" = private unnamed_addr constant ptr @"$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq"
@"$sSl5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSl5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSl8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSl8distance4from2toSi5IndexQz_AEtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq"
@"$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" = private unnamed_addr constant ptr @"$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq"
@"$sSl5index5after5IndexQzAD_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl5index5after5IndexQzAD_tFTq" = private unnamed_addr constant ptr @"$sSl5index5after5IndexQzAD_tFTq"
@"$sSl9formIndex5aftery0B0Qzz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSl9formIndex5aftery0B0Qzz_tFTq" = private unnamed_addr constant ptr @"$sSl9formIndex5aftery0B0Qzz_tFTq"
@"$s10BufferViewAAVyxGSlAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferViewAAVyxGSlAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSlMp" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 24, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSlSTTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSlAAST", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5IndexSl_SLTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSlAA5IndexSl_SL", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7IndicesSl_SlTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSlAA7IndicesSl_Sl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl11SubSequenceSl_SlTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSlAA11SubSequenceSl_Sl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s5IndexSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferView0aB5IndexV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s11SubSequenceSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic _____yxG 10BufferViewAAV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s7IndicesSlTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl10startIndex0B0QzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl10startIndex0D0QzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 20) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl8endIndex0B0QzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 21) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl8endIndex0D0QzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 22) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSly7ElementQz5IndexQzcirTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 23) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 24) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSly11SubSequenceQzSny5IndexQzGcigTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 25) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASly11SubSequenceQzSny5IndexQzGcigTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 26) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7indices7IndicesQzvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 27) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl7indices7IndicesQzvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 28) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl7isEmptySbvgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 29) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl7isEmptySbvgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 30) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5countSivgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 31) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl5countSivgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 32) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl30_customIndexOfEquatableElementy0B0QzSgSg0E0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 33) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl30_customIndexOfEquatableElementy0D0QzSgSg0G0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 34) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 35) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl34_customLastIndexOfEquatableElementy0E0QzSgSg0H0QzFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 36) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 37) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl5index_8offsetBy5IndexQzAG_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 38) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 39) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 40) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 41) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl8distance4from2toSi5IndexQz_AHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 42) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 43) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyAGGtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 44) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 45) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyAGGtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 46) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 47) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 48) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl5index5after5IndexQzAD_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 49) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl5index5after5IndexQzAG_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 50) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSl9formIndex5aftery0B0Qzz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 51) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAASl9formIndex5aftery0D0Qzz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 52) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSlAAMc", i32 0, i32 56) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferViewAAVyxGSKAASl" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASlWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSKAASl", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSnyxGSKsSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferViewAAVyxGSKAA7IndicesSl_SK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAA7IndicesSl_SKWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSKAA7IndicesSl_SK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferViewAAVyxGSKAA11SubSequenceSl_SK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAA11SubSequenceSl_SKWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSKAA11SubSequenceSl_SK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSK" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSK", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferViewAAVyxGSKAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferViewAAV" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 1) to i64)) to i32), i32 4, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferViewAAV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMA", i32 0, i32 11) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSKMp" = external global %swift.protocol, align 4
@"got.$sSKMp" = private unnamed_addr constant ptr @"$sSKMp"
@"$sSKSlTb" = external global %swift.protocol_requirement, align 4
@"got.$sSKSlTb" = private unnamed_addr constant ptr @"$sSKSlTb"
@"$sSK7IndicesSl_SKTn" = external global %swift.protocol_requirement, align 4
@"got.$sSK7IndicesSl_SKTn" = private unnamed_addr constant ptr @"$sSK7IndicesSl_SKTn"
@"$sSK11SubSequenceSl_SKTn" = external global %swift.protocol_requirement, align 4
@"got.$sSK11SubSequenceSl_SKTn" = private unnamed_addr constant ptr @"$sSK11SubSequenceSl_SKTn"
@"$sSK5index6before5IndexQzAD_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index6before5IndexQzAD_tFTq" = private unnamed_addr constant ptr @"$sSK5index6before5IndexQzAD_tFTq"
@"$sSK9formIndex6beforey0B0Qzz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK9formIndex6beforey0B0Qzz_tFTq" = private unnamed_addr constant ptr @"$sSK9formIndex6beforey0B0Qzz_tFTq"
@"$sSK5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSK5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSK8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSK8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSK8distance4from2toSi5IndexQz_AEtFTq"
@"$s10BufferViewAAVyxGSKAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferViewAAVyxGSKAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSKMp" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 8, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSKSlTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSKAASl", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK7IndicesSl_SKTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSKAA7IndicesSl_SK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK11SubSequenceSl_SKTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSKAA11SubSequenceSl_SK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index6before5IndexQzAD_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASK5index6before5IndexQzAG_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK9formIndex6beforey0B0Qzz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASK9formIndex6beforey0D0Qzz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASK5index_8offsetBy5IndexQzAG_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASK5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 18) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSK8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 19) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAASK8distance4from2toSi5IndexQz_AHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 20) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSKAAMc", i32 0, i32 24) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferViewAAVyxGSkAASK" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAASKWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSkAASK", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSnyxGSksSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"associated conformance 10BufferViewAAVyxGSkAA7IndicesSl_Sk" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAA7IndicesSl_SkWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSkAA7IndicesSl_Sk", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"associated conformance 10BufferViewAAVyxGSkAA11SubSequenceSl_Sk" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAA11SubSequenceSl_SkWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferViewAAVyxGSkAA11SubSequenceSl_Sk", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSk" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSk", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferViewAAVyxGSkAAMA" = internal constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferViewAAV" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSk" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 1) to i64)) to i32), i32 4, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 5) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 8) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferViewAAV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @4 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 10) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____yxGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMA", i32 0, i32 11) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSkMp" = external global %swift.protocol, align 4
@"got.$sSkMp" = private unnamed_addr constant ptr @"$sSkMp"
@"$sSkSKTb" = external global %swift.protocol_requirement, align 4
@"got.$sSkSKTb" = private unnamed_addr constant ptr @"$sSkSKTb"
@"$sSk7IndicesSl_SkTn" = external global %swift.protocol_requirement, align 4
@"got.$sSk7IndicesSl_SkTn" = private unnamed_addr constant ptr @"$sSk7IndicesSl_SkTn"
@"$sSk11SubSequenceSl_SkTn" = external global %swift.protocol_requirement, align 4
@"got.$sSk11SubSequenceSl_SkTn" = private unnamed_addr constant ptr @"$sSk11SubSequenceSl_SkTn"
@"$sSk5index_8offsetBy5IndexQzAD_SitFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk5index_8offsetBy5IndexQzAD_SitFTq" = private unnamed_addr constant ptr @"$sSk5index_8offsetBy5IndexQzAD_SitFTq"
@"$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" = private unnamed_addr constant ptr @"$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq"
@"$sSk8distance4from2toSi5IndexQz_AEtFTq" = external global %swift.method_descriptor, align 4
@"got.$sSk8distance4from2toSi5IndexQz_AEtFTq" = private unnamed_addr constant ptr @"$sSk8distance4from2toSi5IndexQz_AEtFTq"
@"$s10BufferViewAAVyxGSkAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferViewAAVyxGSkAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSkMp" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 6, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSkSKTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSkAASK", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk7IndicesSl_SkTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSkAA7IndicesSl_Sk", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk11SubSequenceSl_SkTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferViewAAVyxGSkAA11SubSequenceSl_Sk", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk5index_8offsetBy5IndexQzAD_SitFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAASk5index_8offsetBy5IndexQzAG_SitFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAASk5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSk8distance4from2toSi5IndexQz_AEtFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAASk8distance4from2toSi5IndexQz_AHtFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 16) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferViewAAVyxGSkAAMc", i32 0, i32 20) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV" = unnamed_addr constant { i32 } zeroinitializer, align 4
@"$s10BufferViewAAVWV" = internal constant %swift.vwtable { ptr @__swift_memcpy16_8, ptr @__swift_noop_void_return, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @"$s10BufferViewAAVwet", ptr @"$s10BufferViewAAVwst", i64 16, i64 16, i32 7, i32 1 }, align 8
@5 = internal constant <{ i32, i32 }> <{ i32 0, i32 8 }>, align 8
@.str.10.BufferView = private constant [11 x i8] c"BufferView\00"
@"$s10BufferViewMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32 }>, ptr @"$s10BufferViewMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferViewAAVMI" = internal global [16 x ptr] zeroinitializer, align 8
@"$s10BufferViewAAVMn" = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }> <{ i32 209, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewMXM" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMa" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMF" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 4) to i64)) to i32), i32 2, i32 3, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMI" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMP" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferViewAAVMn", i32 0, i32 8) to i64)) to i32), i16 1, i16 0, i16 1, i16 0, i8 -128, i8 0, i8 0, i8 0 }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferViewAAVMP" = internal constant <{ i32, i32, i32, i32, i32, i16, i16 }> <{ i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMi" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVMP" to i64)) to i32), i32 0, i32 1073741825, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVWV" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferViewAAVMP", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @5 to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferViewAAVMP", i32 0, i32 4) to i64)) to i32), i16 1, i16 1 }>, align 8
@6 = private constant [6 x i8] c"start\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"symbolic Si" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Si", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@7 = private constant [6 x i8] c"count\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferViewAAVMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferViewAAV" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVMF" to i64)) to i32), i32 0, i16 0, i16 12, i32 2, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____yxG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @6 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVMF", i32 0, i32 7) to i64)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Si" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVMF", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @7 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferViewAAVMF", i32 0, i32 10) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular", no_sanitize_address, align 4
@".str.28.Swift/UnsafeRawPointer.swift" = private unnamed_addr constant [29 x i8] c"Swift/UnsafeRawPointer.swift\00"
@".str.31.Allocation byte count too large" = private unnamed_addr constant [32 x i8] c"Allocation byte count too large\00"
@".str.31.Swift/TemporaryAllocation.swift" = private unnamed_addr constant [32 x i8] c"Swift/TemporaryAllocation.swift\00"
@".str.41.Alignment value must be greater than zero" = private unnamed_addr constant [42 x i8] c"Alignment value must be greater than zero\00"
@".str.38.Alignment value must be a power of two" = private unnamed_addr constant [39 x i8] c"Alignment value must be a power of two\00"
@".str.35.Negative value is not representable" = private unnamed_addr constant [36 x i8] c"Negative value is not representable\00"
@".str.20.Swift/Integers.swift" = private unnamed_addr constant [21 x i8] c"Swift/Integers.swift\00"
@".str.50.self must be a properly aligned pointer for type T" = private unnamed_addr constant [51 x i8] c"self must be a properly aligned pointer for type T\00"
@"$s10BufferViewAAVyxGSTAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSTAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferViewAAVyxGSlAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSlAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferViewAAVyxGSKAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSKAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferViewAAVyxGSkAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVyxGSkAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferViewAAVHn" = private constant %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewAAVMn" to i64), i64 ptrtoint (ptr @"$s10BufferViewAAVHn" to i64)) to i32) }, section "__TEXT, __swift5_types, regular", no_sanitize_address, align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [69 x ptr] [ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvg", ptr @"$s10BufferViewAAV5countSivg", ptr @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC", ptr @"$s10BufferViewAAV5start5count9dependsOnAByxGAA0aB5IndexVyxG_Siqd__tclufC", ptr @"$s10BufferViewAAV06unsafeA7Pointer9dependsOnAByxGSgSRyxG_qd__tclufC", ptr @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC", ptr @"$s10BufferViewAAV09unsafeRawA7Pointer9dependsOnAByxGSgSW_qd__tclufC", ptr @"$s10BufferViewAAV12makeIteratorAA0abD0VyxGyF", ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg", ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg", ptr @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF", ptr @"$s10BufferViewAAVAASQRzlE13elementsEqualySbAByxGF", ptr @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg", ptr @"$s10BufferViewAAV7isEmptySbvg", ptr @"$s10BufferViewAAV12_checkBoundsyyAA0aB5IndexVyxGF", ptr @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF", ptr @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF", ptr @"$s10BufferViewAAV5index5afterAA0aB5IndexVyxGAG_tF", ptr @"$s10BufferViewAAV5index6beforeAA0aB5IndexVyxGAG_tF", ptr @"$s10BufferViewAAV9formIndex5afteryAA0abD0VyxGz_tF", ptr @"$s10BufferViewAAV9formIndex6beforeyAA0abD0VyxGz_tF", ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF", ptr @"$s10BufferViewAAV9formIndex_8offsetByyAA0abD0VyxGz_SitF", ptr @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig", ptr @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig", ptr @"$s10BufferViewAAVyAByxGSnyAA0aB5IndexVyxGGcig", ptr @"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcig", ptr @"$s10BufferViewAAV20withUnsafeRawPointeryqd__qd__SV_SitKXEKlF", ptr @"$s10BufferViewAAV15withUnsafeBytesyqd__qd__SWKXEKlF", ptr @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF", ptr @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlF", ptr @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlF", ptr @"$s10BufferViewAAV4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF", ptr @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF", ptr @"$s10BufferViewAAV13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF", ptr @"$s10BufferViewAAV6offsetxSi_tcig", ptr @"$s10BufferViewAAV15uncheckedOffsetxSi_tcig", ptr @"$s10BufferViewAAV5firstxSgvg", ptr @"$s10BufferViewAAV4lastxSgvg", ptr @"$s10BufferViewAAV6prefixyAByxGSiF", ptr @"$s10BufferViewAAV6suffixyAByxGSiF", ptr @"$s10BufferViewAAV9dropFirstyAByxGSiF", ptr @"$s10BufferViewAAV8dropLastyAByxGSiF", ptr @"$s10BufferViewAAV6prefix4upToAByxGAA0aB5IndexVyxG_tF", ptr @"$s10BufferViewAAV6suffix4fromAByxGAA0aB5IndexVyxG_tF", ptr @"$s10BufferViewAAVyxGSTAAMA", ptr @"$s10BufferViewAAVyxGSTAAMc", ptr @"$s10BufferViewAAVyxGSTAAMc", ptr @"$s10BufferViewAAVyxGSlAAMA", ptr @"$s10BufferViewAAVyxGSlAAMc", ptr @"$s10BufferViewAAVyxGSlAAMc", ptr @"$s10BufferViewAAVyxGSKAAMA", ptr @"$s10BufferViewAAVyxGSKAAMc", ptr @"$s10BufferViewAAVyxGSKAAMc", ptr @"$s10BufferViewAAVyxGSkAAMA", ptr @"$s10BufferViewAAVyxGSkAAMc", ptr @"$s10BufferViewAAVyxGSkAAMc", ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV", ptr @"$s10BufferViewAAVMn", ptr @"$s10BufferViewAAVMn", ptr @"$s10BufferViewAAVMa", ptr @"$s10BufferViewAAVMF", ptr @"$s10BufferViewAAVMa", ptr @"$s10BufferViewAAVyxGSTAAHc", ptr @"$s10BufferViewAAVyxGSlAAHc", ptr @"$s10BufferViewAAVyxGSKAAHc", ptr @"$s10BufferViewAAVyxGSkAAHc", ptr @"$s10BufferViewAAVHn", ptr @__swift_reflection_version], section "llvm.metadata"
@llvm.compiler.used = appending global [14 x ptr] [ptr @"$s10BufferViewAAVyxGSTAA8IteratorST_StWT", ptr @"$s10BufferViewAAVyxGSlAASTWb", ptr @"$s10BufferViewAAVyxGSlAA5IndexSl_SLWT", ptr @"$sS2iSZsWl", ptr @"$s10BufferViewAAVyxGSlAA7IndicesSl_SlWT", ptr @"$s10BufferViewAAVyxGSlAA11SubSequenceSl_SlWT", ptr @"$s10BufferViewAAVyxGSKAASlWb", ptr @"$sS2iSZsWl", ptr @"$s10BufferViewAAVyxGSKAA7IndicesSl_SKWT", ptr @"$s10BufferViewAAVyxGSKAA11SubSequenceSl_SKWT", ptr @"$s10BufferViewAAVyxGSkAASKWb", ptr @"$sS2iSZsWl", ptr @"$s10BufferViewAAVyxGSkAA7IndicesSl_SkWT", ptr @"$s10BufferViewAAVyxGSkAA11SubSequenceSl_SkWT"], section "llvm.metadata"

@"$s10BufferViewAAV5countSivpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV10startIndexAA0abD0VyxGvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV8endIndexAA0abD0VyxGvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV7isEmptySbvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAVyxAA0aB5IndexVyxGcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAVyAByxGSnyAA0aB5IndexVyxGGcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAVyAByxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV9uncheckedAByxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV6offsetxSi_tcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV15uncheckedOffsetxSi_tcipMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV5firstxSgvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"
@"$s10BufferViewAAV4lastxSgvpMV" = alias { i32 }, ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvpMV"

define swiftcc ptr @"$s10BufferViewAAV5startAA0aB5IndexVyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  ret ptr %0
}

define swiftcc i64 @"$s10BufferViewAAV5countSivg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  ret i64 %1
}

define internal swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  ret ptr %0
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %baseAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %baseAddress.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %3 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %4, align 8, !invariant.load !17
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %baseAddress.debug, align 8
  store i64 %1, ptr %count.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  %6 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %0, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  %9 = call ptr %8(ptr noalias %5, ptr noalias %2, ptr %Owner) #6
  %10 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV5start5count9dependsOnAByxGAA0aB5IndexVyxG_Siqd__tclufC"(ptr %6, i64 %1, ptr noalias nocapture %5, ptr %Element, ptr %Owner)
  %11 = extractvalue { ptr, i64 } %10, 0
  %12 = extractvalue { ptr, i64 } %10, 1
  %self.start = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %11, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %12, ptr %self.count._value, align 8
  %13 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %14 = load ptr, ptr %13, align 8, !invariant.load !17
  call void %14(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %5)
  %15 = insertvalue { ptr, i64 } undef, ptr %11, 0
  %16 = insertvalue { ptr, i64 } %15, i64 %12, 1
  ret { ptr, i64 } %16
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr, ptr) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

define swiftcc { ptr, i64 } @"$s10BufferViewAAV5start5count9dependsOnAByxGAA0aB5IndexVyxG_Siqd__tclufC"(ptr %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %3 = alloca %Ts26DefaultStringInterpolationV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %index.debug, align 8
  store i64 %1, ptr %count.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %1, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.26.Count must not be negative", i64 26, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 28, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %12, align 8, !invariant.load !17, !dereferenceable !18
  %13 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %13, align 8, !invariant.load !17
  %14 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %14, 0
  %15 = xor i1 %flags.isTriviallyDestroyable, true
  br i1 %15, label %16, label %37

16:                                               ; preds = %11
  call void asm sideeffect "nop", ""()
  %17 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 true)
  br i1 %18, label %36, label %19

19:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %20 = call swiftcc { i64, ptr } @"$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC"(i64 41, i64 1)
  %21 = extractvalue { i64, ptr } %20, 0
  %22 = extractvalue { i64, ptr } %20, 1
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %3, i32 0, i32 0
  %._storage._guts = getelementptr inbounds %TSS, ptr %._storage, i32 0, i32 0
  %._storage._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage._guts, i32 0, i32 0
  %._storage._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 0
  %._storage._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, ptr %._storage._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %21, ptr %._storage._guts._object._countAndFlagsBits._value, align 8
  %._storage._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 1
  store ptr %22, ptr %._storage._guts._object._object, align 8
  %23 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.baseAddress must be properly aligned for ", i64 41, i1 true)
  %24 = extractvalue { i64, ptr } %23, 0
  %25 = extractvalue { i64, ptr } %23, 1
  call swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64 %24, ptr %25, ptr nocapture swiftself dereferenceable(16) %3)
  call void @swift_bridgeObjectRelease(ptr %25) #6
  call swiftcc void @"$ss26DefaultStringInterpolationV06appendC0yyypXpF"(ptr %Element, ptr nocapture swiftself dereferenceable(16) %3)
  %26 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @.str.0., i64 0, i1 true)
  %27 = extractvalue { i64, ptr } %26, 0
  %28 = extractvalue { i64, ptr } %26, 1
  call swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64 %27, ptr %28, ptr nocapture swiftself dereferenceable(16) %3)
  call void @swift_bridgeObjectRelease(ptr %28) #6
  %._storage3 = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %3, i32 0, i32 0
  %._storage3._guts = getelementptr inbounds %TSS, ptr %._storage3, i32 0, i32 0
  %._storage3._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage3._guts, i32 0, i32 0
  %._storage3._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage3._guts._object, i32 0, i32 0
  %._storage3._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, ptr %._storage3._guts._object._countAndFlagsBits, i32 0, i32 0
  %29 = load i64, ptr %._storage3._guts._object._countAndFlagsBits._value, align 8
  %._storage3._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage3._guts._object, i32 0, i32 1
  %30 = load ptr, ptr %._storage3._guts._object._object, align 8
  %31 = call ptr @swift_bridgeObjectRetain(ptr returned %30) #6
  %32 = call ptr @"$ss26DefaultStringInterpolationVWOh"(ptr %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %33 = call swiftcc { i64, ptr } @"$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC"(i64 %29, ptr %30)
  %34 = extractvalue { i64, ptr } %33, 0
  %35 = extractvalue { i64, ptr } %33, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %34, ptr %35, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 30, i32 1)
  unreachable

36:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  br label %38

37:                                               ; preds = %11
  br label %38

38:                                               ; preds = %36, %37
  %self.start = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %1, ptr %self.count._value, align 8
  %39 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %39, align 8, !invariant.load !17, !dereferenceable !18
  %40 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %41 = load ptr, ptr %40, align 8, !invariant.load !17
  call void %41(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  %42 = insertvalue { ptr, i64 } undef, ptr %0, 0
  %43 = insertvalue { ptr, i64 } %42, i64 %1, 1
  ret { ptr, i64 } %43
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #4

declare swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr, i64, i1) #0

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64, i64, i8, i64, ptr, i64, i64, i8, i64, i32) #5

declare swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr, ptr) #0

declare swiftcc { i64, ptr } @"$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC"(i64, i64) #0

declare swiftcc void @"$ss26DefaultStringInterpolationV13appendLiteralyySSF"(i64, ptr, ptr nocapture swiftself dereferenceable(16)) #0

; Function Attrs: nounwind
declare void @swift_bridgeObjectRelease(ptr) #6

define linkonce_odr hidden swiftcc void @"$ss26DefaultStringInterpolationV06appendC0yyypXpF"(ptr %0, ptr nocapture swiftself dereferenceable(16) %1) #0 {
entry:
  %2 = call swiftcc { i64, ptr } @"$ss9_typeName_9qualifiedSSypXp_SbtF"(ptr %0, i1 false)
  %3 = extractvalue { i64, ptr } %2, 0
  %4 = extractvalue { i64, ptr } %2, 1
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %1, i32 0, i32 0
  call swiftcc void @"$sSS6appendyySSF"(i64 %3, ptr %4, ptr nocapture swiftself dereferenceable(16) %._storage)
  call void @swift_bridgeObjectRelease(ptr %4) #6
  ret void
}

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #6

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$ss26DefaultStringInterpolationVWOh"(ptr %0) #7 {
entry:
  %._storage = getelementptr inbounds %Ts26DefaultStringInterpolationV, ptr %0, i32 0, i32 0
  %._storage._guts = getelementptr inbounds %TSS, ptr %._storage, i32 0, i32 0
  %._storage._guts._object = getelementptr inbounds %Ts11_StringGutsV, ptr %._storage._guts, i32 0, i32 0
  %._storage._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, ptr %._storage._guts._object, i32 0, i32 1
  %toDestroy = load ptr, ptr %._storage._guts._object._object, align 8
  call void @swift_bridgeObjectRelease(ptr %toDestroy) #6
  ret ptr %0
}

declare swiftcc { i64, ptr } @"$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC"(i64, ptr) #0

define swiftcc { i64, i64 } @"$s10BufferViewAAV06unsafeA7Pointer9dependsOnAByxGSgSRyxG_qd__tclufC"(i64 %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %buffer.debug = alloca %TSR, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buffer.debug, i8 0, i64 16, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %3 = alloca %TSVSg, align 8
  %4 = alloca %TSVSg, align 8
  %baseAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %baseAddress.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %5 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %6, align 8, !invariant.load !17
  %7 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %7)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer.debug)
  %buffer.debug._position = getelementptr inbounds %TSR, ptr %buffer.debug, i32 0, i32 0
  store i64 %0, ptr %buffer.debug._position, align 8
  %buffer.debug.count = getelementptr inbounds %TSR, ptr %buffer.debug, i32 0, i32 1
  %buffer.debug.count._value = getelementptr inbounds %TSi, ptr %buffer.debug.count, i32 0, i32 0
  store i64 %1, ptr %buffer.debug.count._value, align 8
  store ptr %2, ptr %owner.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %8 = call swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64 %0, i64 %1, ptr %Element)
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = inttoptr i64 %8 to ptr
  br label %13

12:                                               ; preds = %entry
  br label %16

13:                                               ; preds = %10
  %14 = phi ptr [ %11, %10 ]
  %15 = ptrtoint ptr %14 to i64
  br label %16

16:                                               ; preds = %13, %12
  %17 = phi i64 [ 0, %12 ], [ %15, %13 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  store i64 %17, ptr %4, align 8
  %18 = load i64, ptr %4, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %._rawValue = getelementptr inbounds %TSV, ptr %4, i32 0, i32 0
  %21 = load ptr, ptr %._rawValue, align 8
  %22 = ptrtoint ptr %21 to i64
  store i64 %22, ptr %3, align 8
  br label %24

23:                                               ; preds = %16
  store i64 0, ptr %3, align 8
  br label %24

24:                                               ; preds = %20, %23
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %25 = load i64, ptr %3, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = inttoptr i64 %25 to ptr
  br label %32

29:                                               ; preds = %24
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %30 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %31 = load ptr, ptr %30, align 8, !invariant.load !17
  call void %31(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %43

32:                                               ; preds = %27
  %33 = phi ptr [ %28, %27 ]
  store ptr %33, ptr %baseAddress.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %34 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %35 = load ptr, ptr %34, align 8, !invariant.load !17
  %36 = call ptr %35(ptr noalias %7, ptr noalias %2, ptr %Owner) #6
  %37 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %33, i64 %1, ptr noalias nocapture %7, ptr %Element, ptr %Owner)
  %38 = extractvalue { ptr, i64 } %37, 0
  %39 = extractvalue { ptr, i64 } %37, 1
  %self.start = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %38, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %39, ptr %self.count._value, align 8
  %40 = ptrtoint ptr %38 to i64
  %41 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %42 = load ptr, ptr %41, align 8, !invariant.load !17
  call void %42(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %43

43:                                               ; preds = %32, %29
  %44 = phi i64 [ 0, %29 ], [ %40, %32 ]
  %45 = phi i64 [ 0, %29 ], [ %39, %32 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %7)
  %46 = insertvalue { i64, i64 } undef, i64 %44, 0
  %47 = insertvalue { i64, i64 } %46, i64 %45, 1
  ret { i64, i64 } %47
}

declare swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64, i64, ptr) #0

define swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGAA07MutableaB0VyxGcfC"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %mutable.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %mutable.debug, i8 0, i64 16, i1 false)
  %2 = alloca %T10BufferView07MutableaB0V, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  call void @llvm.lifetime.start.p0(i64 16, ptr %mutable.debug)
  %mutable.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %mutable.debug, i32 0, i32 0
  %mutable.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %mutable.debug.start, i32 0, i32 0
  %mutable.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %mutable.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %mutable.debug.start._rawValue._rawValue, align 8
  %mutable.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %mutable.debug, i32 0, i32 1
  %mutable.debug.count._value = getelementptr inbounds %TSi, ptr %mutable.debug.count, i32 0, i32 0
  store i64 %1, ptr %mutable.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %1, ptr %.count._value, align 8
  %4 = call swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64 0, ptr %Element) #18
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV5start5count9dependsOnAByxGAA0aB5IndexVyxG_Siqd__tclufC"(ptr %3, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %5)
  %7 = extractvalue { ptr, i64 } %6, 0
  %8 = extractvalue { ptr, i64 } %6, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  %self.start = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %7, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %8, ptr %self.count._value, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  %9 = insertvalue { ptr, i64 } undef, ptr %7, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1
  ret { ptr, i64 } %10
}

declare swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr, i64, ptr) #0

declare swiftcc %swift.metadata_response @"$s10BufferView07MutableaB0VMa"(i64, ptr) #0

define swiftcc { i64, i64 } @"$s10BufferViewAAV09unsafeRawA7Pointer9dependsOnAByxGSgSW_qd__tclufC"(i64 %0, i64 %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %buffer.debug = alloca %TSW, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buffer.debug, i8 0, i64 16, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  %p.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %p.debug, i8 0, i64 8, i1 false)
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %q.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %q.debug, i8 0, i64 8, i1 false)
  %r.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %r.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %7 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %8, align 8, !invariant.load !17
  %9 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %9)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer.debug)
  %buffer.debug._position = getelementptr inbounds %TSW, ptr %buffer.debug, i32 0, i32 0
  store i64 %0, ptr %buffer.debug._position, align 8
  %buffer.debug._end = getelementptr inbounds %TSW, ptr %buffer.debug, i32 0, i32 1
  store i64 %1, ptr %buffer.debug._end, align 8
  store ptr %2, ptr %owner.debug, align 8
  %10 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %10, align 8, !invariant.load !17, !dereferenceable !18
  %11 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %11, align 8, !invariant.load !17
  %12 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %12, 0
  br i1 %flags.isTriviallyDestroyable, label %13, label %44

13:                                               ; preds = %entry
  %14 = call swiftcc i64 @"$sSW11baseAddressSVSgvg"(i64 %0, i64 %1)
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = inttoptr i64 %14 to ptr
  br label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %20 = load ptr, ptr %19, align 8, !invariant.load !17
  call void %20(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %48

21:                                               ; preds = %16
  %22 = phi ptr [ %17, %16 ]
  store ptr %22, ptr %p.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %23 = call swiftcc i64 @"$sSW5countSivg"(i64 %0, i64 %1)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._value = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  store i64 %23, ptr %._value, align 8
  %24 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %24, align 8, !invariant.load !17
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._value3 = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  store i64 %stride, ptr %._value3, align 8
  %25 = call ptr @"$sS2iSzsWl"() #18
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %3, ptr noalias nocapture %4, ptr noalias nocapture %6, ptr @"$sSiN", ptr %25, ptr noalias nocapture swiftself %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  %._value4 = getelementptr inbounds %TSi, ptr %3, i32 0, i32 0
  %26 = load i64, ptr %._value4, align 8
  %._value5 = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %27 = load i64, ptr %._value5, align 8
  store i64 %26, ptr %q.debug, align 8
  store i64 %27, ptr %r.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  call void asm sideeffect "nop", ""()
  %28 = icmp eq i64 %27, 0
  %29 = call i1 @llvm.expect.i1(i1 %28, i1 true)
  br i1 %29, label %34, label %30

30:                                               ; preds = %21
  %31 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %32 = extractvalue { i64, ptr } %31, 0
  %33 = extractvalue { i64, ptr } %31, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %32, ptr %33, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 65, i32 1)
  unreachable

34:                                               ; preds = %21
  call void asm sideeffect "nop", ""()
  %35 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %36 = load ptr, ptr %35, align 8, !invariant.load !17
  %37 = call ptr %36(ptr noalias %9, ptr noalias %2, ptr %Owner) #6
  %38 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %22, i64 %26, ptr noalias nocapture %9, ptr %Element, ptr %Owner)
  %39 = extractvalue { ptr, i64 } %38, 0
  %40 = extractvalue { ptr, i64 } %38, 1
  %self.start = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 0
  %self.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.start, i32 0, i32 0
  %self.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.start._rawValue, i32 0, i32 0
  store ptr %39, ptr %self.start._rawValue._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferViewAAV, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %40, ptr %self.count._value, align 8
  %41 = ptrtoint ptr %39 to i64
  %42 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %43 = load ptr, ptr %42, align 8, !invariant.load !17
  call void %43(ptr noalias %2, ptr %Owner) #6
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  br label %48

44:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %45 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %46 = extractvalue { i64, ptr } %45, 0
  %47 = extractvalue { i64, ptr } %45, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %46, ptr %47, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 62, i32 1)
  unreachable

48:                                               ; preds = %34, %18
  %49 = phi i64 [ 0, %18 ], [ %41, %34 ]
  %50 = phi i64 [ 0, %18 ], [ %40, %34 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %9)
  %51 = insertvalue { i64, i64 } undef, i64 %49, 0
  %52 = insertvalue { i64, i64 } %51, i64 %50, 1
  ret { i64, i64 } %52
}

define swiftcc { ptr, ptr } @"$s10BufferViewAAV12makeIteratorAA0abD0VyxGyF"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %2 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  %4 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %1, ptr %.count._value, align 8
  %5 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = call swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV4from2to9dependsOnACyxGAA0aB5IndexVyxG_AJqd__tclufC"(ptr %3, ptr %4, ptr noalias nocapture %2, ptr %Element, ptr %6)
  %8 = extractvalue { ptr, ptr } %7, 0
  %9 = extractvalue { ptr, ptr } %7, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  %10 = insertvalue { ptr, ptr } undef, ptr %8, 0
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1
  ret { ptr, ptr } %11
}

define swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  ret ptr %0
}

define swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %2 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %1, ptr %0, ptr %Element)
  ret ptr %2
}

define swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %8 = alloca i8, i64 56, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i32 1
  store ptr %R, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %8, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %8, i32 0, i32 3
  %._value = getelementptr inbounds %TSi, ptr %12, i32 0, i32 0
  store i64 %4, ptr %._value, align 8
  call swiftcc void @"$sSV17withMemoryRebound2to8capacity_q_xm_Siq_SPyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %4, ptr @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlFqd__SPyxGKXEfU_TA", ptr %8, ptr %7, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %entry
  %16 = getelementptr inbounds ptr, ptr %R, i64 -1
  %R.valueWitnesses = load ptr, ptr %16, align 8, !invariant.load !17, !dereferenceable !18
  %17 = getelementptr inbounds ptr, ptr %R.valueWitnesses, i32 7
  %18 = load ptr, ptr %17, align 8, !invariant.load !17
  call void %18(ptr noalias %0, i32 0, i32 1, ptr %R) #6
  ret void

19:                                               ; preds = %entry
  %20 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %20, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlFqd__SPyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %2, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %3, ptr %body.debug.data, align 8
  store i64 %4, ptr %count.debug, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSR5start5countSRyxGSPyxGSg_SitcfC"(i64 %7, i64 %4, ptr %Element)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %2(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSV17withMemoryRebound2to8capacity_q_xm_Siq_SPyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %5, ptr %T, ptr %Result, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %T1 = alloca ptr, align 8
  %Result2 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %Result, ptr %Result2, align 8
  %8 = ptrtoint ptr %5 to i64
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %10, align 8, !invariant.load !17
  %11 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %11, 255
  %12 = add i64 %flags.alignmentMask, 1
  %13 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %12, i64 1)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %16, label %28, label %17

17:                                               ; preds = %entry
  %18 = and i64 %8, %14
  %19 = icmp eq i64 %18, 0
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 true)
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.50.self must be a properly aligned pointer for type T" to i64), i64 50, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 380, i32 1)
  unreachable

22:                                               ; preds = %17
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %23 = load ptr, ptr %7, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = phi ptr [ %23, %22 ]
  store ptr null, ptr %7, align 8
  store ptr %26, ptr %7, align 8
  ret void

27:                                               ; preds = %22
  ret void

28:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSTAAST12makeIterator0D0QzyFTW"(ptr noalias nocapture sret(%T10BufferView0aB8IteratorV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc { ptr, ptr } @"$s10BufferViewAAV12makeIteratorAA0abD0VyxGyF"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 0
  %.curPointer._rawValue = getelementptr inbounds %TSV, ptr %.curPointer, i32 0, i32 0
  store ptr %6, ptr %.curPointer._rawValue, align 8
  %.endPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 1
  %.endPointer._rawValue = getelementptr inbounds %TSV, ptr %.endPointer, i32 0, i32 0
  store ptr %7, ptr %.endPointer._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSTAAST19underestimatedCountSivgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %Self, ptr undef) #9
  %2 = call swiftcc i64 @"$sSlsE19underestimatedCountSivg"(ptr %Self, ptr %1, ptr noalias nocapture swiftself %0) #19
  ret i64 %2
}

define linkonce_odr hidden swiftcc i8 @"$s10BufferViewAAVyxGSTAAST31_customContainsEquatableElementySbSg0F0QzFTW"(ptr noalias nocapture %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %2 = call swiftcc i8 @"$sSTsE31_customContainsEquatableElementySbSg0D0QzF"(ptr noalias nocapture %0, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %1) #19
  ret i8 %2
}

define linkonce_odr hidden swiftcc ptr @"$s10BufferViewAAVyxGSTAAST22_copyToContiguousArrays0eF0Vy7ElementQzGyFTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %1 = alloca %T10BufferViewAAV, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %0, i64 16, i1 false)
  %2 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %Self, ptr undef) #9
  %3 = call swiftcc ptr @"$sSlsE22_copyToContiguousArrays0cD0Vy7ElementQzGyF"(ptr %Self, ptr %2, ptr noalias nocapture swiftself %1) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr %1)
  ret ptr %3
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSTAAST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTW"(ptr noalias nocapture %0, i64 %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %4 = alloca %T10BufferViewAAV, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %3, i64 16, i1 false)
  %5 = call swiftcc i64 @"$sSTsE13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tF"(ptr noalias nocapture %0, i64 %1, i64 %2, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %4) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  ret i64 %5
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSTAAST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTW"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %"\CF\84_1_0", ptr noalias nocapture swiftself dereferenceable(16) %3, ptr noalias nocapture swifterror dereferenceable(8) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %5, i64 %6, ptr %"\CF\84_0_0", ptr %"\CF\84_1_0", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4) #19
  %8 = load ptr, ptr %4, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %4, align 8
  store ptr %12, ptr %4, align 8
  ret void
}

define swiftcc i1 @"$s10BufferViewAAVAASQRzlE13elementsEqualySbAByxGF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element, ptr %Element.Equatable) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %b.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %b.debug, i8 0, i64 8, i1 false)
  %a.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %a.debug, i8 0, i64 8, i1 false)
  %other.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %other.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %"$generator" = alloca %Ts12Zip2SequenceV8IteratorV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$generator", i8 0, i64 33, i1 false)
  %6 = alloca %Ts12Zip2SequenceV, align 8
  %7 = alloca %T10BufferViewAAV, align 8
  %8 = alloca %T10BufferViewAAV, align 8
  %9 = alloca %Ts12Zip2SequenceV, align 8
  %10 = alloca [4 x ptr], align 8
  %11 = alloca [4 x ptr], align 8
  store ptr %Element, ptr %Element1, align 8
  %12 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %12, align 8, !invariant.load !17, !dereferenceable !18
  %13 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %13, align 8, !invariant.load !17
  %b = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %b)
  store ptr %b, ptr %b.debug, align 8
  %a = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %a)
  store ptr %a, ptr %a.debug, align 8
  %14 = call swiftcc %swift.metadata_response @swift_getTupleTypeMetadata2(i64 255, ptr %Element, ptr %Element, ptr null, ptr null) #10
  %15 = extractvalue %swift.metadata_response %14, 0
  %16 = extractvalue %swift.metadata_response %14, 1
  %17 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %15) #18
  %18 = extractvalue %swift.metadata_response %17, 0
  %19 = getelementptr inbounds ptr, ptr %18, i64 -1
  %.valueWitnesses = load ptr, ptr %19, align 8, !invariant.load !17, !dereferenceable !18
  %20 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %20, align 8, !invariant.load !17
  %21 = alloca i8, i64 %size2, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %21)
  call void @llvm.lifetime.start.p0(i64 16, ptr %other.debug)
  %other.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %other.debug, i32 0, i32 0
  %other.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %other.debug.start, i32 0, i32 0
  %other.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %other.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %other.debug.start._rawValue._rawValue, align 8
  %other.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %other.debug, i32 0, i32 1
  %other.debug.count._value = getelementptr inbounds %TSi, ptr %other.debug.count, i32 0, i32 0
  store i64 %1, ptr %other.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %22 = icmp eq i64 %3, %1
  br i1 %22, label %23, label %78

23:                                               ; preds = %entry
  %24 = icmp eq i64 %3, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  br label %79

26:                                               ; preds = %23
  %27 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %29, ptr %._rawValue._rawValue, align 8
  %30 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue3 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue3._rawValue = getelementptr inbounds %TSV, ptr %._rawValue3, i32 0, i32 0
  store ptr %30, ptr %._rawValue3._rawValue, align 8
  %31 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %28, ptr undef) #9
  %32 = call swiftcc i1 @"$sSxsE2eeoiySbx_xtFZ"(ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %28, ptr %31, ptr swiftself %28)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  br label %79

34:                                               ; preds = %26
  call void @llvm.lifetime.start.p0(i64 33, ptr %"$generator")
  call void @llvm.lifetime.start.p0(i64 32, ptr %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr %7)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %7, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %3, ptr %.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %8)
  %.start4 = getelementptr inbounds %T10BufferViewAAV, ptr %8, i32 0, i32 0
  %.start4._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start4, i32 0, i32 0
  %.start4._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start4._rawValue, i32 0, i32 0
  store ptr %0, ptr %.start4._rawValue._rawValue, align 8
  %.count5 = getelementptr inbounds %T10BufferViewAAV, ptr %8, i32 0, i32 1
  %.count5._value = getelementptr inbounds %TSi, ptr %.count5, i32 0, i32 0
  store i64 %1, ptr %.count5._value, align 8
  %35 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %36 = extractvalue %swift.metadata_response %35, 0
  %37 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSTAAMc", ptr %36, ptr undef) #9
  call swiftcc void @"$ss3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF"(ptr noalias nocapture sret(%swift.opaque) %6, ptr noalias nocapture %7, ptr noalias nocapture %8, ptr %36, ptr %36, ptr %37, ptr %37)
  call void @llvm.lifetime.end.p0(i64 16, ptr %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr %7)
  %._sequence1 = getelementptr inbounds %Ts12Zip2SequenceV, ptr %6, i32 0, i32 0
  %._sequence1.start = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence1, i32 0, i32 0
  %._sequence1.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %._sequence1.start, i32 0, i32 0
  %._sequence1.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._sequence1.start._rawValue, i32 0, i32 0
  %38 = load ptr, ptr %._sequence1.start._rawValue._rawValue, align 8
  %._sequence1.count = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence1, i32 0, i32 1
  %._sequence1.count._value = getelementptr inbounds %TSi, ptr %._sequence1.count, i32 0, i32 0
  %39 = load i64, ptr %._sequence1.count._value, align 8
  %._sequence2 = getelementptr inbounds %Ts12Zip2SequenceV, ptr %6, i32 0, i32 1
  %._sequence2.start = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence2, i32 0, i32 0
  %._sequence2.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %._sequence2.start, i32 0, i32 0
  %._sequence2.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._sequence2.start._rawValue, i32 0, i32 0
  %40 = load ptr, ptr %._sequence2.start._rawValue._rawValue, align 8
  %._sequence2.count = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence2, i32 0, i32 1
  %._sequence2.count._value = getelementptr inbounds %TSi, ptr %._sequence2.count, i32 0, i32 0
  %41 = load i64, ptr %._sequence2.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr %9)
  %._sequence16 = getelementptr inbounds %Ts12Zip2SequenceV, ptr %9, i32 0, i32 0
  %._sequence16.start = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence16, i32 0, i32 0
  %._sequence16.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %._sequence16.start, i32 0, i32 0
  %._sequence16.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._sequence16.start._rawValue, i32 0, i32 0
  store ptr %38, ptr %._sequence16.start._rawValue._rawValue, align 8
  %._sequence16.count = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence16, i32 0, i32 1
  %._sequence16.count._value = getelementptr inbounds %TSi, ptr %._sequence16.count, i32 0, i32 0
  store i64 %39, ptr %._sequence16.count._value, align 8
  %._sequence27 = getelementptr inbounds %Ts12Zip2SequenceV, ptr %9, i32 0, i32 1
  %._sequence27.start = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence27, i32 0, i32 0
  %._sequence27.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %._sequence27.start, i32 0, i32 0
  %._sequence27.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._sequence27.start._rawValue, i32 0, i32 0
  store ptr %40, ptr %._sequence27.start._rawValue._rawValue, align 8
  %._sequence27.count = getelementptr inbounds %T10BufferViewAAV, ptr %._sequence27, i32 0, i32 1
  %._sequence27.count._value = getelementptr inbounds %TSi, ptr %._sequence27.count, i32 0, i32 0
  store i64 %41, ptr %._sequence27.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr %10)
  %42 = getelementptr inbounds [4 x ptr], ptr %10, i32 0, i32 0
  store ptr %36, ptr %42, align 8
  %43 = getelementptr inbounds [4 x ptr], ptr %10, i32 0, i32 1
  store ptr %36, ptr %43, align 8
  %44 = getelementptr inbounds [4 x ptr], ptr %10, i32 0, i32 2
  store ptr %37, ptr %44, align 8
  %45 = getelementptr inbounds [4 x ptr], ptr %10, i32 0, i32 3
  store ptr %37, ptr %45, align 8
  %46 = call swiftcc %swift.metadata_response @"$ss12Zip2SequenceVMa"(i64 0, ptr %10) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr %10)
  %47 = extractvalue %swift.metadata_response %46, 0
  call swiftcc void @"$ss12Zip2SequenceV12makeIteratorAB0D0Vyxq__GyF"(ptr noalias nocapture sret(%swift.opaque) %"$generator", ptr %47, ptr noalias nocapture swiftself %9)
  call void @llvm.lifetime.end.p0(i64 32, ptr %9)
  call void @llvm.lifetime.end.p0(i64 32, ptr %6)
  br label %48

48:                                               ; preds = %71, %34
  call void @llvm.lifetime.start.p0(i64 32, ptr %11)
  %49 = getelementptr inbounds [4 x ptr], ptr %11, i32 0, i32 0
  store ptr %36, ptr %49, align 8
  %50 = getelementptr inbounds [4 x ptr], ptr %11, i32 0, i32 1
  store ptr %36, ptr %50, align 8
  %51 = getelementptr inbounds [4 x ptr], ptr %11, i32 0, i32 2
  store ptr %37, ptr %51, align 8
  %52 = getelementptr inbounds [4 x ptr], ptr %11, i32 0, i32 3
  store ptr %37, ptr %52, align 8
  %53 = call swiftcc %swift.metadata_response @"$ss12Zip2SequenceV8IteratorVMa"(i64 0, ptr %11) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr %11)
  %54 = extractvalue %swift.metadata_response %53, 0
  call swiftcc void @"$ss12Zip2SequenceV8IteratorV4next7ElementQz_AFQy_tSgyF"(ptr noalias nocapture sret(%swift.opaque) %21, ptr %54, ptr nocapture swiftself %"$generator")
  %55 = call swiftcc %swift.metadata_response @swift_checkMetadataState(i64 0, ptr %15) #10
  %56 = extractvalue %swift.metadata_response %55, 0
  %57 = getelementptr inbounds ptr, ptr %56, i64 -1
  %.valueWitnesses8 = load ptr, ptr %57, align 8, !invariant.load !17, !dereferenceable !18
  %58 = getelementptr inbounds ptr, ptr %.valueWitnesses8, i32 6
  %59 = load ptr, ptr %58, align 8, !invariant.load !17
  %60 = call i32 %59(ptr noalias %21, i32 1, ptr %56) #9
  %61 = icmp ne i32 %60, 1
  br i1 %61, label %63, label %77

62:                                               ; No predecessors!
  unreachable

63:                                               ; preds = %48
  %64 = getelementptr inbounds %swift.tuple_type, ptr %56, i64 0, i32 3, i64 1, i32 1
  %.1.offset = load i32, ptr %64, align 8
  %65 = getelementptr inbounds i8, ptr %21, i32 %.1.offset
  %66 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 4
  %67 = load ptr, ptr %66, align 8, !invariant.load !17
  %68 = call ptr %67(ptr noalias %a, ptr noalias %21, ptr %Element) #6
  %69 = call ptr %67(ptr noalias %b, ptr noalias %65, ptr %Element) #6
  %70 = call swiftcc i1 @"$sSQ2eeoiySbx_xtFZTj"(ptr noalias nocapture %a, ptr noalias nocapture %b, ptr swiftself %Element, ptr %Element, ptr %Element.Equatable)
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %73 = load ptr, ptr %72, align 8, !invariant.load !17
  call void %73(ptr noalias %b, ptr %Element) #6
  call void %73(ptr noalias %a, ptr %Element) #6
  br label %48

74:                                               ; preds = %63
  %75 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 1
  %76 = load ptr, ptr %75, align 8, !invariant.load !17
  call void %76(ptr noalias %b, ptr %Element) #6
  call void %76(ptr noalias %a, ptr %Element) #6
  call void @llvm.lifetime.end.p0(i64 33, ptr %"$generator")
  br label %79

77:                                               ; preds = %48
  call void @llvm.lifetime.end.p0(i64 33, ptr %"$generator")
  br label %79

78:                                               ; preds = %entry
  br label %79

79:                                               ; preds = %25, %33, %74, %77, %78
  %80 = phi i1 [ false, %78 ], [ true, %77 ], [ false, %74 ], [ true, %33 ], [ true, %25 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %21)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %a)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %b)
  ret i1 %80
}

define swiftcc { ptr, ptr } @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %2 = alloca %TSn, align 8
  %3 = alloca %T10BufferView0aB5IndexV, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %5 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %3, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  %6 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %6, ptr %._rawValue2._rawValue, align 8
  %7 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %8, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %2, ptr noalias nocapture %3, ptr noalias nocapture %4, ptr %8, ptr %9)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %.lowerBound = getelementptr inbounds %TSn, ptr %2, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %2, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  %12 = insertvalue { ptr, ptr } undef, ptr %10, 0
  %13 = insertvalue { ptr, ptr } %12, ptr %11, 1
  ret { ptr, ptr } %13
}

define swiftcc i1 @"$s10BufferViewAAV7isEmptySbvg"(ptr %0, i64 %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %1, ptr %self.debug.count._value, align 8
  %2 = icmp eq i64 %1, 0
  ret i1 %2
}

define swiftcc void @"$s10BufferViewAAV12_checkBoundsyyAA0aB5IndexVyxGF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %3 = alloca %T10BufferView0aB5IndexV, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %6 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %7 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %8 = extractvalue %swift.metadata_response %7, 0
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %3, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %0, ptr %._rawValue._rawValue, align 8
  %9 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %9, ptr %._rawValue2._rawValue, align 8
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %8, ptr undef) #9
  %11 = call swiftcc i1 @"$sSLsE2geoiySbx_xtFZ"(ptr noalias nocapture %3, ptr noalias nocapture %4, ptr %8, ptr %10, ptr swiftself %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  br i1 %11, label %12, label %15

12:                                               ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue3 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue3._rawValue = getelementptr inbounds %TSV, ptr %._rawValue3, i32 0, i32 0
  store ptr %0, ptr %._rawValue3._rawValue, align 8
  %13 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._rawValue4 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %6, i32 0, i32 0
  %._rawValue4._rawValue = getelementptr inbounds %TSV, ptr %._rawValue4, i32 0, i32 0
  store ptr %13, ptr %._rawValue4._rawValue, align 8
  %14 = call swiftcc i1 @"$sSLsE2leoiySbx_xtFZ"(ptr noalias nocapture %5, ptr noalias nocapture %6, ptr %8, ptr %10, ptr swiftself %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  br label %16

15:                                               ; preds = %entry
  br label %16

16:                                               ; preds = %12, %15
  %17 = phi i1 [ false, %15 ], [ %14, %12 ]
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 true)
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.19.Index out of bounds", i64 19, i1 true)
  %21 = extractvalue { i64, ptr } %20, 0
  %22 = extractvalue { i64, ptr } %20, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %21, ptr %22, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 140, i32 1)
  unreachable

23:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  %24 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %24, align 8, !invariant.load !17, !dereferenceable !18
  %25 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %25, align 8, !invariant.load !17
  %26 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %26, 0
  %27 = xor i1 %flags.isTriviallyDestroyable, true
  br i1 %27, label %28, label %36

28:                                               ; preds = %23
  call void asm sideeffect "nop", ""()
  %29 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  %30 = call i1 @llvm.expect.i1(i1 %29, i1 true)
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.30.Index is unaligned for Element", i64 30, i1 true)
  %33 = extractvalue { i64, ptr } %32, 0
  %34 = extractvalue { i64, ptr } %32, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %33, ptr %34, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 146, i32 1)
  unreachable

35:                                               ; preds = %28
  call void asm sideeffect "nop", ""()
  br label %37

36:                                               ; preds = %23
  br label %37

37:                                               ; preds = %35, %36
  ret void
}

define swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  br i1 %flags.isTriviallyDestroyable, label %7, label %66

7:                                                ; preds = %entry
  call void asm sideeffect "nop", ""()
  %8 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %9 = ptrtoint ptr %0 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, -9223372036854775808
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  br label %15

14:                                               ; preds = %7
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i1 [ false, %14 ], [ false, %13 ]
  %17 = call i1 @llvm.expect.i1(i1 %16, i1 false)
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Division results in an overflow" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14144, i32 1)
  unreachable

19:                                               ; preds = %15
  %20 = sdiv i64 %11, 1
  %21 = icmp slt i64 %20, 0
  %22 = xor i1 %21, true
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = ptrtoint ptr %1 to i64
  %25 = ptrtoint ptr %0 to i64
  %26 = sub i64 %24, %25
  %27 = icmp eq i64 %26, -9223372036854775808
  br i1 %27, label %29, label %30

28:                                               ; preds = %19
  br label %39

29:                                               ; preds = %23
  br label %31

30:                                               ; preds = %23
  br label %31

31:                                               ; preds = %29, %30
  %32 = phi i1 [ false, %30 ], [ false, %29 ]
  %33 = call i1 @llvm.expect.i1(i1 %32, i1 false)
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Division results in an overflow" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14144, i32 1)
  unreachable

35:                                               ; preds = %31
  %36 = sdiv i64 %26, 1
  %37 = icmp slt i64 %36, 0
  %38 = xor i1 %37, true
  br label %39

39:                                               ; preds = %35, %28
  %40 = phi i1 [ false, %28 ], [ %38, %35 ]
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  %42 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %43 = ptrtoint ptr %42 to i64
  %44 = ptrtoint ptr %1 to i64
  %45 = sub i64 %43, %44
  %46 = icmp eq i64 %45, -9223372036854775808
  br i1 %46, label %48, label %49

47:                                               ; preds = %39
  br label %58

48:                                               ; preds = %41
  br label %50

49:                                               ; preds = %41
  br label %50

50:                                               ; preds = %48, %49
  %51 = phi i1 [ false, %49 ], [ false, %48 ]
  %52 = call i1 @llvm.expect.i1(i1 %51, i1 false)
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Division results in an overflow" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14144, i32 1)
  unreachable

54:                                               ; preds = %50
  %55 = sdiv i64 %45, 1
  %56 = icmp slt i64 %55, 0
  %57 = xor i1 %56, true
  br label %58

58:                                               ; preds = %54, %47
  %59 = phi i1 [ false, %47 ], [ %57, %54 ]
  %60 = call i1 @llvm.expect.i1(i1 %59, i1 true)
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.30.Range of indices out of bounds", i64 30, i1 true)
  %63 = extractvalue { i64, ptr } %62, 0
  %64 = extractvalue { i64, ptr } %62, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %63, ptr %64, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 157, i32 1)
  unreachable

65:                                               ; preds = %58
  call void asm sideeffect "nop", ""()
  br label %104

66:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %67 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element)
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = call swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %1, ptr %Element)
  br label %71

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %68, %70
  %72 = phi i1 [ false, %70 ], [ %69, %68 ]
  %73 = call i1 @llvm.expect.i1(i1 %72, i1 true)
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Range of indices is unaligned for Element", i64 41, i1 true)
  %76 = extractvalue { i64, ptr } %75, 0
  %77 = extractvalue { i64, ptr } %75, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %76, ptr %77, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 164, i32 1)
  unreachable

78:                                               ; preds = %71
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %79 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %80 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %79, ptr %0, ptr %2, i64 %3, ptr %Element)
  %81 = icmp slt i64 %80, 0
  %82 = xor i1 %81, true
  br i1 %82, label %83, label %87

83:                                               ; preds = %78
  %84 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %85 = icmp slt i64 %84, 0
  %86 = xor i1 %85, true
  br label %88

87:                                               ; preds = %78
  br label %88

88:                                               ; preds = %83, %87
  %89 = phi i1 [ false, %87 ], [ %86, %83 ]
  br i1 %89, label %90, label %95

90:                                               ; preds = %88
  %91 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %92 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %1, ptr %91, ptr %2, i64 %3, ptr %Element)
  %93 = icmp slt i64 %92, 0
  %94 = xor i1 %93, true
  br label %96

95:                                               ; preds = %88
  br label %96

96:                                               ; preds = %90, %95
  %97 = phi i1 [ false, %95 ], [ %94, %90 ]
  %98 = call i1 @llvm.expect.i1(i1 %97, i1 true)
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.30.Range of indices out of bounds", i64 30, i1 true)
  %101 = extractvalue { i64, ptr } %100, 0
  %102 = extractvalue { i64, ptr } %100, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %101, ptr %102, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 168, i32 1)
  unreachable

103:                                              ; preds = %96
  call void asm sideeffect "nop", ""()
  br label %104

104:                                              ; preds = %65, %103
  ret void
}

define swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %start.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %start.debug, i8 0, i64 8, i1 false)
  %end.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %end.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %start.debug, align 8
  store ptr %1, ptr %end.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr %1, ptr %0, ptr %Element)
  ret i64 %4
}

define swiftcc ptr @"$s10BufferViewAAV5index5afterAA0aB5IndexVyxGAG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 1, ptr %0, ptr %Element)
  ret ptr %3
}

define swiftcc ptr @"$s10BufferViewAAV5index6beforeAA0aB5IndexVyxGAG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 -1, ptr %0, ptr %Element)
  ret ptr %3
}

define swiftcc void @"$s10BufferViewAAV9formIndex5afteryAA0abD0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %4 = call swiftcc ptr @"$s10BufferViewAAV5index5afterAA0aB5IndexVyxGAG_tF"(ptr %3, ptr %1, i64 %2, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %4, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc void @"$s10BufferViewAAV9formIndex6beforeyAA0abD0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %4 = call swiftcc ptr @"$s10BufferViewAAV5index6beforeAA0aB5IndexVyxGAG_tF"(ptr %3, ptr %1, i64 %2, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %4, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %distance.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %distance.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  store i64 %1, ptr %distance.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %1, ptr %0, ptr %Element)
  ret ptr %4
}

define swiftcc void @"$s10BufferViewAAV9formIndex_8offsetByyAA0abD0VyxGz_SitF"(ptr nocapture dereferenceable(8) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %distance.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %distance.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %i.debug, align 8
  store i64 %1, ptr %distance.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %5 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %4, i64 %1, ptr %2, i64 %3, ptr %Element)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %5, ptr %._rawValue2._rawValue, align 8
  ret void
}

define swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyyAA0aB5IndexVyxGF"(ptr %1, ptr %2, i64 %3, ptr %Element)
  call swiftcc void @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  br i1 %flags.isTriviallyDestroyable, label %7, label %9

7:                                                ; preds = %entry
  %8 = call swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %8, ptr %Element, ptr %1, ptr %Element)
  br label %11

9:                                                ; preds = %entry
  %10 = call swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %10, ptr %Element, ptr %1, ptr %Element)
  br label %11

11:                                               ; preds = %7, %9
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define linkonce_odr hidden swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %4 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  %7 = call i1 @llvm.expect.i1(i1 %flags.isTriviallyDestroyable, i1 true)
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @.str.0. to i64), i64 0, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 465, i32 1)
  unreachable

9:                                                ; preds = %entry
  %10 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %10, 255
  %11 = add i64 %flags.alignmentMask, 1
  %12 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %12, align 8, !invariant.load !17
  %13 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 1, i64 %stride)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.is.constant.i64(i64 1)
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  br label %22

20:                                               ; preds = %17
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Allocation byte count too large" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 46, i32 1)
  unreachable

21:                                               ; preds = %9
  br label %22

22:                                               ; preds = %21, %19
  %23 = call i1 @llvm.is.constant.i64(i64 %11)
  br i1 %23, label %42, label %24

24:                                               ; preds = %22
  %25 = icmp slt i64 0, %11
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 true)
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.41.Alignment value must be greater than zero" to i64), i64 41, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 67, i32 1)
  unreachable

28:                                               ; preds = %24
  %29 = icmp slt i64 0, %11
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  br label %37

31:                                               ; preds = %28
  %32 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %11, i64 1)
  %33 = extractvalue { i64, i1 } %32, 0
  %34 = extractvalue { i64, i1 } %32, 1
  %35 = and i64 %11, %33
  %36 = icmp eq i64 %35, 0
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i1 [ false, %30 ], [ %36, %31 ]
  %39 = call i1 @llvm.expect.i1(i1 %38, i1 true)
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.38.Alignment value must be a power of two" to i64), i64 38, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 68, i32 1)
  unreachable

41:                                               ; preds = %37
  br label %43

42:                                               ; preds = %22
  br label %43

43:                                               ; preds = %42, %41
  %44 = icmp slt i64 16, %11
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = icmp slt i64 1024, %stride
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  br label %54

48:                                               ; preds = %45
  %49 = call swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64 12, i64 3, i64 0)
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  br label %54

51:                                               ; preds = %48
  %52 = call zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 %stride, i64 %11)
  br label %54

53:                                               ; preds = %43
  br label %54

54:                                               ; preds = %53, %51, %50, %47
  %55 = phi i1 [ true, %47 ], [ false, %50 ], [ %52, %51 ], [ false, %53 ]
  br i1 %55, label %72, label %56

56:                                               ; preds = %54
  br i1 %44, label %58, label %57

57:                                               ; preds = %56
  br label %59

58:                                               ; preds = %56
  br label %59

59:                                               ; preds = %58, %57
  %60 = phi i64 [ 0, %57 ], [ %11, %58 ]
  %61 = sub i64 %60, 1
  %62 = call noalias ptr @swift_slowAlloc(i64 %stride, i64 %61) #6
  %63 = getelementptr inbounds i8, ptr %3, i64 %1
  %64 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %64, align 8, !invariant.load !17
  %65 = icmp slt i64 %size, 0
  %66 = call i1 @llvm.expect.i1(i1 %65, i1 false)
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  call void @llvm.memcpy.p0.p0.i64(ptr %62, ptr %63, i64 %size, i1 false)
  %68 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %69 = load ptr, ptr %68, align 8, !invariant.load !17
  %70 = call ptr %69(ptr noalias %0, ptr noalias %62, ptr %T) #6
  call void @swift_slowDealloc(ptr %62, i64 -1, i64 -1) #6
  br label %83

71:                                               ; preds = %59
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable

72:                                               ; preds = %54
  %73 = mul i64 1, %stride
  %74 = call i64 @llvm.umax.i64(i64 1, i64 %73)
  %spsave = call ptr @llvm.stacksave()
  %temp_alloc = alloca i8, i64 %74, align 16
  %75 = getelementptr inbounds i8, ptr %3, i64 %1
  %76 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %76, align 8, !invariant.load !17
  %77 = icmp slt i64 %size2, 0
  %78 = call i1 @llvm.expect.i1(i1 %77, i1 false)
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  call void @llvm.memcpy.p0.p0.i64(ptr %temp_alloc, ptr %75, i64 %size2, i1 false)
  %80 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %81 = load ptr, ptr %80, align 8, !invariant.load !17
  %82 = call ptr %81(ptr noalias %0, ptr noalias %temp_alloc, ptr %T) #6
  call void @llvm.stackrestore(ptr %spsave)
  br label %83

83:                                               ; preds = %79, %67
  ret void

84:                                               ; preds = %72
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable
}

define linkonce_odr hidden swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGSnyAA0aB5IndexVyxGGcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %4 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1
  ret { ptr, i64 } %8
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %bounds.debug = alloca %TSn, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn, align 8
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %5 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %bounds.debug)
  %bounds.debug.lowerBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.lowerBound, i32 0, i32 0
  %bounds.debug.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %bounds.debug.lowerBound._rawValue._rawValue, align 8
  %bounds.debug.upperBound = getelementptr inbounds %TSn, ptr %bounds.debug, i32 0, i32 1
  %bounds.debug.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %bounds.debug.upperBound, i32 0, i32 0
  %bounds.debug.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %bounds.debug.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %bounds.debug.upperBound._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %0, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %1, ptr %.upperBound._rawValue._rawValue, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 255, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = extractvalue %swift.metadata_response %6, 1
  %9 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %7, ptr undef) #9
  %10 = call swiftcc %swift.metadata_response @"$sSnMa"(i64 0, ptr %7, ptr %9) #18
  %11 = extractvalue %swift.metadata_response %10, 0
  %12 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %7, ptr undef) #9
  %13 = call ptr @"$sS2iSZsWl"() #18
  %14 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %15 = getelementptr inbounds ptr, ptr %14, i32 0
  store ptr %12, ptr %15, align 8
  %16 = getelementptr inbounds ptr, ptr %14, i32 1
  store ptr %13, ptr %16, align 8
  %17 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %11, ptr %14) #9
  %18 = call swiftcc i64 @"$sSlsE5countSivg"(ptr %11, ptr %17, ptr noalias nocapture swiftself %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %3, ptr %.count._value, align 8
  %19 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %20 = extractvalue %swift.metadata_response %19, 0
  %21 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %0, i64 %18, ptr noalias nocapture %5, ptr %Element, ptr %20)
  %22 = extractvalue { ptr, i64 } %21, 0
  %23 = extractvalue { ptr, i64 } %21, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %24 = insertvalue { ptr, i64 } undef, ptr %22, 0
  %25 = insertvalue { ptr, i64 } %24, i64 %23, 1
  ret { ptr, i64 } %25
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGqd__cSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn.0, align 8
  %5 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %3, align 8
  store ptr %0, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %7, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr noalias nocapture %5, ptr %7, ptr %8, ptr noalias nocapture swiftself %0, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %9 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %11 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGSnyAA0aB5IndexVyxGGcig"(ptr %9, ptr %10, ptr %1, i64 %2, ptr %Element)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  %14 = insertvalue { ptr, i64 } undef, ptr %12, 0
  %15 = insertvalue { ptr, i64 } %14, i64 %13, 1
  ret { ptr, i64 } %15
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferViewAAV9uncheckedAByxGqd___tcSXRd__AA0aB5IndexVyxG5BoundRtd__luig"(ptr noalias nocapture %0, ptr %1, i64 %2, ptr %Element, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression") #0 {
entry:
  %Element1 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %bounds.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bounds.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSn.0, align 8
  %5 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %"some RangeExpression<Index>", ptr %3, align 8
  store ptr %0, ptr %bounds.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %6 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %7, ptr undef) #9
  call swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr noalias nocapture %5, ptr %7, ptr %8, ptr noalias nocapture swiftself %0, ptr %"some RangeExpression<Index>", ptr %"some RangeExpression<Index>.RangeExpression")
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %.lowerBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %9 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.0, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %11 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcig"(ptr %9, ptr %10, ptr %1, i64 %2, ptr %Element)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  %14 = insertvalue { ptr, i64 } undef, ptr %12, 0
  %15 = insertvalue { ptr, i64 } %14, i64 %13, 1
  ret { ptr, i64 } %15
}

define weak_odr hidden swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGys15UnboundedRange_OXEcig"(ptr %0, ptr %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %x.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %x.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %x.debug)
  %x.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 0
  store ptr %0, ptr %x.debug.fn, align 8
  %x.debug.data = getelementptr inbounds %swift.noescape.function, ptr %x.debug, i32 0, i32 1
  store ptr %1, ptr %x.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc { ptr, ptr } @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg"(ptr %2, i64 %3, ptr %Element)
  %5 = extractvalue { ptr, ptr } %4, 0
  %6 = extractvalue { ptr, ptr } %4, 1
  %7 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV9uncheckedAByxGSnyAA0aB5IndexVyxGG_tcig"(ptr %5, ptr %6, ptr %2, i64 %3, ptr %Element)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1
  ret { ptr, i64 } %11
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl10startIndex0D0QzvgTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl8endIndex0D0QzvgTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %5, ptr %._rawValue._rawValue, align 8
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW"(ptr noalias dereferenceable(32) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #5 {
entry:
  %3 = call ptr @malloc(i64 40)
  store ptr %3, ptr %0, align 8
  %4 = getelementptr inbounds %"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %3, i32 0, i32 0
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %6 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %7 = load i64, ptr %.count._value, align 8
  %8 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %8)
  %9 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %9, align 8, !invariant.load !17
  %10 = call swiftcc { ptr, ptr } @"$s10BufferViewAAVyxAA0aB5IndexVyxGcir"(ptr noalias dereferenceable(32) %8, ptr %5, ptr %6, i64 %7, ptr %"\CF\84_0_0") #19
  %11 = extractvalue { ptr, ptr } %10, 0
  %.spill.addr = getelementptr inbounds %"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %3, i32 0, i32 1
  store ptr %11, ptr %.spill.addr, align 8
  %12 = extractvalue { ptr, ptr } %10, 1
  %13 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.resume.0", 0
  %14 = insertvalue { ptr, ptr } %13, ptr %12, 1
  ret { ptr, ptr } %14
}

define internal swiftcc void @"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 0
  br i1 %1, label %6, label %4

4:                                                ; preds = %entryresume.0
  %.reload.addr = getelementptr inbounds %"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 1
  %.reload = load ptr, ptr %.reload.addr, align 8
  %5 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload(ptr noalias dereferenceable(32) %5, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %5)
  br label %CoroEnd

6:                                                ; preds = %entryresume.0
  %.reload.addr1 = getelementptr inbounds %"$s10BufferViewAAVyxGSlAASly7ElementQz5IndexQzcirTW.Frame", ptr %2, i32 0, i32 1
  %.reload2 = load ptr, ptr %.reload.addr1, align 8
  %7 = getelementptr inbounds [32 x i8], ptr %3, i32 0, i32 0
  call swiftcc void %.reload2(ptr noalias dereferenceable(32) %7, i1 true)
  call void @llvm.lifetime.end.p0(i64 32, ptr %7)
  br label %CoroEnd

CoroEnd:                                          ; preds = %4, %6
  call void @free(ptr %2)
  ret void
}

; Function Attrs: noinline
define linkonce_odr hidden swiftcc { ptr, ptr } @"$s10BufferViewAAVyxAA0aB5IndexVyxGcir"(ptr noalias dereferenceable(32) %0, ptr %1, ptr %2, i64 %3, ptr %Element) #5 {
entry:
  %Element1 = alloca ptr, align 8
  %position.debug = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  %Element.spill.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  store ptr %Element, ptr %Element.spill.addr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %position.debug, i8 0, i64 8, i1 false)
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  %4 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %Element.valueWitnesses.spill.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  store ptr %Element.valueWitnesses, ptr %Element.valueWitnesses.spill.addr, align 8
  %5 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %5, align 8, !invariant.load !17
  %6 = call ptr @malloc(i64 %size)
  %.spill.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  store ptr %6, ptr %.spill.addr, align 8
  call void @llvm.lifetime.start.p0(i64 -1, ptr %6)
  store ptr %1, ptr %position.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %6, ptr %1, ptr %2, i64 %3, ptr %Element)
  %7 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.resume.0", 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

define internal swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %self.debug = alloca %T10BufferViewAAV, align 8
  %position.debug = alloca ptr, align 8
  %Element1 = alloca ptr, align 8
  br i1 %1, label %5, label %2

2:                                                ; preds = %entryresume.0
  %.reload.addr10 = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload11 = load ptr, ptr %.reload.addr10, align 8
  %.reload.addr6 = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload7 = load ptr, ptr %.reload.addr6, align 8
  %Element.valueWitnesses.reload.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  %Element.valueWitnesses.reload = load ptr, ptr %Element.valueWitnesses.reload.addr, align 8
  %Element.reload.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  %Element.reload = load ptr, ptr %Element.reload.addr, align 8
  %3 = getelementptr inbounds ptr, ptr %Element.valueWitnesses.reload, i32 1
  %4 = load ptr, ptr %3, align 8, !invariant.load !17
  call void %4(ptr noalias %.reload7, ptr %Element.reload) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload7)
  call void @free(ptr %.reload11)
  br label %CoroEnd

5:                                                ; preds = %entryresume.0
  %.reload.addr8 = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload9 = load ptr, ptr %.reload.addr8, align 8
  %.reload.addr = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 2
  %.reload = load ptr, ptr %.reload.addr, align 8
  %Element.valueWitnesses.reload.addr4 = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 1
  %Element.valueWitnesses.reload5 = load ptr, ptr %Element.valueWitnesses.reload.addr4, align 8
  %Element.reload.addr2 = getelementptr inbounds %"$s10BufferViewAAVyxAA0aB5IndexVyxGcir.Frame", ptr %0, i32 0, i32 0
  %Element.reload3 = load ptr, ptr %Element.reload.addr2, align 8
  %6 = getelementptr inbounds ptr, ptr %Element.valueWitnesses.reload5, i32 1
  %7 = load ptr, ptr %6, align 8, !invariant.load !17
  call void %7(ptr noalias %.reload, ptr %Element.reload3) #6
  call void @llvm.lifetime.end.p0(i64 -1, ptr %.reload)
  call void @free(ptr %.reload9)
  br label %CoroEnd

CoroEnd:                                          ; preds = %2, %5
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASly11SubSequenceQzSny5IndexQzGcigTW"(ptr noalias nocapture sret(%T10BufferViewAAV) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.lowerBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %1, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc { ptr, i64 } @"$s10BufferViewAAVyAByxGSnyAA0aB5IndexVyxGGcig"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %9 = extractvalue { ptr, i64 } %8, 0
  %10 = extractvalue { ptr, i64 } %8, 1
  %.start1 = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 0
  %.start1._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start1, i32 0, i32 0
  %.start1._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start1._rawValue, i32 0, i32 0
  store ptr %9, ptr %.start1._rawValue._rawValue, align 8
  %.count2 = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  store i64 %10, ptr %.count2._value, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl7indices7IndicesQzvgTW"(ptr noalias nocapture sret(%TSn) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  %5 = call swiftcc { ptr, ptr } @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg"(ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %.lowerBound = getelementptr inbounds %TSn, ptr %0, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %6, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %0, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %7, ptr %.upperBound._rawValue._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferViewAAVyxGSlAASl7isEmptySbvgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %1 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %2 = load i64, ptr %.count._value, align 8
  %3 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %3, align 8, !invariant.load !17
  %4 = call swiftcc i1 @"$s10BufferViewAAV7isEmptySbvg"(ptr %1, i64 %2, ptr %"\CF\84_0_0") #19
  ret i1 %4
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSlAASl5countSivgTW"(ptr noalias nocapture swiftself dereferenceable(16) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %1 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %0, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %2 = load i64, ptr %.count._value, align 8
  %3 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %3, align 8, !invariant.load !17
  %4 = call swiftcc i64 @"$s10BufferViewAAV5countSivg"(ptr %1, i64 %2, ptr %"\CF\84_0_0") #19
  ret i64 %4
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl30_customIndexOfEquatableElementy0D0QzSgSg0G0QzFTW"(ptr noalias nocapture sret(%TSq.13) %0, ptr noalias nocapture %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE30_customIndexOfEquatableElementy0B0QzSgSg0E0QzF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl34_customLastIndexOfEquatableElementy0E0QzSgSg0H0QzFTW"(ptr noalias nocapture sret(%TSq.13) %0, ptr noalias nocapture %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl5index_8offsetBy5IndexQzAG_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW"(ptr noalias nocapture sret(%TSq.14) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %5 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSkAAMc", ptr %Self, ptr undef) #9
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %5, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSlAASl8distance4from2toSi5IndexQz_AHtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SnyAGGtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsy5IndexQz_SNyAGGtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl20_failEarlyRangeCheck_6boundsySny5IndexQzG_AHtFTW"(ptr noalias nocapture dereferenceable(16) %0, ptr noalias nocapture dereferenceable(16) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtF"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %2) #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl5index5after5IndexQzAG_tFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %5 = load i64, ptr %.count._value, align 8
  %6 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %6, align 8, !invariant.load !17
  %7 = call swiftcc ptr @"$s10BufferViewAAV5index5afterAA0aB5IndexVyxGAG_tF"(ptr %3, ptr %4, i64 %5, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %7, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSlAASl9formIndex5aftery0D0Qzz_tFTW"(ptr nocapture dereferenceable(8) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferViewAAV9formIndex5afteryAA0abD0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSKAASK5index6before5IndexQzAG_tFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %5 = load i64, ptr %.count._value, align 8
  %6 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %6, align 8, !invariant.load !17
  %7 = call swiftcc ptr @"$s10BufferViewAAV5index6beforeAA0aB5IndexVyxGAG_tF"(ptr %3, ptr %4, i64 %5, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %7, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSKAASK9formIndex6beforey0D0Qzz_tFTW"(ptr nocapture dereferenceable(8) %0, ptr noalias nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %1, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %3 = load i64, ptr %.count._value, align 8
  %4 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %4, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferViewAAV9formIndex6beforeyAA0abD0VyxGz_tF"(ptr nocapture dereferenceable(8) %0, ptr %2, i64 %3, ptr %"\CF\84_0_0") #19
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSKAASK5index_8offsetBy5IndexQzAG_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSKAASK5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW"(ptr noalias nocapture sret(%TSq.14) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %5 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSkAAMc", ptr %Self, ptr undef) #9
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %5, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSKAASK8distance4from2toSi5IndexQz_AHtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSkAASk5index_8offsetBy5IndexQzAG_SitFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture swiftself dereferenceable(16) %3, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %4, i64 %2, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %8, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferViewAAVyxGSkAASk5index_8offsetBy07limitedE05IndexQzSgAH_SiAHtFTW"(ptr noalias nocapture sret(%TSq.14) %0, ptr noalias nocapture dereferenceable(8) %1, i64 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture swiftself dereferenceable(16) %4, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr noalias nocapture %1, i64 %2, ptr noalias nocapture %3, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %4) #19
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferViewAAVyxGSkAASk8distance4from2toSi5IndexQz_AHtFTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(16) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %5 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %2, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %6 = load i64, ptr %.count._value, align 8
  %7 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %7, align 8, !invariant.load !17
  %8 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %3, ptr %4, ptr %5, i64 %6, ptr %"\CF\84_0_0") #19
  ret i64 %8
}

define swiftcc void @"$s10BufferViewAAV20withUnsafeRawPointeryqd__qd__SV_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %9, align 8, !invariant.load !17
  %10 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 %stride)
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false)
  br i1 %13, label %20, label %14

14:                                               ; preds = %entry
  call swiftcc void %1(ptr noalias nocapture sret(%swift.opaque) %0, ptr %7, i64 %11, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %15 = load ptr, ptr %6, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  ret void

18:                                               ; preds = %14
  %19 = phi ptr [ %15, %14 ]
  store ptr null, ptr %6, align 8
  store ptr %19, ptr %6, align 8
  ret void

20:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferViewAAV15withUnsafeBytesyqd__qd__SWKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %8 = ptrtoint ptr %7 to i64
  %9 = call swiftcc { i64, i64 } @"$sSW5start5countSWSVSg_SitcfC"(i64 %8, i64 %4)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  call swiftcc void %1(ptr noalias nocapture sret(%swift.opaque) %0, i64 %10, i64 %11, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %12 = load ptr, ptr %6, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %entry
  ret void

15:                                               ; preds = %entry
  %16 = phi ptr [ %12, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %16, ptr %6, align 8
  ret void
}

define swiftcc void @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %8 = alloca i8, i64 64, align 16
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %8, i32 0, i32 1
  store ptr %Element, ptr %9, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i32 1
  store ptr %R, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %8, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %8, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %12, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %12, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  call swiftcc void @"$sSV17withMemoryRebound2to8capacity_q_xm_Siq_SPyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Element, i64 %4, ptr @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__ADKXEfU_TA", ptr %8, ptr %7, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %entry
  ret void

16:                                               ; preds = %entry
  %17 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %17, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__ADKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %Element, ptr %R, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %2, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %3, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %4, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  call swiftcc void %2(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %5, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %8 = load ptr, ptr %7, align 8
  %9 = icmp ne ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi ptr [ %8, %entry ]
  store ptr null, ptr %7, align 8
  store ptr %12, ptr %7, align 8
  ret void
}

define swiftcc void @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %7 = alloca i8, i64 48, align 16
  %8 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 1
  store ptr %Element, ptr %8, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %R, ptr %9, align 8
  %10 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %7, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %10, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  call swiftcc void @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_TA", ptr %7, ptr %3, i64 %4, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define internal swiftcc void @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %Element, ptr %R, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %"$1.debug" = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$1.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %R, ptr %R2, align 8
  store ptr %1, ptr %"$0.debug", align 8
  store i64 %2, ptr %"$1.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %3, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %4, ptr %body.debug.data, align 8
  %7 = ptrtoint ptr %1 to i64
  %8 = call swiftcc { i64, i64 } @"$sSR5start5countSRyxGSPyxGSg_SitcfC"(i64 %7, i64 %2, ptr %Element)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, i64 %9, i64 %10, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %11 = load ptr, ptr %6, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  ret void

14:                                               ; preds = %entry
  %15 = phi ptr [ %11, %entry ]
  store ptr null, ptr %6, align 8
  store ptr %15, ptr %6, align 8
  ret void
}

define weak_odr hidden swiftcc i64 @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlFfA_"(ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  ret i64 0
}

define swiftcc void @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %5 = alloca %TSn.1, align 8
  %6 = alloca %T10BufferView0aB5IndexV, align 8
  %7 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %9, align 8, !invariant.load !17
  %10 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %10, 0
  br i1 %flags.isTriviallyDestroyable, label %11, label %31

11:                                               ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %12 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %13 = getelementptr inbounds i8, ptr %12, i64 %1
  %14 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %13, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %6, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %14, ptr %._rawValue._rawValue, align 8
  %15 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %16 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %16, align 8, !invariant.load !17, !dereferenceable !18
  %17 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %17, align 8, !invariant.load !17
  %18 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %size)
  %19 = extractvalue { i64, i1 } %18, 0
  %20 = extractvalue { i64, i1 } %18, 1
  %21 = call i1 @llvm.expect.i1(i1 %20, i1 false)
  br i1 %21, label %35, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds i8, ptr %15, i64 %19
  %24 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %23, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._rawValue3 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %7, i32 0, i32 0
  %._rawValue3._rawValue = getelementptr inbounds %TSV, ptr %._rawValue3, i32 0, i32 0
  store ptr %24, ptr %._rawValue3._rawValue, align 8
  %25 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %26, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %5, ptr noalias nocapture %6, ptr noalias nocapture %7, ptr %26, ptr %27)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  %.lowerBound = getelementptr inbounds %TSn.1, ptr %5, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %28 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.1, ptr %5, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %29 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %28, ptr %29, ptr %3, i64 %4, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %30 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  call swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %T, ptr %30, ptr %T)
  ret void

31:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %32 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %33 = extractvalue { i64, ptr } %32, 0
  %34 = extractvalue { i64, ptr } %32, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %33, ptr %34, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 332, i32 1)
  unreachable

35:                                               ; preds = %11
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferViewAAV4load4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %o.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %o.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %1, ptr %index.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %3, i64 %4, ptr %Element)
  %6 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %5, ptr %1, ptr %3, i64 %4, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %8, align 8, !invariant.load !17
  %9 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %6, i64 %stride)
  %10 = extractvalue { i64, i1 } %9, 0
  %11 = extractvalue { i64, i1 } %9, 1
  %12 = call i1 @llvm.expect.i1(i1 %11, i1 false)
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  store i64 %10, ptr %o.debug, align 8
  call swiftcc void @"$s10BufferViewAAV4load14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %10, ptr %T, ptr %3, i64 %4, ptr %Element, ptr %T)
  ret void

14:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define weak_odr hidden swiftcc i64 @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlFfA_"(ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  ret i64 0
}

define swiftcc void @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %5 = alloca %TSn.1, align 8
  %6 = alloca %T10BufferView0aB5IndexV, align 8
  %7 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %8 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %8, align 8, !invariant.load !17, !dereferenceable !18
  %9 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %9, align 8, !invariant.load !17
  %10 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %10, 0
  br i1 %flags.isTriviallyDestroyable, label %11, label %15

11:                                               ; preds = %entry
  %12 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses4 = load ptr, ptr %12, align 8, !invariant.load !17, !dereferenceable !18
  %13 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses4, i32 0, i32 10
  %flags5 = load i32, ptr %13, align 8, !invariant.load !17
  %14 = and i32 %flags5, 65536
  %flags5.isTriviallyDestroyable = icmp eq i32 %14, 0
  br label %16

15:                                               ; preds = %entry
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ %flags5.isTriviallyDestroyable, %11 ]
  br i1 %17, label %18, label %38

18:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %19 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %20 = getelementptr inbounds i8, ptr %19, i64 %1
  %21 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %20, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %6, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %21, ptr %._rawValue._rawValue, align 8
  %22 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  %23 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %23, align 8, !invariant.load !17, !dereferenceable !18
  %24 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %24, align 8, !invariant.load !17
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %size)
  %26 = extractvalue { i64, i1 } %25, 0
  %27 = extractvalue { i64, i1 } %25, 1
  %28 = call i1 @llvm.expect.i1(i1 %27, i1 false)
  br i1 %28, label %42, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds i8, ptr %22, i64 %26
  %31 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %30, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._rawValue3 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %7, i32 0, i32 0
  %._rawValue3._rawValue = getelementptr inbounds %TSV, ptr %._rawValue3, i32 0, i32 0
  store ptr %31, ptr %._rawValue3._rawValue, align 8
  %32 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %33 = extractvalue %swift.metadata_response %32, 0
  %34 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %33, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %5, ptr noalias nocapture %6, ptr noalias nocapture %7, ptr %33, ptr %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  %.lowerBound = getelementptr inbounds %TSn.1, ptr %5, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %35 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn.1, ptr %5, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %36 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %35, ptr %36, ptr %3, i64 %4, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  %37 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %3, i64 %4, ptr %Element)
  call swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %T, ptr %37, ptr %T)
  ret void

38:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  %39 = call swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"(ptr swiftself null)
  %40 = extractvalue { i64, ptr } %39, 0
  %41 = extractvalue { i64, ptr } %39, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 %40, ptr %41, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 350, i32 1)
  unreachable

42:                                               ; preds = %18
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferViewAAV13loadUnaligned4from2asqd__AA0aB5IndexVyxG_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %Element, ptr %T) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %T2 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %o.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %o.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %T, ptr %T2, align 8
  store ptr %1, ptr %index.debug, align 8
  store ptr %2, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %3, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %5 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %3, i64 %4, ptr %Element)
  %6 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %5, ptr %1, ptr %3, i64 %4, ptr %Element)
  %7 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %8, align 8, !invariant.load !17
  %9 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %6, i64 %stride)
  %10 = extractvalue { i64, i1 } %9, 0
  %11 = extractvalue { i64, i1 } %9, 1
  %12 = call i1 @llvm.expect.i1(i1 %11, i1 false)
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  store i64 %10, ptr %o.debug, align 8
  call swiftcc void @"$s10BufferViewAAV13loadUnaligned14fromByteOffset2asqd__Si_qd__mtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %10, ptr %T, ptr %3, i64 %4, ptr %Element, ptr %T)
  ret void

14:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc void @"$s10BufferViewAAV6offsetxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %1, 0
  %5 = xor i1 %4, true
  br i1 %5, label %6, label %8

6:                                                ; preds = %entry
  %7 = icmp slt i64 %1, %3
  br label %9

8:                                                ; preds = %entry
  br label %9

9:                                                ; preds = %6, %8
  %10 = phi i1 [ false, %8 ], [ %7, %6 ]
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 true)
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %14 = extractvalue { i64, ptr } %13, 0
  %15 = extractvalue { i64, ptr } %13, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %14, ptr %15, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 375, i32 1)
  unreachable

16:                                               ; preds = %9
  call void asm sideeffect "nop", ""()
  call swiftcc void @"$s10BufferViewAAV15uncheckedOffsetxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferViewAAV15uncheckedOffsetxSi_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, i64 %3, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %1, ptr %offset.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  %4 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %2, i64 %3, ptr %Element)
  %5 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %4, i64 %1, ptr %2, i64 %3, ptr %Element)
  call swiftcc void @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr %2, i64 %3, ptr %Element)
  ret void
}

define swiftcc void @"$s10BufferViewAAV5firstxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc i1 @"$s10BufferViewAAV7isEmptySbvg"(ptr %1, i64 %2, ptr %Element)
  br i1 %3, label %4, label %8

4:                                                ; preds = %entry
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses2 = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds ptr, ptr %Element.valueWitnesses2, i32 7
  %7 = load ptr, ptr %6, align 8, !invariant.load !17
  call void %7(ptr noalias %0, i32 1, i32 1, ptr %Element) #6
  br label %13

8:                                                ; preds = %entry
  %9 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call swiftcc void @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %9, ptr %1, i64 %2, ptr %Element)
  %10 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %10, align 8, !invariant.load !17, !dereferenceable !18
  %11 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 7
  %12 = load ptr, ptr %11, align 8, !invariant.load !17
  call void %12(ptr noalias %0, i32 0, i32 1, ptr %Element) #6
  br label %13

13:                                               ; preds = %4, %8
  ret void
}

define swiftcc void @"$s10BufferViewAAV4lastxSgvg"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  %3 = call swiftcc i1 @"$s10BufferViewAAV7isEmptySbvg"(ptr %1, i64 %2, ptr %Element)
  br i1 %3, label %4, label %8

4:                                                ; preds = %entry
  %5 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses2 = load ptr, ptr %5, align 8, !invariant.load !17, !dereferenceable !18
  %6 = getelementptr inbounds ptr, ptr %Element.valueWitnesses2, i32 7
  %7 = load ptr, ptr %6, align 8, !invariant.load !17
  call void %7(ptr noalias %0, i32 1, i32 1, ptr %Element) #6
  br label %17

8:                                                ; preds = %entry
  %9 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %10 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 1)
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  %13 = call swiftcc ptr @"$s10BufferViewAAV5index_8offsetByAA0aB5IndexVyxGAG_SitF"(ptr %9, i64 %11, ptr %1, i64 %2, ptr %Element)
  call swiftcc void @"$s10BufferViewAAV9uncheckedxAA0aB5IndexVyxG_tcig"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %13, ptr %1, i64 %2, ptr %Element)
  %14 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %14, align 8, !invariant.load !17, !dereferenceable !18
  %15 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 7
  %16 = load ptr, ptr %15, align 8, !invariant.load !17
  call void %16(ptr noalias %0, i32 0, i32 1, ptr %Element) #6
  br label %17

17:                                               ; preds = %4, %8
  ret void
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV6prefixyAByxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %maxLength.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %maxLength.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %maxLength.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.39.Can't have a prefix of negative length.", i64 39, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 405, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %nc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %18 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %19 = extractvalue %swift.metadata_response %18, 0
  %20 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %17, i64 %16, ptr noalias nocapture %3, ptr %Element, ptr %19)
  %21 = extractvalue { ptr, i64 } %20, 0
  %22 = extractvalue { ptr, i64 } %20, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %23 = insertvalue { ptr, i64 } undef, ptr %21, 0
  %24 = insertvalue { ptr, i64 } %23, i64 %22, 1
  ret { ptr, i64 } %24
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV6suffixyAByxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %maxLength.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %maxLength.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %newStart.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newStart.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %maxLength.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.39.Can't have a suffix of negative length.", i64 39, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 412, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %nc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %1, i64 %2, ptr %Element)
  %18 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %16)
  %19 = extractvalue { i64, i1 } %18, 0
  %20 = extractvalue { i64, i1 } %18, 1
  %21 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %21, align 8, !invariant.load !17, !dereferenceable !18
  %22 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %22, align 8, !invariant.load !17
  %23 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %19, i64 %stride)
  %24 = extractvalue { i64, i1 } %23, 0
  %25 = extractvalue { i64, i1 } %23, 1
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 false)
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds i8, ptr %17, i64 %24
  store ptr %28, ptr %newStart.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %29 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %30 = extractvalue %swift.metadata_response %29, 0
  %31 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %28, i64 %16, ptr noalias nocapture %3, ptr %Element, ptr %30)
  %32 = extractvalue { ptr, i64 } %31, 0
  %33 = extractvalue { ptr, i64 } %31, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %34 = insertvalue { ptr, i64 } undef, ptr %32, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

36:                                               ; preds = %15
  call void @llvm.trap()
  unreachable
}

define weak_odr hidden swiftcc i64 @"$s10BufferViewAAV9dropFirstyAByxGSiFfA_"(ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  ret i64 1
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV9dropFirstyAByxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %k.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %k.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %dc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %dc.debug, i8 0, i64 8, i1 false)
  %newStart.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %newStart.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %k.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Can't drop a negative number of elements.", i64 41, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 420, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  br label %15

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %13, %14
  %16 = phi i64 [ %2, %14 ], [ %0, %13 ]
  store i64 %16, ptr %dc.debug, align 8
  %17 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %1, i64 %2, ptr %Element)
  %18 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %18, align 8, !invariant.load !17, !dereferenceable !18
  %19 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %19, align 8, !invariant.load !17
  %20 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %16, i64 %stride)
  %21 = extractvalue { i64, i1 } %20, 0
  %22 = extractvalue { i64, i1 } %20, 1
  %23 = call i1 @llvm.expect.i1(i1 %22, i1 false)
  br i1 %23, label %36, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, ptr %17, i64 %21
  store ptr %25, ptr %newStart.debug, align 8
  %26 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %16)
  %27 = extractvalue { i64, i1 } %26, 0
  %28 = extractvalue { i64, i1 } %26, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %29 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %30 = extractvalue %swift.metadata_response %29, 0
  %31 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %25, i64 %27, ptr noalias nocapture %3, ptr %Element, ptr %30)
  %32 = extractvalue { ptr, i64 } %31, 0
  %33 = extractvalue { ptr, i64 } %31, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %34 = insertvalue { ptr, i64 } undef, ptr %32, 0
  %35 = insertvalue { ptr, i64 } %34, i64 %33, 1
  ret { ptr, i64 } %35

36:                                               ; preds = %15
  call void @llvm.trap()
  unreachable
}

define weak_odr hidden swiftcc i64 @"$s10BufferViewAAV8dropLastyAByxGSiFfA_"(ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  store ptr %Element, ptr %Element1, align 8
  ret i64 1
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV8dropLastyAByxGSiF"(i64 %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %k.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %k.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %nc.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %nc.debug, i8 0, i64 8, i1 false)
  %3 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %k.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %4 = icmp slt i64 %0, 0
  %5 = xor i1 %4, true
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 true)
  br i1 %6, label %11, label %7

7:                                                ; preds = %entry
  %8 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.41.Can't drop a negative number of elements.", i64 41, i1 true)
  %9 = extractvalue { i64, ptr } %8, 0
  %10 = extractvalue { i64, ptr } %8, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %9, ptr %10, i64 ptrtoint (ptr @".str.27.BufferView/BufferView.swift" to i64), i64 27, i8 2, i64 428, i32 1)
  unreachable

11:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %12 = icmp slt i64 %0, %2
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %2, i64 %0)
  %15 = extractvalue { i64, i1 } %14, 0
  %16 = extractvalue { i64, i1 } %14, 1
  br label %18

17:                                               ; preds = %11
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi i64 [ 0, %17 ], [ %15, %13 ]
  store i64 %19, ptr %nc.debug, align 8
  %20 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %3, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %21 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %22 = extractvalue %swift.metadata_response %21, 0
  %23 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %20, i64 %19, ptr noalias nocapture %3, ptr %Element, ptr %22)
  %24 = extractvalue { ptr, i64 } %23, 0
  %25 = extractvalue { ptr, i64 } %23, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %26 = insertvalue { ptr, i64 } undef, ptr %24, 0
  %27 = insertvalue { ptr, i64 } %26, i64 %25, 1
  ret { ptr, i64 } %27
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV6prefix4upToAByxGAA0aB5IndexVyxG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %3 = alloca %TSn, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %6 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %index.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %7 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %7, ptr %._rawValue._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %0, ptr %._rawValue2._rawValue, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %3, ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %9, ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %11, ptr %12, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = call swiftcc ptr @"$s10BufferViewAAV11baseAddress33_33310AA7C1FAAF00F56EED8A671B7A06LLSVvg"(ptr %1, i64 %2, ptr %Element)
  %14 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %15 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %14, ptr %0, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %16 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %17 = extractvalue %swift.metadata_response %16, 0
  %18 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %13, i64 %15, ptr noalias nocapture %6, ptr %Element, ptr %17)
  %19 = extractvalue { ptr, i64 } %18, 0
  %20 = extractvalue { ptr, i64 } %18, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %21 = insertvalue { ptr, i64 } undef, ptr %19, 0
  %22 = insertvalue { ptr, i64 } %21, i64 %20, 1
  ret { ptr, i64 } %22
}

define swiftcc { ptr, i64 } @"$s10BufferViewAAV6suffix4fromAByxGAA0aB5IndexVyxG_tF"(ptr %0, ptr %1, i64 %2, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %index.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %index.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %3 = alloca %TSn, align 8
  %4 = alloca %T10BufferView0aB5IndexV, align 8
  %5 = alloca %T10BufferView0aB5IndexV, align 8
  %6 = alloca %T10BufferViewAAV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %index.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 0
  %self.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self.debug.start, i32 0, i32 0
  %self.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self.debug.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %self.debug.start._rawValue._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %2, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %4, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %0, ptr %._rawValue._rawValue, align 8
  %7 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue2 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %5, i32 0, i32 0
  %._rawValue2._rawValue = getelementptr inbounds %TSV, ptr %._rawValue2, i32 0, i32 0
  store ptr %7, ptr %._rawValue2._rawValue, align 8
  %8 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #18
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %9, ptr undef) #9
  call swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque) %3, ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %9, ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %.lowerBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  %11 = load ptr, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSn, ptr %3, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  %12 = load ptr, ptr %.upperBound._rawValue._rawValue, align 8
  call swiftcc void @"$s10BufferViewAAV12_checkBoundsyySnyAA0aB5IndexVyxGGF"(ptr %11, ptr %12, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  %13 = call swiftcc ptr @"$s10BufferViewAAV8endIndexAA0abD0VyxGvg"(ptr %1, i64 %2, ptr %Element)
  %14 = call swiftcc i64 @"$s10BufferViewAAV8distance4from2toSiAA0aB5IndexVyxG_AHtF"(ptr %0, ptr %13, ptr %1, i64 %2, ptr %Element)
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %6, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  store ptr %1, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %6, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %2, ptr %.count._value, align 8
  %15 = call swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 0, ptr %Element) #18
  %16 = extractvalue %swift.metadata_response %15, 0
  %17 = call swiftcc { ptr, i64 } @"$s10BufferViewAAV11baseAddress5count9dependsOnAByxGSV_Siqd__tclufC"(ptr %0, i64 %14, ptr noalias nocapture %6, ptr %Element, ptr %16)
  %18 = extractvalue { ptr, i64 } %17, 0
  %19 = extractvalue { ptr, i64 } %17, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %20 = insertvalue { ptr, i64 } undef, ptr %18, 0
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1
  ret { ptr, i64 } %21
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss10fatalError_4file4lines5NeverOSSyXK_s12StaticStringVSutFfA_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #6
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

declare swiftcc i64 @"$sSW11baseAddressSVSgvg"(i64, i64) #0

declare swiftcc i64 @"$sSW5countSivg"(i64, i64) #0

declare swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSzsWl"() #8 {
entry:
  %0 = load ptr, ptr @"$sS2iSzsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSzsMc", ptr @"$sSiN", ptr undef) #9
  store atomic ptr %2, ptr @"$sS2iSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

; Function Attrs: nounwind readonly
declare ptr @swift_getWitnessTable(ptr, ptr, ptr) #9

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #6
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

declare swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV4from2to9dependsOnACyxGAA0aB5IndexVyxG_AJqd__tclufC"(ptr, ptr, ptr noalias nocapture, ptr, ptr) #0

; Function Attrs: noinline nounwind readnone
define swiftcc %swift.metadata_response @"$s10BufferViewAAVMa"(i64 %0, ptr %1) #8 {
entry:
  %2 = call swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr undef, ptr undef, ptr @"$s10BufferViewAAVMn") #18
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = insertvalue %swift.metadata_response undef, ptr %3, 0
  %6 = insertvalue %swift.metadata_response %5, i64 %4, 1
  ret %swift.metadata_response %6
}

declare swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64, ptr, ptr) #0

define internal swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlFqd__SPyxGKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i32 1
  %R = load ptr, ptr %5, align 8
  store ptr %R, ptr %R2, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %2, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 1
  %8 = load ptr, ptr %.data, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %TSi }>, ptr %2, i32 0, i32 3
  %._value = getelementptr inbounds %TSi, ptr %9, i32 0, i32 0
  %10 = load i64, ptr %._value, align 8
  tail call swiftcc void @"$s10BufferViewAAV32withContiguousStorageIfAvailableyqd__Sgqd__SRyxGKXEKlFqd__SPyxGKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %7, ptr %8, i64 %10, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind readonly willreturn
declare swiftcc %swift.metadata_response @swift_getTupleTypeMetadata2(i64, ptr, ptr, ptr, ptr) #10

declare swiftcc %swift.metadata_response @"$sSqMa"(i64, ptr) #0

declare swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64, ptr) #0

declare swiftcc i1 @"$sSxsE2eeoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc void @"$ss3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr, ptr) #0

declare swiftcc void @"$ss12Zip2SequenceV12makeIteratorAB0D0Vyxq__GyF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr noalias nocapture swiftself) #0

declare swiftcc %swift.metadata_response @"$ss12Zip2SequenceVMa"(i64, ptr) #0

declare swiftcc void @"$ss12Zip2SequenceV8IteratorV4next7ElementQz_AFQy_tSgyF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr nocapture swiftself) #0

declare swiftcc %swift.metadata_response @"$ss12Zip2SequenceV8IteratorVMa"(i64, ptr) #0

; Function Attrs: nounwind readonly willreturn
declare swiftcc %swift.metadata_response @swift_checkMetadataState(i64, ptr) #10

declare swiftcc i1 @"$sSQ2eeoiySbx_xtFZTj"(ptr noalias nocapture, ptr noalias nocapture, ptr swiftself, ptr, ptr) #0

declare swiftcc void @"$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfC"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr noalias nocapture, ptr, ptr) #0

declare swiftcc i1 @"$sSLsE2geoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc i1 @"$sSLsE2leoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

declare swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr, ptr, ptr) #0

declare swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque), i64, ptr, ptr, ptr) #0

declare swiftcc i64 @"$sSlsE5countSivg"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc %swift.metadata_response @"$sSnMa"(i64, ptr, ptr) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSZsWl"() #8 {
entry:
  %0 = load ptr, ptr @"$sS2iSZsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSZsMc", ptr @"$sSiN", ptr undef) #9
  store atomic ptr %2, ptr @"$sS2iSZsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

declare swiftcc void @"$sSX8relative2toSny5BoundQzGqd___tSlRd__5IndexQyd__ADRSlFTj"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself, ptr, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #11

declare swiftcc { i64, i64 } @"$sSW5start5countSWSVSg_SitcfC"(i64, i64) #0

define internal swiftcc void @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__ADKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %2, i32 0, i32 1
  %Element = load ptr, ptr %4, align 8
  store ptr %Element, ptr %Element1, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i32 1
  %R = load ptr, ptr %5, align 8
  store ptr %R, ptr %R2, align 8
  %6 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %2, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %6, i32 0, i32 1
  %8 = load ptr, ptr %.data, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function, %T10BufferViewAAV }>, ptr %2, i32 0, i32 3
  %.start = getelementptr inbounds %T10BufferViewAAV, ptr %9, i32 0, i32 0
  %.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.start, i32 0, i32 0
  %.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.start._rawValue, i32 0, i32 0
  %10 = load ptr, ptr %.start._rawValue._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferViewAAV, ptr %9, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %11 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferViewAAV17withUnsafePointeryqd__qd__SPyxG_SitKXEKlFqd__ADKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, ptr %7, ptr %8, ptr %10, i64 %11, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

define internal swiftcc void @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_TA"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %R2 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 1
  %Element = load ptr, ptr %5, align 8
  store ptr %Element, ptr %Element1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %R = load ptr, ptr %6, align 8
  store ptr %R, ptr %R2, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %swift.noescape.function }>, ptr %3, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %.data, align 8
  tail call swiftcc void @"$s10BufferViewAAV010withUnsafeA7Pointeryqd__qd__SRyxGKXEKlFqd__SPyxG_SitKXEfU_"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %8, ptr %9, ptr %Element, ptr %R, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSTAA8IteratorST_StWT"(ptr %"BufferView<Element>.Iterator", ptr %"BufferView<Element>", ptr %"BufferView<Element>.Sequence") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", ptr %"BufferView<Element>.Iterator", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSlAASTWb"(ptr %"BufferView<Element>", ptr %"BufferView<Element>1", ptr %"BufferView<Element>.Collection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSTAAMc", ptr %"BufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSlAA5IndexSl_SLWT"(ptr %"BufferView<Element>.Index", ptr %"BufferView<Element>", ptr %"BufferView<Element>.Collection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %"BufferView<Element>.Index", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSlAA7IndicesSl_SlWT"(ptr %"BufferView<Element>.Indices", ptr %"BufferView<Element>", ptr %"BufferView<Element>.Collection") #12 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"BufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %"BufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSlAA11SubSequenceSl_SlWT"(ptr %"BufferView<Element>.SubSequence", ptr %"BufferView<Element>", ptr %"BufferView<Element>.Collection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %"BufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSKAASlWb"(ptr %"BufferView<Element>", ptr %"BufferView<Element>1", ptr %"BufferView<Element>.BidirectionalCollection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSlAAMc", ptr %"BufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSKAA7IndicesSl_SKWT"(ptr %"BufferView<Element>.Indices", ptr %"BufferView<Element>", ptr %"BufferView<Element>.BidirectionalCollection") #12 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"BufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSKsSxRzSZ6StrideRpzrlMc", ptr %"BufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSKAA11SubSequenceSl_SKWT"(ptr %"BufferView<Element>.SubSequence", ptr %"BufferView<Element>", ptr %"BufferView<Element>.BidirectionalCollection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSKAAMc", ptr %"BufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSkAASKWb"(ptr %"BufferView<Element>", ptr %"BufferView<Element>1", ptr %"BufferView<Element>.RandomAccessCollection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSKAAMc", ptr %"BufferView<Element>", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSkAA7IndicesSl_SkWT"(ptr %"BufferView<Element>.Indices", ptr %"BufferView<Element>", ptr %"BufferView<Element>.RandomAccessCollection") #12 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = getelementptr inbounds ptr, ptr %"BufferView<Element>.Indices", i64 2
  %"BufferViewIndex<Element>" = load ptr, ptr %0, align 8, !invariant.load !17
  %1 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #9
  %2 = call ptr @"$sS2iSZsWl"() #18
  %3 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %4 = getelementptr inbounds ptr, ptr %3, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds ptr, ptr %3, i32 1
  store ptr %2, ptr %5, align 8
  %6 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSksSxRzSZ6StrideRpzrlMc", ptr %"BufferView<Element>.Indices", ptr %3) #9
  ret ptr %6
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferViewAAVyxGSkAA11SubSequenceSl_SkWT"(ptr %"BufferView<Element>.SubSequence", ptr %"BufferView<Element>", ptr %"BufferView<Element>.RandomAccessCollection") #12 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferViewAAVyxGSkAAMc", ptr %"BufferView<Element>.SubSequence", ptr undef) #9
  ret ptr %0
}

; Function Attrs: nounwind
define internal ptr @"$s10BufferViewAAVMi"(ptr %0, ptr %1, ptr %2) #12 {
entry:
  %Element1 = alloca ptr, align 8
  %Element = load ptr, ptr %1, align 8
  store ptr %Element, ptr %Element1, align 8
  %3 = call ptr @swift_allocateGenericValueMetadata(ptr %0, ptr %1, ptr %2, i64 16) #6
  ret ptr %3
}

; Function Attrs: nounwind
define linkonce_odr hidden ptr @__swift_memcpy16_8(ptr %0, ptr %1, ptr %2) #12 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 16, i1 false)
  ret ptr %0
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(ptr %0, ptr %1) #12 {
entry:
  ret void
}

; Function Attrs: nounwind readonly
define internal i32 @"$s10BufferViewAAVwet"(ptr noalias %value, i32 %numEmptyCases, ptr %"BufferView<Element>") #14 {
entry:
  %0 = icmp eq i32 0, %numEmptyCases
  br i1 %0, label %34, label %1

1:                                                ; preds = %entry
  %2 = icmp ugt i32 %numEmptyCases, 1
  br i1 %2, label %3, label %30

3:                                                ; preds = %1
  %4 = sub i32 %numEmptyCases, 1
  %5 = getelementptr inbounds i8, ptr %value, i32 16
  br i1 false, label %6, label %7

6:                                                ; preds = %3
  br label %19

7:                                                ; preds = %3
  br i1 true, label %8, label %11

8:                                                ; preds = %7
  %9 = load i8, ptr %5, align 1
  %10 = zext i8 %9 to i32
  br label %19

11:                                               ; preds = %7
  br i1 false, label %12, label %15

12:                                               ; preds = %11
  %13 = load i16, ptr %5, align 1
  %14 = zext i16 %13 to i32
  br label %19

15:                                               ; preds = %11
  br i1 false, label %16, label %18

16:                                               ; preds = %15
  %17 = load i32, ptr %5, align 1
  br label %19

18:                                               ; preds = %15
  unreachable

19:                                               ; preds = %16, %12, %8, %6
  %20 = phi i32 [ 0, %6 ], [ %10, %8 ], [ %14, %12 ], [ %17, %16 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = sub i32 %20, 1
  %24 = shl i32 %23, 128
  %25 = select i1 true, i32 0, i32 %24
  %26 = load i128, ptr %value, align 1
  %27 = trunc i128 %26 to i32
  %28 = or i32 %27, %25
  %29 = add i32 1, %28
  br label %35

30:                                               ; preds = %19, %1
  %value.start = getelementptr inbounds %T10BufferViewAAV, ptr %value, i32 0, i32 0
  %value.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value.start, i32 0, i32 0
  %value.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value.start._rawValue, i32 0, i32 0
  %31 = load i64, ptr %value.start._rawValue._rawValue, align 8
  %32 = icmp ne i64 %31, 0
  %33 = sext i1 %32 to i32
  br label %35

34:                                               ; preds = %entry
  br label %35

35:                                               ; preds = %34, %30, %22
  %36 = phi i32 [ %33, %30 ], [ %29, %22 ], [ -1, %34 ]
  %37 = add i32 %36, 1
  ret i32 %37
}

; Function Attrs: nounwind
define internal void @"$s10BufferViewAAVwst"(ptr noalias %value, i32 %whichCase, i32 %numEmptyCases, ptr %"BufferView<Element>") #12 {
entry:
  %0 = getelementptr inbounds i8, ptr %value, i32 16
  %1 = icmp ugt i32 %numEmptyCases, 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %entry
  %3 = sub i32 %numEmptyCases, 1
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i32 [ 0, %entry ], [ 1, %2 ]
  %6 = icmp ule i32 %whichCase, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  br label %20

10:                                               ; preds = %7
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8 0, ptr %0, align 8
  br label %20

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i16 0, ptr %0, align 8
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq i32 %5, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i32 0, ptr %0, align 8
  br label %20

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %18, %15, %12, %9
  %21 = icmp eq i32 %whichCase, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  %23 = sub i32 %whichCase, 1
  %value.start = getelementptr inbounds %T10BufferViewAAV, ptr %value, i32 0, i32 0
  %value.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value.start, i32 0, i32 0
  %value.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value.start._rawValue, i32 0, i32 0
  store i64 0, ptr %value.start._rawValue._rawValue, align 8
  br label %50

24:                                               ; preds = %4
  %25 = sub i32 %whichCase, 1
  %26 = sub i32 %25, 1
  br i1 true, label %31, label %27

27:                                               ; preds = %24
  %28 = lshr i32 %26, 128
  %29 = add i32 1, %28
  %30 = and i32 poison, %26
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ 1, %24 ], [ %29, %27 ]
  %33 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %34 = zext i32 %33 to i128
  store i128 %34, ptr %value, align 8
  %35 = icmp eq i32 %5, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %49

37:                                               ; preds = %31
  %38 = icmp eq i32 %5, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = trunc i32 %32 to i8
  store i8 %40, ptr %0, align 8
  br label %49

41:                                               ; preds = %37
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = trunc i32 %32 to i16
  store i16 %44, ptr %0, align 8
  br label %49

45:                                               ; preds = %41
  %46 = icmp eq i32 %5, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  store i32 %32, ptr %0, align 8
  br label %49

48:                                               ; preds = %45
  unreachable

49:                                               ; preds = %47, %43, %39, %36
  br label %50

50:                                               ; preds = %49, %22, %20
  ret void
}

; Function Attrs: nounwind
declare ptr @swift_allocateGenericValueMetadata(ptr, ptr, ptr, i64) #6

declare swiftcc void @"$sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, i64, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsySny5IndexQzG_AEtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SNyADGtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtF"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE34_customLastIndexOfEquatableElementy0C0QzSgSg0F0QzF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc void @"$sSlsE30_customIndexOfEquatableElementy0B0QzSgSg0E0QzF"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare ptr @malloc(i64)

declare void @free(ptr)

declare swiftcc i64 @"$sSTsE13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tF"(ptr noalias nocapture, i64, i64, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc ptr @"$sSlsE22_copyToContiguousArrays0cD0Vy7ElementQzGyF"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i8 @"$sSTsE31_customContainsEquatableElementySbSg0D0QzF"(ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i64 @"$sSlsE19underestimatedCountSivg"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc { i64, i64 } @"$sSR5start5countSRyxGSPyxGSg_SitcfC"(i64, i64, ptr) #0

; Function Attrs: noinline
declare swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

; Function Attrs: convergent nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #15

; Function Attrs: nounwind
declare ptr @swift_slowAlloc(i64, i64) #6

; Function Attrs: nounwind
declare void @swift_slowDealloc(ptr, i64, i64) #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #11

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare ptr @llvm.stacksave() #16

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.stackrestore(ptr) #16

declare swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64, i64, i64) #0

declare extern_weak zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 noundef, i64 noundef) #0

declare swiftcc { i64, ptr } @"$ss9_typeName_9qualifiedSSypXp_SbtF"(ptr, i1) #0

declare swiftcc void @"$sSS6appendyySSF"(i64, ptr, ptr nocapture swiftself dereferenceable(16)) #0

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr %2, ptr %3, ptr %4) #17 {
entry:
  %generic.arguments = alloca [3 x ptr], align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %generic.arguments)
  %5 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 0
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 1
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 2
  store ptr %3, ptr %7, align 8
  %8 = call swiftcc %swift.metadata_response @swift_getGenericMetadata(i64 %0, ptr %generic.arguments, ptr %4) #9
  ret %swift.metadata_response %8
}

; Function Attrs: nounwind readonly
declare swiftcc %swift.metadata_response @swift_getGenericMetadata(i64, ptr, ptr) #9

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #6 = { nounwind }
attributes #7 = { noinline nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #8 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind readonly willreturn }
attributes #11 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #13 = { argmemonly nocallback nofree nounwind willreturn }
attributes #14 = { nounwind readonly "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #15 = { convergent nocallback nofree nosync nounwind readnone willreturn }
attributes #16 = { nocallback nofree nosync nounwind willreturn }
attributes #17 = { noinline nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #18 = { nounwind readnone }
attributes #19 = { noinline }
attributes #20 = { inaccessiblemem_or_argmemonly nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
!17 = !{}
!18 = !{i64 96}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.type = type { i64 }
%swift.protocol_conformance_descriptor = type { i32, i32, i32, i32 }
%swift.protocol = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%swift.method_descriptor = type { i32, i32 }
%swift.protocol_requirement = type { i32, i32 }
%swift.vwtable = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32 }
%swift.type_metadata_record = type { i32 }
%T10BufferView0aB5IndexV = type <{ %TSV }>
%TSV = type <{ ptr }>
%TSVSg = type <{ [8 x i8] }>
%swift.metadata_response = type { ptr, i64 }
%TSi = type <{ i64 }>

@"$sSVN" = external global %swift.type, align 8
@"$sSVSHsWP" = external global ptr, align 8
@"$sSiN" = external global %swift.type, align 8
@"$sS2iSzsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.32.BufferView/BufferViewIndex.swift" = private unnamed_addr constant [33 x i8] c"BufferView/BufferViewIndex.swift\00"
@".str.19.Precondition failed" = private unnamed_addr constant [20 x i8] c"Precondition failed\00"
@".str.31.Division results in an overflow" = private unnamed_addr constant [32 x i8] c"Division results in an overflow\00"
@".str.24.Swift/IntegerTypes.swift" = private unnamed_addr constant [25 x i8] c"Swift/IntegerTypes.swift\00"
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@"$sSQMp" = external global %swift.protocol, align 4
@"got.$sSQMp" = private unnamed_addr constant ptr @"$sSQMp"
@"$sSQ2eeoiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSQ2eeoiySbx_xtFZTq" = private unnamed_addr constant ptr @"$sSQ2eeoiySbx_xtFZTq"
@"$s10BufferView0aB5IndexVyxGSQAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView0aB5IndexVyxGSQAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSQMp" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSQAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 1, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSQ2eeoiySbx_xtFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSQAASQ2eeoiySbx_xtFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", i32 0, i32 6) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSQAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", i32 0, i32 10) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView0aB5IndexVyxGSHAASQ" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAASQWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView0aB5IndexVyxGSHAASQ", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSHMp" = external global %swift.protocol, align 4
@"got.$sSHMp" = private unnamed_addr constant ptr @"$sSHMp"
@"$sSHSQTb" = external global %swift.protocol_requirement, align 4
@"got.$sSHSQTb" = private unnamed_addr constant ptr @"$sSHSQTb"
@"$sSH9hashValueSivgTq" = external global %swift.method_descriptor, align 4
@"got.$sSH9hashValueSivgTq" = private unnamed_addr constant ptr @"$sSH9hashValueSivgTq"
@"$sSH4hash4intoys6HasherVz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSH4hash4intoys6HasherVz_tFTq" = private unnamed_addr constant ptr @"$sSH4hash4intoys6HasherVz_tFTq"
@"$sSH13_rawHashValue4seedS2i_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSH13_rawHashValue4seedS2i_tFTq" = private unnamed_addr constant ptr @"$sSH13_rawHashValue4seedS2i_tFTq"
@"$s10BufferView0aB5IndexVyxGSHAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView0aB5IndexVyxGSHAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSHMp" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 4, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSHSQTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView0aB5IndexVyxGSHAASQ", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSH9hashValueSivgTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAASH9hashValueSivgTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSH4hash4intoys6HasherVz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAASH4hash4intoys6HasherVz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSH13_rawHashValue4seedS2i_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAASH13_rawHashValue4seedS2i_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 12) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", i32 0, i32 16) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView0aB5IndexVyxGSxAASL" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAASLWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAASL", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSiSLsWP" = external global ptr, align 8
@"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_SL" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_SLWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_SL", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSis13SignedNumericsWP" = external global ptr, align 8
@"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumeric" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumericPWT" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumeric", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic Si" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Si", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____ 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, i8 }>, ptr @"symbolic _____ 10BufferView0aB5IndexV", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSx" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSx", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@0 = private constant [7 x i8] c"Stride\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView0aB5IndexVyxGSxAAMA" = internal constant { i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSx" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMA", i32 0, i32 1) to i64)) to i32), i32 1, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Si" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMA", i32 0, i32 5) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sSxMp" = external global %swift.protocol, align 4
@"got.$sSxMp" = private unnamed_addr constant ptr @"$sSxMp"
@"$sSxSLTb" = external global %swift.protocol_requirement, align 4
@"got.$sSxSLTb" = private unnamed_addr constant ptr @"$sSxSLTb"
@"$sSx6StrideSx_SLTn" = external global %swift.protocol_requirement, align 4
@"got.$sSx6StrideSx_SLTn" = private unnamed_addr constant ptr @"$sSx6StrideSx_SLTn"
@"$sSx6StrideSx_s13SignedNumericTn" = external global %swift.protocol_requirement, align 4
@"got.$sSx6StrideSx_s13SignedNumericTn" = private unnamed_addr constant ptr @"$sSx6StrideSx_s13SignedNumericTn"
@"$s6StrideSxTl" = external global %swift.protocol_requirement, align 4
@"got.$s6StrideSxTl" = private unnamed_addr constant ptr @"$s6StrideSxTl"
@"$sSx8distance2to6StrideQzx_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSx8distance2to6StrideQzx_tFTq" = private unnamed_addr constant ptr @"$sSx8distance2to6StrideQzx_tFTq"
@"$sSx8advanced2byx6StrideQz_tFTq" = external global %swift.method_descriptor, align 4
@"got.$sSx8advanced2byx6StrideQz_tFTq" = private unnamed_addr constant ptr @"$sSx8advanced2byx6StrideQz_tFTq"
@"$sSx5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSx5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZTq" = private unnamed_addr constant ptr @"$sSx5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZTq"
@"$s10BufferView0aB5IndexVyxGSxAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView0aB5IndexVyxGSxAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSxMp" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 7, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSxSLTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAASL", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSx6StrideSx_SLTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_SL", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSx6StrideSx_s13SignedNumericTn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumeric", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s6StrideSxTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic Si", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSx8distance2to6StrideQzx_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAASx8distance2to6StrideQzx_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 14) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSx8advanced2byx6StrideQz_tFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 15) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAASx8advanced2byx6StrideQz_tFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 16) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSx5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 17) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAASx5_step5after4from2bySiSg5index_x5valuetAiJ_xAKt_x6StrideQztFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 18) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", i32 0, i32 22) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"associated conformance 10BufferView0aB5IndexVyxGSLAASQ" = linkonce_odr hidden constant <{ i8, i8, i32, i8 }> <{ i8 -1, i8 7, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAASQWb" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i8, i32, i8 }>, ptr @"associated conformance 10BufferView0aB5IndexVyxGSLAASQ", i32 0, i32 2) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSLMp" = external global %swift.protocol, align 4
@"got.$sSLMp" = private unnamed_addr constant ptr @"$sSLMp"
@"$sSLSQTb" = external global %swift.protocol_requirement, align 4
@"got.$sSLSQTb" = private unnamed_addr constant ptr @"$sSLSQTb"
@"$sSL1loiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSL1loiySbx_xtFZTq" = private unnamed_addr constant ptr @"$sSL1loiySbx_xtFZTq"
@"$sSL2leoiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSL2leoiySbx_xtFZTq" = private unnamed_addr constant ptr @"$sSL2leoiySbx_xtFZTq"
@"$sSL2geoiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSL2geoiySbx_xtFZTq" = private unnamed_addr constant ptr @"$sSL2geoiySbx_xtFZTq"
@"$sSL1goiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSL1goiySbx_xtFZTq" = private unnamed_addr constant ptr @"$sSL1goiySbx_xtFZTq"
@"$s10BufferView0aB5IndexVyxGSLAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView0aB5IndexVyxGSLAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSLMp" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 5, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSLSQTb" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"associated conformance 10BufferView0aB5IndexVyxGSLAASQ", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSL1loiySbx_xtFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAASL1loiySbx_xtFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 8) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSL2leoiySbx_xtFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 9) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAASL2leoiySbx_xtFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 10) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSL2geoiySbx_xtFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 11) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAASL2geoiySbx_xtFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 12) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSL1goiySbx_xtFZTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 13) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAASL1goiySbx_xtFZTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 14) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", i32 0, i32 18) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexV9_rawValueSVvpMV" = unnamed_addr constant { i32 } zeroinitializer, align 4
@"$s10BufferView0aB5IndexVWV" = internal constant %swift.vwtable { ptr @__swift_memcpy8_8, ptr @__swift_noop_void_return, ptr @__swift_memcpy8_8, ptr @__swift_memcpy8_8, ptr @__swift_memcpy8_8, ptr @__swift_memcpy8_8, ptr @"$s10BufferView0aB5IndexVwet", ptr @"$s10BufferView0aB5IndexVwst", i64 8, i64 8, i32 7, i32 1 }, align 8
@1 = internal constant <{ i32, [4 x i8] }> zeroinitializer, align 8
@.str.10.BufferView = private constant [11 x i8] c"BufferView\00"
@"$s10BufferViewMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32 }>, ptr @"$s10BufferViewMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__constg_swiftt", align 4
@.str.15.BufferViewIndex = private constant [16 x i8] c"BufferViewIndex\00"
@"$s10BufferView0aB5IndexVMI" = internal global [16 x ptr] zeroinitializer, align 8
@"$s10BufferView0aB5IndexVMn" = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }> <{ i32 209, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewMXM" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.15.BufferViewIndex to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMa" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMF" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 4) to i64)) to i32), i32 1, i32 3, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMI" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMP" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB5IndexVMn", i32 0, i32 8) to i64)) to i32), i16 1, i16 0, i16 1, i16 0, i8 -128, i8 0, i8 0, i8 0 }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferView0aB5IndexVMP" = internal constant <{ i32, i32, i32, i32, i32, i16, i16 }> <{ i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMi" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMP" to i64)) to i32), i32 0, i32 1073741825, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVWV" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView0aB5IndexVMP", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView0aB5IndexVMP", i32 0, i32 4) to i64)) to i32), i16 1, i16 1 }>, align 8
@"symbolic SV" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"SV", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@2 = private constant [10 x i8] c"_rawValue\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView0aB5IndexVMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMF" to i64)) to i32), i32 0, i16 0, i16 12, i32 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic SV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB5IndexVMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB5IndexVMF", i32 0, i32 7) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexVyxGSQAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSQAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSQAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexVyxGSHAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSHAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexVyxGSxAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSxAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexVyxGSLAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVyxGSLAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView0aB5IndexVHn" = private constant %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVHn" to i64)) to i32) }, section "__TEXT, __swift5_types, regular", no_sanitize_address, align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [27 x ptr] [ptr @"$s10BufferView0aB5IndexV9_rawValueSVvg", ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC", ptr @"$s10BufferView0aB5IndexV9isAlignedSbvg", ptr @"$s10BufferView0aB5IndexV4hash4intoys6HasherVz_tF", ptr @"$s10BufferView0aB5IndexV9hashValueSivg", ptr @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF", ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF", ptr @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ", ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", ptr @"$s10BufferView0aB5IndexVyxGSxAAMA", ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr @"$s10BufferView0aB5IndexV9_rawValueSVvpMV", ptr @"$s10BufferView0aB5IndexVMn", ptr @"$s10BufferView0aB5IndexVMn", ptr @"$s10BufferView0aB5IndexVMa", ptr @"$s10BufferView0aB5IndexVMF", ptr @"$s10BufferView0aB5IndexVMa", ptr @"$s10BufferView0aB5IndexVyxGSQAAHc", ptr @"$s10BufferView0aB5IndexVyxGSHAAHc", ptr @"$s10BufferView0aB5IndexVyxGSxAAHc", ptr @"$s10BufferView0aB5IndexVyxGSLAAHc", ptr @"$s10BufferView0aB5IndexVHn", ptr @__swift_reflection_version], section "llvm.metadata"
@llvm.compiler.used = appending global [5 x ptr] [ptr @"$s10BufferView0aB5IndexVyxGSHAASQWb", ptr @"$s10BufferView0aB5IndexVyxGSxAASLWb", ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_SLWT", ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumericPWT", ptr @"$s10BufferView0aB5IndexVyxGSLAASQWb"], section "llvm.metadata"

@"$s10BufferView0aB5IndexV9isAlignedSbvpMV" = alias { i32 }, ptr @"$s10BufferView0aB5IndexV9_rawValueSVvpMV"
@"$s10BufferView0aB5IndexV9hashValueSivpMV" = alias { i32 }, ptr @"$s10BufferView0aB5IndexV9_rawValueSVvpMV"

define swiftcc ptr @"$s10BufferView0aB5IndexV9_rawValueSVvg"(ptr %0, ptr %Element) #0 {
entry:
  ret ptr %0
}

define swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %0, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self = alloca %T10BufferView0aB5IndexV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 8, i1 false)
  %rawValue.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %rawValue.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %self)
  store ptr %0, ptr %rawValue.debug, align 8
  %self._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %self, i32 0, i32 0
  %self._rawValue._rawValue = getelementptr inbounds %TSV, ptr %self._rawValue, i32 0, i32 0
  store ptr %0, ptr %self._rawValue._rawValue, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %self)
  ret ptr %0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

define swiftcc i1 @"$s10BufferView0aB5IndexV9isAlignedSbvg"(ptr %0, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  %1 = alloca %TSVSg, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %self.debug, align 8
  %2 = ptrtoint ptr %0 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr %1)
  store i64 %2, ptr %1, align 8
  %3 = load i64, ptr %1, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry
  %._rawValue = getelementptr inbounds %TSV, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %._rawValue, align 8
  %7 = ptrtoint ptr %6 to i64
  br label %9

8:                                                ; preds = %entry
  br label %9

9:                                                ; preds = %5, %8
  %10 = phi i64 [ 0, %8 ], [ %7, %5 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %1)
  %11 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %11, align 8, !invariant.load !17, !dereferenceable !18
  %12 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %12, align 8, !invariant.load !17
  %13 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %13, 255
  %14 = add i64 %flags.alignmentMask, 1
  %15 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %14, i64 1)
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = extractvalue { i64, i1 } %15, 1
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 false)
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = and i64 %10, %16
  %21 = icmp eq i64 %20, 0
  ret i1 %21

22:                                               ; preds = %9
  call void @llvm.trap()
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #5

define linkonce_odr hidden swiftcc i1 @"$s10BufferView0aB5IndexVyxGSQAASQ2eeoiySbx_xtFZTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr swiftself %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %3 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %Self, ptr undef) #7
  %4 = call swiftcc i1 @"$sSxsE2eeoiySbx_xtFZ"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %3, ptr swiftself %2) #14
  ret i1 %4
}

define swiftcc void @"$s10BufferView0aB5IndexV4hash4intoys6HasherVz_tF"(ptr nocapture dereferenceable(72) %0, ptr %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %hasher.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %hasher.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  %2 = alloca %TSV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %hasher.debug, align 8
  store ptr %1, ptr %self.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %2)
  %._rawValue = getelementptr inbounds %TSV, ptr %2, i32 0, i32 0
  store ptr %1, ptr %._rawValue, align 8
  call swiftcc void @"$ss6HasherV7combineyyxSHRzlF"(ptr noalias nocapture %2, ptr @"$sSVN", ptr @"$sSVSHsWP", ptr nocapture swiftself dereferenceable(72) %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr %2)
  ret void
}

declare swiftcc void @"$ss6HasherV7combineyyxSHRzlF"(ptr noalias nocapture, ptr, ptr, ptr nocapture swiftself dereferenceable(72)) #0

define swiftcc i64 @"$s10BufferView0aB5IndexV9hashValueSivg"(ptr %0, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  %1 = alloca %T10BufferView0aB5IndexV, align 8
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %self.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %1)
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  store ptr %0, ptr %._rawValue._rawValue, align 8
  %2 = call swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 0, ptr %Element) #15
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSHAAMc", ptr %3, ptr undef) #7
  %5 = call swiftcc i64 @"$ss10_hashValue3forSix_tSHRzlF"(ptr noalias nocapture %1, ptr %3, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %1)
  ret i64 %5
}

declare swiftcc i64 @"$ss10_hashValue3forSix_tSHRzlF"(ptr noalias nocapture, ptr, ptr) #0

; Function Attrs: noinline nounwind readnone
define swiftcc %swift.metadata_response @"$s10BufferView0aB5IndexVMa"(i64 %0, ptr %1) #6 {
entry:
  %2 = call swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr undef, ptr undef, ptr @"$s10BufferView0aB5IndexVMn") #15
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = insertvalue %swift.metadata_response undef, ptr %3, 0
  %6 = insertvalue %swift.metadata_response %5, i64 %4, 1
  ret %swift.metadata_response %6
}

; Function Attrs: nounwind readonly
declare ptr @swift_getWitnessTable(ptr, ptr, ptr) #7

define linkonce_odr hidden swiftcc i64 @"$s10BufferView0aB5IndexVyxGSHAASH9hashValueSivgTW"(ptr noalias nocapture swiftself dereferenceable(8) %0, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %1 = load ptr, ptr %._rawValue._rawValue, align 8
  %2 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %2, align 8, !invariant.load !17
  %3 = call swiftcc i64 @"$s10BufferView0aB5IndexV9hashValueSivg"(ptr %1, ptr %"\CF\84_0_0") #14
  ret i64 %3
}

define linkonce_odr hidden swiftcc void @"$s10BufferView0aB5IndexVyxGSHAASH4hash4intoys6HasherVz_tFTW"(ptr nocapture dereferenceable(72) %0, ptr noalias nocapture swiftself dereferenceable(8) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %2 = load ptr, ptr %._rawValue._rawValue, align 8
  %3 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %3, align 8, !invariant.load !17
  call swiftcc void @"$s10BufferView0aB5IndexV4hash4intoys6HasherVz_tF"(ptr nocapture dereferenceable(72) %0, ptr %2, ptr %"\CF\84_0_0") #14
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$s10BufferView0aB5IndexVyxGSHAASH13_rawHashValue4seedS2i_tFTW"(i64 %0, ptr noalias nocapture swiftself dereferenceable(8) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %2 = call swiftcc i64 @"$sSHsE13_rawHashValue4seedS2i_tF"(i64 %0, ptr %Self, ptr %SelfWitnessTable, ptr noalias nocapture swiftself %1) #14
  ret i64 %2
}

define swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr %0, ptr %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %other.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %other.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  %bytes.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %bytes.debug, i8 0, i64 8, i1 false)
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %q.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %q.debug, i8 0, i64 8, i1 false)
  %r.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %r.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %other.debug, align 8
  store ptr %1, ptr %self.debug, align 8
  %6 = ptrtoint ptr %0 to i64
  %7 = ptrtoint ptr %1 to i64
  %8 = sub i64 %6, %7
  %9 = icmp eq i64 %8, -9223372036854775808
  br i1 %9, label %10, label %11

10:                                               ; preds = %entry
  br label %12

11:                                               ; preds = %entry
  br label %12

12:                                               ; preds = %10, %11
  %13 = phi i1 [ false, %11 ], [ false, %10 ]
  %14 = call i1 @llvm.expect.i1(i1 %13, i1 false)
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Division results in an overflow" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14144, i32 1)
  unreachable

16:                                               ; preds = %12
  %17 = sdiv i64 %8, 1
  store i64 %17, ptr %bytes.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %2)
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._value = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  store i64 %17, ptr %._value, align 8
  %18 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %18, align 8, !invariant.load !17, !dereferenceable !18
  %19 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %19, align 8, !invariant.load !17
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._value2 = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  store i64 %stride, ptr %._value2, align 8
  %20 = call ptr @"$sS2iSzsWl"() #15
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %2, ptr noalias nocapture %3, ptr noalias nocapture %5, ptr @"$sSiN", ptr %20, ptr noalias nocapture swiftself %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  %._value3 = getelementptr inbounds %TSi, ptr %2, i32 0, i32 0
  %21 = load i64, ptr %._value3, align 8
  %._value4 = getelementptr inbounds %TSi, ptr %3, i32 0, i32 0
  %22 = load i64, ptr %._value4, align 8
  store i64 %21, ptr %q.debug, align 8
  store i64 %22, ptr %r.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr %2)
  call void asm sideeffect "nop", ""()
  %23 = icmp eq i64 %22, 0
  %24 = call i1 @llvm.expect.i1(i1 %23, i1 true)
  br i1 %24, label %29, label %25

25:                                               ; preds = %16
  %26 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %27 = extractvalue { i64, ptr } %26, 0
  %28 = extractvalue { i64, ptr } %26, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %27, ptr %28, i64 ptrtoint (ptr @".str.32.BufferView/BufferViewIndex.swift" to i64), i64 32, i8 2, i64 28, i32 1)
  unreachable

29:                                               ; preds = %16
  call void asm sideeffect "nop", ""()
  ret i64 %21
}

declare swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSzsWl"() #6 {
entry:
  %0 = load ptr, ptr @"$sS2iSzsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSzsMc", ptr @"$sSiN", ptr undef) #7
  store atomic ptr %2, ptr @"$sS2iSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

define swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %0, ptr %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %n.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %n.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store i64 %0, ptr %n.debug, align 8
  store ptr %1, ptr %self.debug, align 8
  %2 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %2, align 8, !invariant.load !17, !dereferenceable !18
  %3 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %3, align 8, !invariant.load !17
  %4 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %0, i64 %stride)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = getelementptr inbounds i8, ptr %1, i64 %5
  %8 = call swiftcc ptr @"$s10BufferView0aB5IndexV8rawValueACyxGSV_tcfC"(ptr %7, ptr %Element)
  ret ptr %8
}

define linkonce_odr hidden swiftcc void @"$s10BufferView0aB5IndexVyxGSxAASx8distance2to6StrideQzx_tFTW"(ptr noalias nocapture sret(%TSi) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(8) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %2, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %5 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %5, align 8, !invariant.load !17
  %6 = call swiftcc i64 @"$s10BufferView0aB5IndexV8distance2toSiACyxG_tF"(ptr %3, ptr %4, ptr %"\CF\84_0_0") #14
  %._value = getelementptr inbounds %TSi, ptr %0, i32 0, i32 0
  store i64 %6, ptr %._value, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$s10BufferView0aB5IndexVyxGSxAASx8advanced2byx6StrideQz_tFTW"(ptr noalias nocapture sret(%T10BufferView0aB5IndexV) %0, ptr noalias nocapture dereferenceable(8) %1, ptr noalias nocapture swiftself dereferenceable(8) %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._value = getelementptr inbounds %TSi, ptr %1, i32 0, i32 0
  %3 = load i64, ptr %._value, align 8
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %2, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue._rawValue, align 8
  %5 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %5, align 8, !invariant.load !17
  %6 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %3, ptr %4, ptr %"\CF\84_0_0") #14
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  store ptr %6, ptr %._rawValue1._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc { i64, i8 } @"$s10BufferView0aB5IndexVyxGSxAASx5_step5after4from2bySiSg5index_x5valuetAiJ_xAKt_x6StrideQztFZTW"(ptr noalias nocapture %0, i64 %1, i8 %2, ptr noalias nocapture dereferenceable(8) %3, ptr noalias nocapture dereferenceable(8) %4, ptr noalias nocapture dereferenceable(8) %5, ptr swiftself %6, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %7 = trunc i8 %2 to i1
  %8 = zext i1 %7 to i8
  %9 = call swiftcc { i64, i8 } @"$sSxsE5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZ"(ptr noalias nocapture %0, i64 %1, i8 %8, ptr noalias nocapture %3, ptr noalias nocapture %4, ptr noalias nocapture %5, ptr %Self, ptr %SelfWitnessTable, ptr swiftself %6) #14
  %10 = extractvalue { i64, i8 } %9, 0
  %11 = extractvalue { i64, i8 } %9, 1
  %12 = trunc i8 %11 to i1
  %13 = zext i1 %12 to i8
  %14 = insertvalue { i64, i8 } undef, i64 %10, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

define swiftcc i1 @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ"(ptr %0, ptr %1, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %lhs.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %lhs.debug, i8 0, i64 8, i1 false)
  %rhs.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %rhs.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %lhs.debug, align 8
  store ptr %1, ptr %rhs.debug, align 8
  %2 = icmp ult ptr %0, %1
  ret i1 %2
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferView0aB5IndexVyxGSLAASL1loiySbx_xtFZTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr swiftself %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %0, i32 0, i32 0
  %._rawValue._rawValue = getelementptr inbounds %TSV, ptr %._rawValue, i32 0, i32 0
  %3 = load ptr, ptr %._rawValue._rawValue, align 8
  %._rawValue1 = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %1, i32 0, i32 0
  %._rawValue1._rawValue = getelementptr inbounds %TSV, ptr %._rawValue1, i32 0, i32 0
  %4 = load ptr, ptr %._rawValue1._rawValue, align 8
  %5 = getelementptr inbounds ptr, ptr %Self, i64 2
  %"\CF\84_0_0" = load ptr, ptr %5, align 8, !invariant.load !17
  %6 = call swiftcc i1 @"$s10BufferView0aB5IndexV1loiySbACyxG_AEtFZ"(ptr %3, ptr %4, ptr %"\CF\84_0_0") #14
  ret i1 %6
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferView0aB5IndexVyxGSLAASL2leoiySbx_xtFZTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr swiftself %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %3 = call swiftcc i1 @"$sSLsE2leoiySbx_xtFZ"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr swiftself %2) #14
  ret i1 %3
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferView0aB5IndexVyxGSLAASL2geoiySbx_xtFZTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr swiftself %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %3 = call swiftcc i1 @"$sSLsE2geoiySbx_xtFZ"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr swiftself %2) #14
  ret i1 %3
}

define linkonce_odr hidden swiftcc i1 @"$s10BufferView0aB5IndexVyxGSLAASL1goiySbx_xtFZTW"(ptr noalias nocapture dereferenceable(8) %0, ptr noalias nocapture dereferenceable(8) %1, ptr swiftself %2, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  %3 = call swiftcc i1 @"$sSLsE1goiySbx_xtFZ"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %SelfWitnessTable, ptr swiftself %2) #14
  ret i1 %3
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #12
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64, i64, i8, i64, ptr, i64, i64, i8, i64, i32) #8

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView0aB5IndexVyxGSHAASQWb"(ptr %"BufferViewIndex<Element>", ptr %"BufferViewIndex<Element>1", ptr %"BufferViewIndex<Element>.Hashable") #9 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #7
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView0aB5IndexVyxGSxAASLWb"(ptr %"BufferViewIndex<Element>", ptr %"BufferViewIndex<Element>1", ptr %"BufferViewIndex<Element>.Strideable") #9 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSLAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #7
  ret ptr %0
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_SLWT"(ptr %"BufferViewIndex<Element>.Stride", ptr %"BufferViewIndex<Element>", ptr %"BufferViewIndex<Element>.Strideable") #9 {
entry:
  ret ptr @"$sSiSLsWP"
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView0aB5IndexVyxGSxAA6StrideSx_s13SignedNumericPWT"(ptr %"BufferViewIndex<Element>.Stride", ptr %"BufferViewIndex<Element>", ptr %"BufferViewIndex<Element>.Strideable") #9 {
entry:
  ret ptr @"$sSis13SignedNumericsWP"
}

; Function Attrs: nounwind
define internal swiftcc ptr @"$s10BufferView0aB5IndexVyxGSLAASQWb"(ptr %"BufferViewIndex<Element>", ptr %"BufferViewIndex<Element>1", ptr %"BufferViewIndex<Element>.Comparable") #9 {
entry:
  %0 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSQAAMc", ptr %"BufferViewIndex<Element>", ptr undef) #7
  ret ptr %0
}

; Function Attrs: nounwind
define internal ptr @"$s10BufferView0aB5IndexVMi"(ptr %0, ptr %1, ptr %2) #9 {
entry:
  %Element1 = alloca ptr, align 8
  %Element = load ptr, ptr %1, align 8
  store ptr %Element, ptr %Element1, align 8
  %3 = call ptr @swift_allocateGenericValueMetadata(ptr %0, ptr %1, ptr %2, i64 16) #12
  ret ptr %3
}

; Function Attrs: nounwind
define linkonce_odr hidden ptr @__swift_memcpy8_8(ptr %0, ptr %1, ptr %2) #9 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 8, i1 false)
  ret ptr %0
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(ptr %0, ptr %1) #9 {
entry:
  ret void
}

; Function Attrs: nounwind readonly
define internal i32 @"$s10BufferView0aB5IndexVwet"(ptr noalias %value, i32 %numEmptyCases, ptr %"BufferViewIndex<Element>") #11 {
entry:
  %0 = icmp eq i32 0, %numEmptyCases
  br i1 %0, label %34, label %1

1:                                                ; preds = %entry
  %2 = icmp ugt i32 %numEmptyCases, 1
  br i1 %2, label %3, label %30

3:                                                ; preds = %1
  %4 = sub i32 %numEmptyCases, 1
  %5 = getelementptr inbounds i8, ptr %value, i32 8
  br i1 false, label %6, label %7

6:                                                ; preds = %3
  br label %19

7:                                                ; preds = %3
  br i1 true, label %8, label %11

8:                                                ; preds = %7
  %9 = load i8, ptr %5, align 1
  %10 = zext i8 %9 to i32
  br label %19

11:                                               ; preds = %7
  br i1 false, label %12, label %15

12:                                               ; preds = %11
  %13 = load i16, ptr %5, align 1
  %14 = zext i16 %13 to i32
  br label %19

15:                                               ; preds = %11
  br i1 false, label %16, label %18

16:                                               ; preds = %15
  %17 = load i32, ptr %5, align 1
  br label %19

18:                                               ; preds = %15
  unreachable

19:                                               ; preds = %16, %12, %8, %6
  %20 = phi i32 [ 0, %6 ], [ %10, %8 ], [ %14, %12 ], [ %17, %16 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = sub i32 %20, 1
  %24 = shl i32 %23, 64
  %25 = select i1 true, i32 0, i32 %24
  %26 = load i64, ptr %value, align 1
  %27 = trunc i64 %26 to i32
  %28 = or i32 %27, %25
  %29 = add i32 1, %28
  br label %35

30:                                               ; preds = %19, %1
  %value._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value, i32 0, i32 0
  %value._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value._rawValue, i32 0, i32 0
  %31 = load i64, ptr %value._rawValue._rawValue, align 8
  %32 = icmp ne i64 %31, 0
  %33 = sext i1 %32 to i32
  br label %35

34:                                               ; preds = %entry
  br label %35

35:                                               ; preds = %34, %30, %22
  %36 = phi i32 [ %33, %30 ], [ %29, %22 ], [ -1, %34 ]
  %37 = add i32 %36, 1
  ret i32 %37
}

; Function Attrs: nounwind
define internal void @"$s10BufferView0aB5IndexVwst"(ptr noalias %value, i32 %whichCase, i32 %numEmptyCases, ptr %"BufferViewIndex<Element>") #9 {
entry:
  %0 = getelementptr inbounds i8, ptr %value, i32 8
  %1 = icmp ugt i32 %numEmptyCases, 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %entry
  %3 = sub i32 %numEmptyCases, 1
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i32 [ 0, %entry ], [ 1, %2 ]
  %6 = icmp ule i32 %whichCase, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  br label %20

10:                                               ; preds = %7
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8 0, ptr %0, align 8
  br label %20

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i16 0, ptr %0, align 8
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq i32 %5, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i32 0, ptr %0, align 8
  br label %20

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %18, %15, %12, %9
  %21 = icmp eq i32 %whichCase, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  %23 = sub i32 %whichCase, 1
  %value._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %value, i32 0, i32 0
  %value._rawValue._rawValue = getelementptr inbounds %TSV, ptr %value._rawValue, i32 0, i32 0
  store i64 0, ptr %value._rawValue._rawValue, align 8
  br label %50

24:                                               ; preds = %4
  %25 = sub i32 %whichCase, 1
  %26 = sub i32 %25, 1
  br i1 true, label %31, label %27

27:                                               ; preds = %24
  %28 = lshr i32 %26, 64
  %29 = add i32 1, %28
  %30 = and i32 poison, %26
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ 1, %24 ], [ %29, %27 ]
  %33 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %34 = zext i32 %33 to i64
  store i64 %34, ptr %value, align 8
  %35 = icmp eq i32 %5, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %49

37:                                               ; preds = %31
  %38 = icmp eq i32 %5, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = trunc i32 %32 to i8
  store i8 %40, ptr %0, align 8
  br label %49

41:                                               ; preds = %37
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = trunc i32 %32 to i16
  store i16 %44, ptr %0, align 8
  br label %49

45:                                               ; preds = %41
  %46 = icmp eq i32 %5, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  store i32 %32, ptr %0, align 8
  br label %49

48:                                               ; preds = %45
  unreachable

49:                                               ; preds = %47, %43, %39, %36
  br label %50

50:                                               ; preds = %49, %22, %20
  ret void
}

; Function Attrs: nounwind
declare ptr @swift_allocateGenericValueMetadata(ptr, ptr, ptr, i64) #12

declare swiftcc i1 @"$sSLsE1goiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc i1 @"$sSLsE2geoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc i1 @"$sSLsE2leoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc { i64, i8 } @"$sSxsE5_step5after4from2bySiSg5index_x5valuetAeF_xAGt_x6StrideQztFZ"(ptr noalias nocapture, i64, i8, ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

declare swiftcc i64 @"$sSHsE13_rawHashValue4seedS2i_tF"(i64, ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc i1 @"$sSxsE2eeoiySbx_xtFZ"(ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr swiftself) #0

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #12

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr %2, ptr %3, ptr %4) #13 {
entry:
  %generic.arguments = alloca [3 x ptr], align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %generic.arguments)
  %5 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 0
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 1
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 2
  store ptr %3, ptr %7, align 8
  %8 = call swiftcc %swift.metadata_response @swift_getGenericMetadata(i64 %0, ptr %generic.arguments, ptr %4) #7
  ret %swift.metadata_response %8
}

; Function Attrs: nounwind readonly
declare swiftcc %swift.metadata_response @swift_getGenericMetadata(i64, ptr, ptr) #7

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #6 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #7 = { nounwind readonly }
attributes #8 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #9 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #10 = { argmemonly nocallback nofree nounwind willreturn }
attributes #11 = { nounwind readonly "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #12 = { nounwind }
attributes #13 = { noinline nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #14 = { noinline }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
!17 = !{}
!18 = !{i64 96}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.protocol = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%swift.protocol_requirement = type { i32, i32 }
%swift.method_descriptor = type { i32, i32 }
%swift.vwtable = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32 }
%swift.type_metadata_record = type { i32 }
%T10BufferView0aB8IteratorV = type <{ %TSV, %TSV }>
%TSV = type <{ ptr }>
%swift.opaque = type opaque
%swift.metadata_response = type { ptr, i64 }

@"symbolic x" = linkonce_odr hidden constant <{ [1 x i8], i8 }> <{ [1 x i8] c"x", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic _____ 10BufferView0aB8IteratorV" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, i8 }>, ptr @"symbolic _____ 10BufferView0aB8IteratorV", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic $sSt" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSt", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@0 = private constant [8 x i8] c"Element\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView0aB8IteratorVyxGStAAMA" = internal constant { i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAAMA" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic $sSt" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMA", i32 0, i32 1) to i64)) to i32), i32 1, i32 8, i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMA", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic x" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMA", i32 0, i32 5) to i64)) to i32) }, section "__TEXT,__swift5_assocty, regular", no_sanitize_address, align 4
@"$sStMp" = external global %swift.protocol, align 4
@"got.$sStMp" = private unnamed_addr constant ptr @"$sStMp"
@"$s7ElementStTl" = external global %swift.protocol_requirement, align 4
@"got.$s7ElementStTl" = private unnamed_addr constant ptr @"$s7ElementStTl"
@"$sSt4next7ElementQzSgyFTq" = external global %swift.method_descriptor, align 4
@"got.$sSt4next7ElementQzSgyFTq" = private unnamed_addr constant ptr @"$sSt4next7ElementQzSgyFTq"
@"$s10BufferView0aB8IteratorVyxGStAAMcMK" = internal global [16 x ptr] zeroinitializer
@"$s10BufferView0aB8IteratorVyxGStAAMc" = constant { i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 } { i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sStMp" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAAMc" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 1) to i64)) to i32), i32 0, i32 196608, i32 2, i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s7ElementStTl" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 5) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr getelementptr inbounds (i8, ptr @"symbolic x", i64 1) to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 6) to i64)) to i32), i32 add (i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$sSt4next7ElementQzSgyFTq" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 7) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAASt4next7ElementQzSgyFTW" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 8) to i64)) to i32), i16 0, i16 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAAMcMK" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", i32 0, i32 12) to i64)) to i32) }, section "__TEXT,__const", no_sanitize_address, align 4
@"$s10BufferView0aB8IteratorVWV" = internal constant %swift.vwtable { ptr @__swift_memcpy16_8, ptr @__swift_noop_void_return, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @"$s10BufferView0aB8IteratorVwet", ptr @"$s10BufferView0aB8IteratorVwst", i64 16, i64 16, i32 7, i32 1 }, align 8
@1 = internal constant <{ i32, i32 }> <{ i32 0, i32 8 }>, align 8
@.str.10.BufferView = private constant [11 x i8] c"BufferView\00"
@"$s10BufferViewMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32 }>, ptr @"$s10BufferViewMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__constg_swiftt", align 4
@.str.18.BufferViewIterator = private constant [19 x i8] c"BufferViewIterator\00"
@"$s10BufferView0aB8IteratorVMI" = internal global [16 x ptr] zeroinitializer, align 8
@"$s10BufferView0aB8IteratorVMn" = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }> <{ i32 209, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewMXM" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.18.BufferViewIterator to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMa" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMF" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 4) to i64)) to i32), i32 2, i32 3, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMI" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 7) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMP" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8 }>, ptr @"$s10BufferView0aB8IteratorVMn", i32 0, i32 8) to i64)) to i32), i16 1, i16 0, i16 1, i16 0, i8 -128, i8 0, i8 0, i8 0 }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferView0aB8IteratorVMP" = internal constant <{ i32, i32, i32, i32, i32, i16, i16 }> <{ i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMi" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMP" to i64)) to i32), i32 0, i32 1073741825, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVWV" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView0aB8IteratorVMP", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i16, i16 }>, ptr @"$s10BufferView0aB8IteratorVMP", i32 0, i32 4) to i64)) to i32), i16 1, i16 1 }>, align 8
@"symbolic SV" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"SV", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@2 = private constant [11 x i8] c"curPointer\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@3 = private constant [11 x i8] c"endPointer\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView0aB8IteratorVMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMF" to i64)) to i32), i32 0, i16 0, i16 12, i32 2, i32 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic SV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @2 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVMF", i32 0, i32 7) to i64)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic SV" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVMF", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @3 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView0aB8IteratorVMF", i32 0, i32 10) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular", no_sanitize_address, align 4
@".str.28.Swift/UnsafeRawPointer.swift" = private unnamed_addr constant [29 x i8] c"Swift/UnsafeRawPointer.swift\00"
@.str.0. = private unnamed_addr constant [1 x i8] zeroinitializer
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@".str.31.Allocation byte count too large" = private unnamed_addr constant [32 x i8] c"Allocation byte count too large\00"
@".str.31.Swift/TemporaryAllocation.swift" = private unnamed_addr constant [32 x i8] c"Swift/TemporaryAllocation.swift\00"
@".str.41.Alignment value must be greater than zero" = private unnamed_addr constant [42 x i8] c"Alignment value must be greater than zero\00"
@".str.38.Alignment value must be a power of two" = private unnamed_addr constant [39 x i8] c"Alignment value must be a power of two\00"
@".str.35.Negative value is not representable" = private unnamed_addr constant [36 x i8] c"Negative value is not representable\00"
@".str.20.Swift/Integers.swift" = private unnamed_addr constant [21 x i8] c"Swift/Integers.swift\00"
@"$s10BufferView0aB8IteratorVyxGStAAHc" = private constant i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAAMc" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVyxGStAAHc" to i64)) to i32), section "__TEXT, __swift5_proto, regular", no_sanitize_address, align 4
@"$s10BufferView0aB8IteratorVHn" = private constant %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVHn" to i64)) to i32) }, section "__TEXT, __swift5_types, regular", no_sanitize_address, align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [11 x ptr] [ptr @"$s10BufferView0aB8IteratorV4nextxSgyF", ptr @"$s10BufferView0aB8IteratorVyxGStAAMA", ptr @"$s10BufferView0aB8IteratorVyxGStAAMc", ptr @"$s10BufferView0aB8IteratorVMn", ptr @"$s10BufferView0aB8IteratorVMn", ptr @"$s10BufferView0aB8IteratorVMa", ptr @"$s10BufferView0aB8IteratorVMF", ptr @"$s10BufferView0aB8IteratorVMa", ptr @"$s10BufferView0aB8IteratorVyxGStAAHc", ptr @"$s10BufferView0aB8IteratorVHn", ptr @__swift_reflection_version], section "llvm.metadata"

define hidden swiftcc ptr @"$s10BufferView0aB8IteratorV10curPointerSVvg"(ptr %0, ptr %1, ptr %Element) #0 {
entry:
  ret ptr %0
}

define hidden swiftcc void @"$s10BufferView0aB8IteratorV10curPointerSVvs"(ptr %0, ptr %"BufferViewIterator<Element>", ptr nocapture swiftself dereferenceable(16) %1) #0 {
entry:
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 0
  %.curPointer._rawValue = getelementptr inbounds %TSV, ptr %.curPointer, i32 0, i32 0
  store ptr %0, ptr %.curPointer._rawValue, align 8
  ret void
}

; Function Attrs: noinline
define hidden swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV10curPointerSVvM"(ptr noalias dereferenceable(32) %0, ptr %"BufferViewIterator<Element>", ptr nocapture swiftself dereferenceable(16) %1) #1 {
entry:
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 0
  %2 = insertvalue { ptr, ptr } undef, ptr @"$s10BufferView0aB8IteratorV10curPointerSVvM.resume.0", 0
  %3 = insertvalue { ptr, ptr } %2, ptr %.curPointer, 1
  ret { ptr, ptr } %3
}

define internal swiftcc void @"$s10BufferView0aB8IteratorV10curPointerSVvM.resume.0"(ptr noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  ret void
}

define hidden swiftcc ptr @"$s10BufferView0aB8IteratorV10endPointerSVvg"(ptr %0, ptr %1, ptr %Element) #0 {
entry:
  ret ptr %1
}

define hidden swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV12startPointer03endE09dependsOnACyxGSV_SVqd__tclufC"(ptr %0, ptr %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView0aB8IteratorV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %startPointer.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %startPointer.debug, i8 0, i64 8, i1 false)
  %endPointer.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %endPointer.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %startPointer.debug, align 8
  store ptr %1, ptr %endPointer.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  %self.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %self, i32 0, i32 0
  %self.curPointer._rawValue = getelementptr inbounds %TSV, ptr %self.curPointer, i32 0, i32 0
  store ptr %0, ptr %self.curPointer._rawValue, align 8
  %self.endPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %self, i32 0, i32 1
  %self.endPointer._rawValue = getelementptr inbounds %TSV, ptr %self.endPointer, i32 0, i32 0
  store ptr %1, ptr %self.endPointer._rawValue, align 8
  %3 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %5 = load ptr, ptr %4, align 8, !invariant.load !17
  call void %5(ptr noalias %2, ptr %Owner) #8
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  %6 = insertvalue { ptr, ptr } undef, ptr %0, 0
  %7 = insertvalue { ptr, ptr } %6, ptr %1, 1
  ret { ptr, ptr } %7
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

define hidden swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV4from2to9dependsOnACyxGAA0aB5IndexVyxG_AJqd__tclufC"(ptr %0, ptr %1, ptr noalias nocapture %2, ptr %Element, ptr %Owner) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %Owner2 = alloca ptr, align 8
  %self = alloca %T10BufferView0aB8IteratorV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %start.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %start.debug, i8 0, i64 8, i1 false)
  %end.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %end.debug, i8 0, i64 8, i1 false)
  %owner.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %owner.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %Owner, ptr %Owner2, align 8
  %3 = getelementptr inbounds ptr, ptr %Owner, i64 -1
  %Owner.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds %swift.vwtable, ptr %Owner.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %4, align 8, !invariant.load !17
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %start.debug, align 8
  store ptr %1, ptr %end.debug, align 8
  store ptr %2, ptr %owner.debug, align 8
  %6 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 2
  %7 = load ptr, ptr %6, align 8, !invariant.load !17
  %8 = call ptr %7(ptr noalias %5, ptr noalias %2, ptr %Owner) #8
  %9 = call swiftcc { ptr, ptr } @"$s10BufferView0aB8IteratorV12startPointer03endE09dependsOnACyxGSV_SVqd__tclufC"(ptr %0, ptr %1, ptr noalias nocapture %5, ptr %Element, ptr %Owner)
  %10 = extractvalue { ptr, ptr } %9, 0
  %11 = extractvalue { ptr, ptr } %9, 1
  %self.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %self, i32 0, i32 0
  %self.curPointer._rawValue = getelementptr inbounds %TSV, ptr %self.curPointer, i32 0, i32 0
  store ptr %10, ptr %self.curPointer._rawValue, align 8
  %self.endPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %self, i32 0, i32 1
  %self.endPointer._rawValue = getelementptr inbounds %TSV, ptr %self.endPointer, i32 0, i32 0
  store ptr %11, ptr %self.endPointer._rawValue, align 8
  %12 = getelementptr inbounds ptr, ptr %Owner.valueWitnesses, i32 1
  %13 = load ptr, ptr %12, align 8, !invariant.load !17
  call void %13(ptr noalias %2, ptr %Owner) #8
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %5)
  %14 = insertvalue { ptr, ptr } undef, ptr %10, 0
  %15 = insertvalue { ptr, ptr } %14, ptr %11, 1
  ret { ptr, ptr } %15
}

define swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %"BufferViewIterator<Element>", ptr nocapture swiftself dereferenceable(16) %1) #0 {
entry:
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  %Element1 = alloca ptr, align 8
  store ptr %1, ptr %self.debug, align 8
  %2 = getelementptr inbounds ptr, ptr %"BufferViewIterator<Element>", i64 2
  %Element = load ptr, ptr %2, align 8, !invariant.load !17
  store ptr %Element, ptr %Element1, align 8
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 0
  %.curPointer._rawValue = getelementptr inbounds %TSV, ptr %.curPointer, i32 0, i32 0
  %3 = load ptr, ptr %.curPointer._rawValue, align 8
  %.endPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 1
  %.endPointer._rawValue = getelementptr inbounds %TSV, ptr %.endPointer, i32 0, i32 0
  %4 = load ptr, ptr %.endPointer._rawValue, align 8
  %5 = icmp ult ptr %3, %4
  br i1 %5, label %6, label %20

6:                                                ; preds = %entry
  %7 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses2 = load ptr, ptr %7, align 8, !invariant.load !17, !dereferenceable !18
  %8 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses2, i32 0, i32 10
  %flags = load i32, ptr %8, align 8, !invariant.load !17
  %9 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %9, 0
  br i1 %flags.isTriviallyDestroyable, label %10, label %15

10:                                               ; preds = %6
  %.curPointer4 = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 0
  %.curPointer4._rawValue = getelementptr inbounds %TSV, ptr %.curPointer4, i32 0, i32 0
  %11 = load ptr, ptr %.curPointer4._rawValue, align 8
  %12 = call swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %12, ptr %Element, ptr %11, ptr %Element)
  %13 = getelementptr inbounds ptr, ptr %Element.valueWitnesses2, i32 7
  %14 = load ptr, ptr %13, align 8, !invariant.load !17
  call void %14(ptr noalias %0, i32 0, i32 1, ptr %Element) #8
  call swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF6$deferL_yylF"(ptr nocapture dereferenceable(16) %1, ptr %Element)
  br label %24

15:                                               ; preds = %6
  %.curPointer3 = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %1, i32 0, i32 0
  %.curPointer3._rawValue = getelementptr inbounds %TSV, ptr %.curPointer3, i32 0, i32 0
  %16 = load ptr, ptr %.curPointer3._rawValue, align 8
  %17 = call swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %Element)
  call swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %17, ptr %Element, ptr %16, ptr %Element)
  %18 = getelementptr inbounds ptr, ptr %Element.valueWitnesses2, i32 7
  %19 = load ptr, ptr %18, align 8, !invariant.load !17
  call void %19(ptr noalias %0, i32 0, i32 1, ptr %Element) #8
  call swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF6$deferL_yylF"(ptr nocapture dereferenceable(16) %1, ptr %Element)
  br label %24

20:                                               ; preds = %entry
  %21 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %21, align 8, !invariant.load !17, !dereferenceable !18
  %22 = getelementptr inbounds ptr, ptr %Element.valueWitnesses, i32 7
  %23 = load ptr, ptr %22, align 8, !invariant.load !17
  call void %23(ptr noalias %0, i32 1, i32 1, ptr %Element) #8
  br label %24

24:                                               ; preds = %10, %15, %20
  ret void
}

define internal swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF6$deferL_yylF"(ptr nocapture dereferenceable(16) %0, ptr %Element) #0 {
entry:
  %Element1 = alloca ptr, align 8
  %self.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 8, i1 false)
  store ptr %Element, ptr %Element1, align 8
  store ptr %0, ptr %self.debug, align 8
  %.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 0
  %.curPointer._rawValue = getelementptr inbounds %TSV, ptr %.curPointer, i32 0, i32 0
  %1 = load ptr, ptr %.curPointer._rawValue, align 8
  %2 = getelementptr inbounds ptr, ptr %Element, i64 -1
  %Element.valueWitnesses = load ptr, ptr %2, align 8, !invariant.load !17, !dereferenceable !18
  %3 = getelementptr inbounds %swift.vwtable, ptr %Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %3, align 8, !invariant.load !17
  %4 = getelementptr inbounds i8, ptr %1, i64 %stride
  %.curPointer2 = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %0, i32 0, i32 0
  %.curPointer2._rawValue = getelementptr inbounds %TSV, ptr %.curPointer2, i32 0, i32 0
  store ptr %4, ptr %.curPointer2._rawValue, align 8
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define linkonce_odr hidden swiftcc void @"$sSV13loadUnaligned14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque) %0, i64 %1, ptr %2, ptr %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %4 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  %7 = call i1 @llvm.expect.i1(i1 %flags.isTriviallyDestroyable, i1 true)
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @.str.0. to i64), i64 0, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 465, i32 1)
  unreachable

9:                                                ; preds = %entry
  %10 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %10, 255
  %11 = add i64 %flags.alignmentMask, 1
  %12 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %12, align 8, !invariant.load !17
  %13 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 1, i64 %stride)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.is.constant.i64(i64 1)
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  br label %22

20:                                               ; preds = %17
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.31.Allocation byte count too large" to i64), i64 31, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 46, i32 1)
  unreachable

21:                                               ; preds = %9
  br label %22

22:                                               ; preds = %21, %19
  %23 = call i1 @llvm.is.constant.i64(i64 %11)
  br i1 %23, label %42, label %24

24:                                               ; preds = %22
  %25 = icmp slt i64 0, %11
  %26 = call i1 @llvm.expect.i1(i1 %25, i1 true)
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.41.Alignment value must be greater than zero" to i64), i64 41, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 67, i32 1)
  unreachable

28:                                               ; preds = %24
  %29 = icmp slt i64 0, %11
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  br label %37

31:                                               ; preds = %28
  %32 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %11, i64 1)
  %33 = extractvalue { i64, i1 } %32, 0
  %34 = extractvalue { i64, i1 } %32, 1
  %35 = and i64 %11, %33
  %36 = icmp eq i64 %35, 0
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i1 [ false, %30 ], [ %36, %31 ]
  %39 = call i1 @llvm.expect.i1(i1 %38, i1 true)
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.38.Alignment value must be a power of two" to i64), i64 38, i8 2, i64 ptrtoint (ptr @".str.31.Swift/TemporaryAllocation.swift" to i64), i64 31, i8 2, i64 68, i32 1)
  unreachable

41:                                               ; preds = %37
  br label %43

42:                                               ; preds = %22
  br label %43

43:                                               ; preds = %42, %41
  %44 = icmp slt i64 16, %11
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = icmp slt i64 1024, %stride
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  br label %54

48:                                               ; preds = %45
  %49 = call swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64 12, i64 3, i64 0)
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  br label %54

51:                                               ; preds = %48
  %52 = call zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 %stride, i64 %11)
  br label %54

53:                                               ; preds = %43
  br label %54

54:                                               ; preds = %53, %51, %50, %47
  %55 = phi i1 [ true, %47 ], [ false, %50 ], [ %52, %51 ], [ false, %53 ]
  br i1 %55, label %72, label %56

56:                                               ; preds = %54
  br i1 %44, label %58, label %57

57:                                               ; preds = %56
  br label %59

58:                                               ; preds = %56
  br label %59

59:                                               ; preds = %58, %57
  %60 = phi i64 [ 0, %57 ], [ %11, %58 ]
  %61 = sub i64 %60, 1
  %62 = call noalias ptr @swift_slowAlloc(i64 %stride, i64 %61) #8
  %63 = getelementptr inbounds i8, ptr %3, i64 %1
  %64 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %64, align 8, !invariant.load !17
  %65 = icmp slt i64 %size, 0
  %66 = call i1 @llvm.expect.i1(i1 %65, i1 false)
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  call void @llvm.memcpy.p0.p0.i64(ptr %62, ptr %63, i64 %size, i1 false)
  %68 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %69 = load ptr, ptr %68, align 8, !invariant.load !17
  %70 = call ptr %69(ptr noalias %0, ptr noalias %62, ptr %T) #8
  call void @swift_slowDealloc(ptr %62, i64 -1, i64 -1) #8
  br label %83

71:                                               ; preds = %59
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable

72:                                               ; preds = %54
  %73 = mul i64 1, %stride
  %74 = call i64 @llvm.umax.i64(i64 1, i64 %73)
  %spsave = call ptr @llvm.stacksave()
  %temp_alloc = alloca i8, i64 %74, align 16
  %75 = getelementptr inbounds i8, ptr %3, i64 %1
  %76 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %76, align 8, !invariant.load !17
  %77 = icmp slt i64 %size2, 0
  %78 = call i1 @llvm.expect.i1(i1 %77, i1 false)
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  call void @llvm.memcpy.p0.p0.i64(ptr %temp_alloc, ptr %75, i64 %size2, i1 false)
  %80 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %81 = load ptr, ptr %80, align 8, !invariant.load !17
  %82 = call ptr %81(ptr noalias %0, ptr noalias %temp_alloc, ptr %T) #8
  call void @llvm.stackrestore(ptr %spsave)
  br label %83

83:                                               ; preds = %79, %67
  ret void

84:                                               ; preds = %72
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable
}

define linkonce_odr hidden swiftcc i64 @"$sSV4load14fromByteOffset2asxSi_xmtlFfA_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

declare swiftcc void @"$sSV4load14fromByteOffset2asxSi_xmtlF"(ptr noalias nocapture sret(%swift.opaque), i64, ptr, ptr, ptr) #0

define linkonce_odr hidden swiftcc void @"$s10BufferView0aB8IteratorVyxGStAASt4next7ElementQzSgyFTW"(ptr noalias nocapture sret(%swift.opaque) %0, ptr nocapture swiftself dereferenceable(16) %1, ptr %Self, ptr %SelfWitnessTable) #0 {
entry:
  call swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %Self, ptr nocapture swiftself dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: nounwind
define internal ptr @"$s10BufferView0aB8IteratorVMi"(ptr %0, ptr %1, ptr %2) #4 {
entry:
  %Element1 = alloca ptr, align 8
  %Element = load ptr, ptr %1, align 8
  store ptr %Element, ptr %Element1, align 8
  %3 = call ptr @swift_allocateGenericValueMetadata(ptr %0, ptr %1, ptr %2, i64 16) #8
  ret ptr %3
}

; Function Attrs: nounwind
define linkonce_odr hidden ptr @__swift_memcpy16_8(ptr %0, ptr %1, ptr %2) #4 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 16, i1 false)
  ret ptr %0
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(ptr %0, ptr %1) #4 {
entry:
  ret void
}

; Function Attrs: nounwind readonly
define internal i32 @"$s10BufferView0aB8IteratorVwet"(ptr noalias %value, i32 %numEmptyCases, ptr %"BufferViewIterator<Element>") #6 {
entry:
  %0 = icmp eq i32 0, %numEmptyCases
  br i1 %0, label %34, label %1

1:                                                ; preds = %entry
  %2 = icmp ugt i32 %numEmptyCases, 1
  br i1 %2, label %3, label %30

3:                                                ; preds = %1
  %4 = sub i32 %numEmptyCases, 1
  %5 = getelementptr inbounds i8, ptr %value, i32 16
  br i1 false, label %6, label %7

6:                                                ; preds = %3
  br label %19

7:                                                ; preds = %3
  br i1 true, label %8, label %11

8:                                                ; preds = %7
  %9 = load i8, ptr %5, align 1
  %10 = zext i8 %9 to i32
  br label %19

11:                                               ; preds = %7
  br i1 false, label %12, label %15

12:                                               ; preds = %11
  %13 = load i16, ptr %5, align 1
  %14 = zext i16 %13 to i32
  br label %19

15:                                               ; preds = %11
  br i1 false, label %16, label %18

16:                                               ; preds = %15
  %17 = load i32, ptr %5, align 1
  br label %19

18:                                               ; preds = %15
  unreachable

19:                                               ; preds = %16, %12, %8, %6
  %20 = phi i32 [ 0, %6 ], [ %10, %8 ], [ %14, %12 ], [ %17, %16 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = sub i32 %20, 1
  %24 = shl i32 %23, 128
  %25 = select i1 true, i32 0, i32 %24
  %26 = load i128, ptr %value, align 1
  %27 = trunc i128 %26 to i32
  %28 = or i32 %27, %25
  %29 = add i32 1, %28
  br label %35

30:                                               ; preds = %19, %1
  %value.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %value, i32 0, i32 0
  %value.curPointer._rawValue = getelementptr inbounds %TSV, ptr %value.curPointer, i32 0, i32 0
  %31 = load i64, ptr %value.curPointer._rawValue, align 8
  %32 = icmp ne i64 %31, 0
  %33 = sext i1 %32 to i32
  br label %35

34:                                               ; preds = %entry
  br label %35

35:                                               ; preds = %34, %30, %22
  %36 = phi i32 [ %33, %30 ], [ %29, %22 ], [ -1, %34 ]
  %37 = add i32 %36, 1
  ret i32 %37
}

; Function Attrs: nounwind
define internal void @"$s10BufferView0aB8IteratorVwst"(ptr noalias %value, i32 %whichCase, i32 %numEmptyCases, ptr %"BufferViewIterator<Element>") #4 {
entry:
  %0 = getelementptr inbounds i8, ptr %value, i32 16
  %1 = icmp ugt i32 %numEmptyCases, 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %entry
  %3 = sub i32 %numEmptyCases, 1
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i32 [ 0, %entry ], [ 1, %2 ]
  %6 = icmp ule i32 %whichCase, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  br label %20

10:                                               ; preds = %7
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8 0, ptr %0, align 8
  br label %20

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i16 0, ptr %0, align 8
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq i32 %5, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i32 0, ptr %0, align 8
  br label %20

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %18, %15, %12, %9
  %21 = icmp eq i32 %whichCase, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  %23 = sub i32 %whichCase, 1
  %value.curPointer = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %value, i32 0, i32 0
  %value.curPointer._rawValue = getelementptr inbounds %TSV, ptr %value.curPointer, i32 0, i32 0
  store i64 0, ptr %value.curPointer._rawValue, align 8
  br label %50

24:                                               ; preds = %4
  %25 = sub i32 %whichCase, 1
  %26 = sub i32 %25, 1
  br i1 true, label %31, label %27

27:                                               ; preds = %24
  %28 = lshr i32 %26, 128
  %29 = add i32 1, %28
  %30 = and i32 poison, %26
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ 1, %24 ], [ %29, %27 ]
  %33 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %34 = zext i32 %33 to i128
  store i128 %34, ptr %value, align 8
  %35 = icmp eq i32 %5, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %49

37:                                               ; preds = %31
  %38 = icmp eq i32 %5, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = trunc i32 %32 to i8
  store i8 %40, ptr %0, align 8
  br label %49

41:                                               ; preds = %37
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = trunc i32 %32 to i16
  store i16 %44, ptr %0, align 8
  br label %49

45:                                               ; preds = %41
  %46 = icmp eq i32 %5, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  store i32 %32, ptr %0, align 8
  br label %49

48:                                               ; preds = %45
  unreachable

49:                                               ; preds = %47, %43, %39, %36
  br label %50

50:                                               ; preds = %49, %22, %20
  ret void
}

; Function Attrs: noinline nounwind readnone
define swiftcc %swift.metadata_response @"$s10BufferView0aB8IteratorVMa"(i64 %0, ptr %1) #7 {
entry:
  %2 = call swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr undef, ptr undef, ptr @"$s10BufferView0aB8IteratorVMn") #16
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = insertvalue %swift.metadata_response undef, ptr %3, 0
  %6 = insertvalue %swift.metadata_response %5, i64 %4, 1
  ret %swift.metadata_response %6
}

; Function Attrs: nounwind
declare ptr @swift_allocateGenericValueMetadata(ptr, ptr, ptr, i64) #8

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #9

; Function Attrs: noinline
declare swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #10

; Function Attrs: convergent nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #11

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #1

; Function Attrs: nounwind
declare ptr @swift_slowAlloc(i64, i64) #8

; Function Attrs: nounwind
declare void @swift_slowDealloc(ptr, i64, i64) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare ptr @llvm.stacksave() #12

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.stackrestore(ptr) #12

declare swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64, i64, i64) #0

declare extern_weak zeroext i1 @swift_stdlib_isStackAllocationSafe(i64 noundef, i64 noundef) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #10

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden swiftcc %swift.metadata_response @__swift_instantiateGenericMetadata(i64 %0, ptr %1, ptr %2, ptr %3, ptr %4) #13 {
entry:
  %generic.arguments = alloca [3 x ptr], align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %generic.arguments)
  %5 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 0
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 1
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds [3 x ptr], ptr %generic.arguments, i32 0, i32 2
  store ptr %3, ptr %7, align 8
  %8 = call swiftcc %swift.metadata_response @swift_getGenericMetadata(i64 %0, ptr %generic.arguments, ptr %4) #14
  ret %swift.metadata_response %8
}

; Function Attrs: nounwind readonly
declare swiftcc %swift.metadata_response @swift_getGenericMetadata(i64, ptr, ptr) #14

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #4 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #5 = { argmemonly nocallback nofree nounwind willreturn }
attributes #6 = { nounwind readonly "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #7 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #8 = { nounwind }
attributes #9 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #10 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { convergent nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { nocallback nofree nosync nounwind willreturn }
attributes #13 = { noinline nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #14 = { nounwind readonly }
attributes #15 = { noinline }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
!17 = !{}
!18 = !{i64 96}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.type = type { i64 }
%swift.type_descriptor = type opaque
%swift.protocol_conformance_descriptor = type { i32, i32, i32, i32 }
%T10BufferViewAAV = type <{ %T10BufferView0aB5IndexV, %TSi }>
%T10BufferView0aB5IndexV = type <{ %TSV }>
%TSV = type <{ ptr }>
%TSi = type <{ i64 }>
%T10BufferView0aB8IteratorV = type <{ %TSV, %TSV }>
%TSiSg = type <{ [8 x i8], [1 x i8] }>
%swift.opaque = type opaque
%Ts16IndexingIteratorVySNySiGG = type <{ %TSNySiG, %TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G }>
%TSNySiG = type <{ %TSi, %TSi }>
%TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G = type <{ [8 x i8], [1 x i8] }>
%Ts16IndexingIteratorVySny10BufferView0cD5IndexVySiGGG = type <{ %TSny10BufferView0aB5IndexVySiGG, %T10BufferView0aB5IndexV }>
%TSny10BufferView0aB5IndexVySiGG = type <{ %T10BufferView0aB5IndexV, %T10BufferView0aB5IndexV }>
%T10BufferView0aB5IndexVySiGSg = type <{ [8 x i8] }>
%T10BufferView07MutableaB0V = type <{ %T10BufferView0aB5IndexV, %TSi }>

@"$sSiN" = external global %swift.type, align 8
@"$s10BufferView0aB8IteratorVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB8IteratorVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB8IteratorVMn"
@"symbolic _____ySiG 10BufferView0aB8IteratorV" = linkonce_odr hidden constant <{ i8, i32, [4 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB8IteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [4 x i8], i8 }>, ptr @"symbolic _____ySiG 10BufferView0aB8IteratorV", i32 0, i32 1) to i64)) to i32), [4 x i8] c"ySiG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB8IteratorVySiGMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ySiG 10BufferView0aB8IteratorV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB8IteratorVySiGMD" to i64)) to i32), i32 -9 }, align 8
@".str.39.Range requires lowerBound <= upperBound" = private unnamed_addr constant [40 x i8] c"Range requires lowerBound <= upperBound\00"
@".str.23.Swift/ClosedRange.swift" = private unnamed_addr constant [24 x i8] c"Swift/ClosedRange.swift\00"
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@".str.32.BufferView/BufferViewTests.swift" = private unnamed_addr constant [33 x i8] c"BufferView/BufferViewTests.swift\00"
@".str.16.Assertion failed" = private unnamed_addr constant [17 x i8] c"Assertion failed\00"
@"$s10BufferView0aB5IndexVMn" = external global %swift.type_descriptor, align 4
@"got.$s10BufferView0aB5IndexVMn" = private unnamed_addr constant ptr @"$s10BufferView0aB5IndexVMn"
@"symbolic Sny_____ySiGG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ [3 x i8], i8, i32, [5 x i8], i8 }> <{ [3 x i8] c"Sny", i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ [3 x i8], i8, i32, [5 x i8], i8 }>, ptr @"symbolic Sny_____ySiGG 10BufferView0aB5IndexV", i32 0, i32 2) to i64)) to i32), [5 x i8] c"ySiGG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$sSny10BufferView0aB5IndexVySiGGMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sny_____ySiGG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr @"$sSny10BufferView0aB5IndexVySiGGMD" to i64)) to i32), i32 -13 }, align 8
@"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWL" = linkonce_odr hidden global ptr null, align 8
@"$sSnyxGSlsSxRzSZ6StrideRpzrlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$s10BufferView0aB5IndexVySiGACyxGSxAAWL" = linkonce_odr hidden global ptr null, align 8
@"$s10BufferView0aB5IndexVyxGSxAAMc" = external global %swift.protocol_conformance_descriptor, align 4
@"symbolic _____ySiG 10BufferView0aB5IndexV" = linkonce_odr hidden constant <{ i8, i32, [4 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [4 x i8], i8 }>, ptr @"symbolic _____ySiG 10BufferView0aB5IndexV", i32 0, i32 1) to i64)) to i32), [4 x i8] c"ySiG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$s10BufferView0aB5IndexVySiGMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ySiG 10BufferView0aB5IndexV" to i64), i64 ptrtoint (ptr @"$s10BufferView0aB5IndexVySiGMD" to i64)) to i32), i32 -9 }, align 8
@"$sS2iSZsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSZsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$ss16IndexingIteratorVMn" = external global %swift.type_descriptor, align 4
@"got.$ss16IndexingIteratorVMn" = private unnamed_addr constant ptr @"$ss16IndexingIteratorVMn"
@"symbolic _____ySny_____ySiGGG s16IndexingIteratorV 10BufferView0cD5IndexV" = linkonce_odr hidden constant <{ i8, i32, [4 x i8], i8, i32, [6 x i8], i8 }> <{ i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$ss16IndexingIteratorVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [4 x i8], i8, i32, [6 x i8], i8 }>, ptr @"symbolic _____ySny_____ySiGGG s16IndexingIteratorV 10BufferView0cD5IndexV", i32 0, i32 1) to i64)) to i32), [4 x i8] c"ySny", i8 2, i32 trunc (i64 sub (i64 ptrtoint (ptr @"got.$s10BufferView0aB5IndexVMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, [4 x i8], i8, i32, [6 x i8], i8 }>, ptr @"symbolic _____ySny_____ySiGGG s16IndexingIteratorV 10BufferView0cD5IndexV", i32 0, i32 4) to i64)) to i32), [6 x i8] c"ySiGGG", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"$ss16IndexingIteratorVySny10BufferView0cD5IndexVySiGGGMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ySny_____ySiGGG s16IndexingIteratorV 10BufferView0cD5IndexV" to i64), i64 ptrtoint (ptr @"$ss16IndexingIteratorVySny10BufferView0cD5IndexVySiGGGMD" to i64)) to i32), i32 -20 }, align 8
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [10 x ptr] [ptr @"$s10BufferView15bufferviewtest1ySiA2AVySiGF", ptr @"$s10BufferView15bufferviewtest2ySiA2AVySiG_SitF", ptr @"$s10BufferView16bufferviewtest2bySiA2AVySiG_SitF", ptr @"$s10BufferView15bufferviewtest3ySiA2AVySiGF", ptr @"$s10BufferView9blackholeyyxzlF", ptr @"$s10BufferView15bufferviewtest4ySbA2AVySiG_AA0aB5IndexVySiGtF", ptr @"$s10BufferView15bufferviewtest5ySiA2AVySiG_AA0aB5IndexVySiGtF", ptr @"$s10BufferView15bufferviewtest6yyAA07MutableaB0VySiG_AEtF", ptr @"$s10BufferView15bufferviewtest7yyAA07MutableaB0VySiGF", ptr @__swift_reflection_version], section "llvm.metadata"
@llvm.compiler.used = appending global [2 x ptr] [ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl", ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl"], section "llvm.metadata"

define swiftcc i64 @"$s10BufferView15bufferviewtest1ySiA2AVySiGF"(ptr %0, i64 %1) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$ele$generator" = alloca %T10BufferView0aB8IteratorV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$ele$generator", i8 0, i64 16, i1 false)
  %2 = alloca %TSiSg, align 8
  %ele.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %ele.debug, i8 0, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %"$ele$generator")
  %3 = call swiftcc { ptr, ptr } @"$s10BufferViewAAV12makeIteratorAA0abD0VyxGyF"(ptr %0, i64 %1, ptr @"$sSiN")
  %4 = extractvalue { ptr, ptr } %3, 0
  %5 = extractvalue { ptr, ptr } %3, 1
  %"$ele$generator.curPointer" = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %"$ele$generator", i32 0, i32 0
  %"$ele$generator.curPointer._rawValue" = getelementptr inbounds %TSV, ptr %"$ele$generator.curPointer", i32 0, i32 0
  store ptr %4, ptr %"$ele$generator.curPointer._rawValue", align 8
  %"$ele$generator.endPointer" = getelementptr inbounds %T10BufferView0aB8IteratorV, ptr %"$ele$generator", i32 0, i32 1
  %"$ele$generator.endPointer._rawValue" = getelementptr inbounds %TSV, ptr %"$ele$generator.endPointer", i32 0, i32 0
  store ptr %5, ptr %"$ele$generator.endPointer._rawValue", align 8
  br label %6

6:                                                ; preds = %12, %entry
  call void @llvm.lifetime.start.p0(i64 9, ptr %2)
  %7 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$s10BufferView0aB8IteratorVySiGMD") #9
  call swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF"(ptr noalias nocapture sret(%swift.opaque) %2, ptr %7, ptr nocapture swiftself dereferenceable(16) %"$ele$generator")
  %8 = load i64, ptr %2, align 8
  %9 = getelementptr inbounds %TSiSg, ptr %2, i32 0, i32 1
  %10 = load i1, ptr %9, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %2)
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  br label %12

12:                                               ; preds = %11
  %13 = phi i64 [ %8, %11 ]
  store i64 %13, ptr %ele.debug, align 8
  %sum._value2 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %14 = load i64, ptr %sum._value2, align 8
  %15 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %13)
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = extractvalue { i64, i1 } %15, 1
  %sum._value3 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %16, ptr %sum._value3, align 8
  br label %6

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0(i64 16, ptr %"$ele$generator")
  %sum._value1 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %19 = load i64, ptr %sum._value1, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %19
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare swiftcc { ptr, ptr } @"$s10BufferViewAAV12makeIteratorAA0abD0VyxGyF"(ptr, i64, ptr) #0

declare swiftcc void @"$s10BufferView0aB8IteratorV4nextxSgyF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr nocapture swiftself dereferenceable(16)) #0

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden ptr @__swift_instantiateConcreteTypeFromMangledName(ptr %0) #3 {
entry:
  %1 = load atomic i64, ptr %0 monotonic, align 8
  %2 = icmp slt i64 %1, 0
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false)
  br i1 %3, label %7, label %4

4:                                                ; preds = %7, %entry
  %5 = phi i64 [ %1, %entry ], [ %16, %7 ]
  %6 = inttoptr i64 %5 to ptr
  ret ptr %6

7:                                                ; preds = %entry
  %8 = ashr i64 %1, 32
  %9 = sub i64 0, %8
  %10 = trunc i64 %1 to i32
  %11 = sext i32 %10 to i64
  %12 = ptrtoint ptr %0 to i64
  %13 = add i64 %12, %11
  %14 = inttoptr i64 %13 to ptr
  %15 = call swiftcc ptr @swift_getTypeByMangledNameInContext2(ptr %14, i64 %9, ptr null, ptr null) #11
  %16 = ptrtoint ptr %15 to i64
  store atomic i64 %16, ptr %0 monotonic, align 8
  br label %4
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #4

; Function Attrs: argmemonly nounwind
declare swiftcc ptr @swift_getTypeByMangledNameInContext2(ptr, i64, ptr, ptr) #5

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

define swiftcc i64 @"$s10BufferView15bufferviewtest2ySiA2AVySiG_SitF"(ptr %0, i64 %1, i64 %2) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %n.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %n.debug, i8 0, i64 8, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySNySiGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 25, i1 false)
  %3 = alloca %TSNySiG, align 8
  %4 = alloca %TSiSg, align 8
  %i.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %5 = alloca %TSi, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  store i64 %2, ptr %n.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void @llvm.lifetime.start.p0(i64 25, ptr %"$i$generator")
  %6 = icmp slt i64 %2, 0
  %7 = xor i1 %6, true
  %8 = call i1 @llvm.expect.i1(i1 %7, i1 true)
  br i1 %8, label %10, label %9

9:                                                ; preds = %entry
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.39.Range requires lowerBound <= upperBound" to i64), i64 39, i8 2, i64 ptrtoint (ptr @".str.23.Swift/ClosedRange.swift" to i64), i64 23, i8 2, i64 347, i32 1)
  unreachable

10:                                               ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.lowerBound = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 0
  %.lowerBound._value = getelementptr inbounds %TSi, ptr %.lowerBound, i32 0, i32 0
  store i64 0, ptr %.lowerBound._value, align 8
  %.upperBound = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 1
  %.upperBound._value = getelementptr inbounds %TSi, ptr %.upperBound, i32 0, i32 0
  store i64 %2, ptr %.upperBound._value, align 8
  %.lowerBound1 = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 0
  %.lowerBound1._value = getelementptr inbounds %TSi, ptr %.lowerBound1, i32 0, i32 0
  %11 = load i64, ptr %.lowerBound1._value, align 8
  %.upperBound2 = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 1
  %.upperBound2._value = getelementptr inbounds %TSi, ptr %.upperBound2, i32 0, i32 0
  %12 = load i64, ptr %.upperBound2._value, align 8
  %13 = call swiftcc { i64, i64, i64, i8 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5"(i64 %11, i64 %12)
  %14 = extractvalue { i64, i64, i64, i8 } %13, 0
  %15 = extractvalue { i64, i64, i64, i8 } %13, 1
  %16 = extractvalue { i64, i64, i64, i8 } %13, 2
  %17 = extractvalue { i64, i64, i64, i8 } %13, 3
  %18 = trunc i8 %17 to i1
  %"$i$generator._elements" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 0
  %"$i$generator._elements.lowerBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 0
  %"$i$generator._elements.lowerBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.lowerBound", i32 0, i32 0
  store i64 %14, ptr %"$i$generator._elements.lowerBound._value", align 8
  %"$i$generator._elements.upperBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 1
  %"$i$generator._elements.upperBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.upperBound", i32 0, i32 0
  store i64 %15, ptr %"$i$generator._elements.upperBound._value", align 8
  %"$i$generator._position" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 1
  store i64 %16, ptr %"$i$generator._position", align 8
  %19 = getelementptr inbounds %TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G, ptr %"$i$generator._position", i32 0, i32 1
  store i1 %18, ptr %19, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %20

20:                                               ; preds = %30, %10
  call void @llvm.lifetime.start.p0(i64 9, ptr %4)
  %21 = call swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5"(ptr nocapture swiftself dereferenceable(25) %"$i$generator")
  %22 = extractvalue { i64, i8 } %21, 0
  %23 = extractvalue { i64, i8 } %21, 1
  %24 = trunc i8 %23 to i1
  store i64 %22, ptr %4, align 8
  %25 = getelementptr inbounds %TSiSg, ptr %4, i32 0, i32 1
  store i1 %24, ptr %25, align 8
  %26 = load i64, ptr %4, align 8
  %27 = getelementptr inbounds %TSiSg, ptr %4, i32 0, i32 1
  %28 = load i1, ptr %27, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %4)
  br i1 %28, label %39, label %29

29:                                               ; preds = %20
  br label %30

30:                                               ; preds = %29
  %31 = phi i64 [ %26, %29 ]
  store i64 %31, ptr %i.debug, align 8
  %32 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr @"$sSiN")
  %33 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %31, ptr %32, ptr @"$sSiN")
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %5, ptr %33, ptr %0, i64 %1, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  %34 = load i64, ptr %._value, align 8
  %sum._value4 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %35 = load i64, ptr %sum._value4, align 8
  %36 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %35, i64 %34)
  %37 = extractvalue { i64, i1 } %36, 0
  %38 = extractvalue { i64, i1 } %36, 1
  %sum._value5 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %37, ptr %sum._value5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  br label %20

39:                                               ; preds = %20
  call void @llvm.lifetime.end.p0(i64 25, ptr %"$i$generator")
  %sum._value3 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %40 = load i64, ptr %sum._value3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %40
}

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #7

declare swiftcc { i64, i64, i64, i8 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5"(i64, i64) #0

declare swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5"(ptr nocapture swiftself dereferenceable(25)) #0

declare swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr, i64, ptr) #0

declare swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64, ptr, ptr) #0

declare swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, i64, ptr) #0

define swiftcc i64 @"$s10BufferView16bufferviewtest2bySiA2AVySiG_SitF"(ptr %0, i64 %1, i64 %2) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %n.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %n.debug, i8 0, i64 8, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySNySiGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 25, i1 false)
  %3 = alloca %TSNySiG, align 8
  %4 = alloca %TSiSg, align 8
  %i.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %5 = alloca %TSi, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  store i64 %2, ptr %n.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void asm sideeffect "nop", ""()
  %6 = icmp slt i64 %1, %2
  %7 = xor i1 %6, true
  %8 = call i1 @llvm.expect.i1(i1 %7, i1 true)
  br i1 %8, label %13, label %9

9:                                                ; preds = %entry
  %10 = call swiftcc { i64, ptr } @"$ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %11 = extractvalue { i64, ptr } %10, 0
  %12 = extractvalue { i64, ptr } %10, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.16.Assertion failed" to i64), i64 16, i8 2, i64 %11, ptr %12, i64 ptrtoint (ptr @".str.32.BufferView/BufferViewTests.swift" to i64), i64 32, i8 2, i64 19, i32 1)
  unreachable

13:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 25, ptr %"$i$generator")
  %14 = icmp slt i64 %2, 0
  %15 = xor i1 %14, true
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 true)
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.39.Range requires lowerBound <= upperBound" to i64), i64 39, i8 2, i64 ptrtoint (ptr @".str.23.Swift/ClosedRange.swift" to i64), i64 23, i8 2, i64 347, i32 1)
  unreachable

18:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 16, ptr %3)
  %.lowerBound = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 0
  %.lowerBound._value = getelementptr inbounds %TSi, ptr %.lowerBound, i32 0, i32 0
  store i64 0, ptr %.lowerBound._value, align 8
  %.upperBound = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 1
  %.upperBound._value = getelementptr inbounds %TSi, ptr %.upperBound, i32 0, i32 0
  store i64 %2, ptr %.upperBound._value, align 8
  %.lowerBound1 = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 0
  %.lowerBound1._value = getelementptr inbounds %TSi, ptr %.lowerBound1, i32 0, i32 0
  %19 = load i64, ptr %.lowerBound1._value, align 8
  %.upperBound2 = getelementptr inbounds %TSNySiG, ptr %3, i32 0, i32 1
  %.upperBound2._value = getelementptr inbounds %TSi, ptr %.upperBound2, i32 0, i32 0
  %20 = load i64, ptr %.upperBound2._value, align 8
  %21 = call swiftcc { i64, i64, i64, i8 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5"(i64 %19, i64 %20)
  %22 = extractvalue { i64, i64, i64, i8 } %21, 0
  %23 = extractvalue { i64, i64, i64, i8 } %21, 1
  %24 = extractvalue { i64, i64, i64, i8 } %21, 2
  %25 = extractvalue { i64, i64, i64, i8 } %21, 3
  %26 = trunc i8 %25 to i1
  %"$i$generator._elements" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 0
  %"$i$generator._elements.lowerBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 0
  %"$i$generator._elements.lowerBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.lowerBound", i32 0, i32 0
  store i64 %22, ptr %"$i$generator._elements.lowerBound._value", align 8
  %"$i$generator._elements.upperBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 1
  %"$i$generator._elements.upperBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.upperBound", i32 0, i32 0
  store i64 %23, ptr %"$i$generator._elements.upperBound._value", align 8
  %"$i$generator._position" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 1
  store i64 %24, ptr %"$i$generator._position", align 8
  %27 = getelementptr inbounds %TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G, ptr %"$i$generator._position", i32 0, i32 1
  store i1 %26, ptr %27, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %3)
  br label %28

28:                                               ; preds = %38, %18
  call void @llvm.lifetime.start.p0(i64 9, ptr %4)
  %29 = call swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5"(ptr nocapture swiftself dereferenceable(25) %"$i$generator")
  %30 = extractvalue { i64, i8 } %29, 0
  %31 = extractvalue { i64, i8 } %29, 1
  %32 = trunc i8 %31 to i1
  store i64 %30, ptr %4, align 8
  %33 = getelementptr inbounds %TSiSg, ptr %4, i32 0, i32 1
  store i1 %32, ptr %33, align 8
  %34 = load i64, ptr %4, align 8
  %35 = getelementptr inbounds %TSiSg, ptr %4, i32 0, i32 1
  %36 = load i1, ptr %35, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %4)
  br i1 %36, label %47, label %37

37:                                               ; preds = %28
  br label %38

38:                                               ; preds = %37
  %39 = phi i64 [ %34, %37 ]
  store i64 %39, ptr %i.debug, align 8
  %40 = call swiftcc ptr @"$s10BufferViewAAV10startIndexAA0abD0VyxGvg"(ptr %0, i64 %1, ptr @"$sSiN")
  %41 = call swiftcc ptr @"$s10BufferView0aB5IndexV8advanced2byACyxGSi_tF"(i64 %39, ptr %40, ptr @"$sSiN")
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %5, ptr %41, ptr %0, i64 %1, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  %42 = load i64, ptr %._value, align 8
  %sum._value4 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %43 = load i64, ptr %sum._value4, align 8
  %44 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %43, i64 %42)
  %45 = extractvalue { i64, i1 } %44, 0
  %46 = extractvalue { i64, i1 } %44, 1
  %sum._value5 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %45, ptr %sum._value5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  br label %28

47:                                               ; preds = %28
  call void @llvm.lifetime.end.p0(i64 25, ptr %"$i$generator")
  %sum._value3 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %48 = load i64, ptr %sum._value3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %48
}

define swiftcc i64 @"$s10BufferView15bufferviewtest3ySiA2AVySiGF"(ptr %0, i64 %1) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySny10BufferView0cD5IndexVySiGGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 24, i1 false)
  %2 = alloca %TSny10BufferView0aB5IndexVySiGG, align 8
  %3 = alloca %T10BufferView0aB5IndexVySiGSg, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %4 = alloca %TSi, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %"$i$generator")
  %5 = call swiftcc { ptr, ptr } @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg"(ptr %0, i64 %1, ptr @"$sSiN")
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %.lowerBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %2, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %6, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %2, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %7, ptr %.upperBound._rawValue._rawValue, align 8
  %8 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$sSny10BufferView0aB5IndexVySiGGMD") #9
  %9 = call ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl"() #12
  call swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(ptr noalias nocapture sret(%swift.opaque) %"$i$generator", ptr %8, ptr %9, ptr noalias nocapture swiftself %2)
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  br label %10

10:                                               ; preds = %16, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %11 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$ss16IndexingIteratorVySny10BufferView0cD5IndexVySiGGGMD") #9
  call swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(ptr noalias nocapture sret(%swift.opaque) %3, ptr %11, ptr nocapture swiftself %"$i$generator")
  %12 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = inttoptr i64 %12 to ptr
  br label %16

16:                                               ; preds = %14
  %17 = phi ptr [ %15, %14 ]
  store ptr %17, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %4, ptr %17, ptr %0, i64 %1, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %18 = load i64, ptr %._value, align 8
  %sum._value2 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %19 = load i64, ptr %sum._value2, align 8
  %20 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %19, i64 %18)
  %21 = extractvalue { i64, i1 } %20, 0
  %22 = extractvalue { i64, i1 } %20, 1
  %sum._value3 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %21, ptr %sum._value3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  br label %10

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0(i64 24, ptr %"$i$generator")
  %sum._value1 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %24 = load i64, ptr %sum._value1, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %24
}

; Function Attrs: noinline
define swiftcc void @"$s10BufferView9blackholeyyxzlF"(ptr nocapture %0, ptr %T) #7 {
entry:
  %T1 = alloca ptr, align 8
  %t.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %t.debug, i8 0, i64 8, i1 false)
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %t.debug, align 8
  ret void
}

define swiftcc i1 @"$s10BufferView15bufferviewtest4ySbA2AVySiG_AA0aB5IndexVySiGtF"(ptr %0, i64 %1, ptr %2) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  store ptr %2, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %3, ptr %2, ptr %0, i64 %1, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %3, i32 0, i32 0
  %5 = load i64, ptr %._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %4, ptr %2, ptr %0, i64 %1, ptr @"$sSiN")
  %._value1 = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %6 = load i64, ptr %._value1, align 8
  %7 = icmp eq i64 %5, %6
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  ret i1 %7
}

define swiftcc i64 @"$s10BufferView15bufferviewtest5ySiA2AVySiG_AA0aB5IndexVySiGtF"(ptr %0, i64 %1, ptr %2) #0 {
entry:
  %v.debug = alloca %T10BufferViewAAV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferViewAAV, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  store ptr %2, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %3, ptr %2, ptr %0, i64 %1, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %3, i32 0, i32 0
  %5 = load i64, ptr %._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  call swiftcc void @"$s10BufferViewAAVyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %4, ptr %2, ptr %0, i64 %1, ptr @"$sSiN")
  %._value1 = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %6 = load i64, ptr %._value1, align 8
  %7 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5, i64 %6)
  %8 = extractvalue { i64, i1 } %7, 0
  %9 = extractvalue { i64, i1 } %7, 1
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  ret i64 %8
}

define swiftcc void @"$s10BufferView15bufferviewtest6yyAA07MutableaB0VySiG_AEtF"(ptr %0, i64 %1, ptr %2, i64 %3) #0 {
entry:
  %v1.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v1.debug, i8 0, i64 16, i1 false)
  %v2.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v2.debug, i8 0, i64 16, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySny10BufferView0cD5IndexVySiGGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 24, i1 false)
  %4 = alloca %TSny10BufferView0aB5IndexVySiGG, align 8
  %5 = alloca %T10BufferView0aB5IndexVySiGSg, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %6 = alloca %TSi, align 8
  %7 = alloca [32 x i8], align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v1.debug)
  %v1.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v1.debug, i32 0, i32 0
  %v1.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v1.debug.start, i32 0, i32 0
  %v1.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v1.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v1.debug.start._rawValue._rawValue, align 8
  %v1.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v1.debug, i32 0, i32 1
  %v1.debug.count._value = getelementptr inbounds %TSi, ptr %v1.debug.count, i32 0, i32 0
  store i64 %1, ptr %v1.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v2.debug)
  %v2.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v2.debug, i32 0, i32 0
  %v2.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v2.debug.start, i32 0, i32 0
  %v2.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v2.debug.start._rawValue, i32 0, i32 0
  store ptr %2, ptr %v2.debug.start._rawValue._rawValue, align 8
  %v2.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v2.debug, i32 0, i32 1
  %v2.debug.count._value = getelementptr inbounds %TSi, ptr %v2.debug.count, i32 0, i32 0
  store i64 %3, ptr %v2.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %8 = icmp eq i64 %3, %1
  %9 = call i1 @llvm.expect.i1(i1 %8, i1 true)
  br i1 %9, label %14, label %10

10:                                               ; preds = %entry
  %11 = call swiftcc { i64, ptr } @"$ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %12 = extractvalue { i64, ptr } %11, 0
  %13 = extractvalue { i64, ptr } %11, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.16.Assertion failed" to i64), i64 16, i8 2, i64 %12, ptr %13, i64 ptrtoint (ptr @".str.32.BufferView/BufferViewTests.swift" to i64), i64 32, i8 2, i64 47, i32 1)
  unreachable

14:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 24, ptr %"$i$generator")
  %15 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %0, i64 %1, ptr @"$sSiN")
  %16 = extractvalue { ptr, ptr } %15, 0
  %17 = extractvalue { ptr, ptr } %15, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  %.lowerBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %4, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %16, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %4, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %17, ptr %.upperBound._rawValue._rawValue, align 8
  %18 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$sSny10BufferView0aB5IndexVySiGGMD") #9
  %19 = call ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl"() #12
  call swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(ptr noalias nocapture sret(%swift.opaque) %"$i$generator", ptr %18, ptr %19, ptr noalias nocapture swiftself %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  br label %20

20:                                               ; preds = %26, %14
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %21 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$ss16IndexingIteratorVySny10BufferView0cD5IndexVySiGGGMD") #9
  call swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(ptr noalias nocapture sret(%swift.opaque) %5, ptr %21, ptr nocapture swiftself %"$i$generator")
  %22 = load i64, ptr %5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %20
  %25 = inttoptr i64 %22 to ptr
  br label %26

26:                                               ; preds = %24
  %27 = phi ptr [ %25, %24 ]
  store ptr %27, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  call swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque) %6, ptr %27, ptr %2, i64 %3, ptr @"$sSiN")
  %._value = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  %28 = load i64, ptr %._value, align 8
  %29 = getelementptr inbounds [32 x i8], ptr %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %29)
  %30 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32) %29, ptr %27, ptr %0, i64 %1, ptr @"$sSiN")
  %31 = extractvalue { ptr, ptr } %30, 0
  %32 = extractvalue { ptr, ptr } %30, 1
  %._value1 = getelementptr inbounds %TSi, ptr %32, i32 0, i32 0
  store i64 %28, ptr %._value1, align 8
  call swiftcc void %31(ptr noalias dereferenceable(32) %29, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %29)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  br label %20

33:                                               ; preds = %20
  call void @llvm.lifetime.end.p0(i64 24, ptr %"$i$generator")
  ret void
}

define swiftcc void @"$s10BufferView15bufferviewtest7yyAA07MutableaB0VySiGF"(ptr %0, i64 %1) #0 {
entry:
  %v.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %v.debug, i8 0, i64 16, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySny10BufferView0cD5IndexVySiGGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 24, i1 false)
  %2 = alloca %TSny10BufferView0aB5IndexVySiGG, align 8
  %3 = alloca %T10BufferView0aB5IndexVySiGSg, align 8
  %i.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %4 = alloca [32 x i8], align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %v.debug)
  %v.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v.debug, i32 0, i32 0
  %v.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %v.debug.start, i32 0, i32 0
  %v.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %v.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %v.debug.start._rawValue._rawValue, align 8
  %v.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %v.debug, i32 0, i32 1
  %v.debug.count._value = getelementptr inbounds %TSi, ptr %v.debug.count, i32 0, i32 0
  store i64 %1, ptr %v.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %"$i$generator")
  %5 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr %0, i64 %1, ptr @"$sSiN")
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  %.lowerBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %2, i32 0, i32 0
  %.lowerBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.lowerBound, i32 0, i32 0
  %.lowerBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.lowerBound._rawValue, i32 0, i32 0
  store ptr %6, ptr %.lowerBound._rawValue._rawValue, align 8
  %.upperBound = getelementptr inbounds %TSny10BufferView0aB5IndexVySiGG, ptr %2, i32 0, i32 1
  %.upperBound._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %.upperBound, i32 0, i32 0
  %.upperBound._rawValue._rawValue = getelementptr inbounds %TSV, ptr %.upperBound._rawValue, i32 0, i32 0
  store ptr %7, ptr %.upperBound._rawValue._rawValue, align 8
  %8 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$sSny10BufferView0aB5IndexVySiGGMD") #9
  %9 = call ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl"() #12
  call swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(ptr noalias nocapture sret(%swift.opaque) %"$i$generator", ptr %8, ptr %9, ptr noalias nocapture swiftself %2)
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  br label %10

10:                                               ; preds = %16, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %11 = call ptr @__swift_instantiateConcreteTypeFromMangledName(ptr @"$ss16IndexingIteratorVySny10BufferView0cD5IndexVySiGGGMD") #9
  call swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(ptr noalias nocapture sret(%swift.opaque) %3, ptr %11, ptr nocapture swiftself %"$i$generator")
  %12 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %10
  %15 = inttoptr i64 %12 to ptr
  br label %16

16:                                               ; preds = %14
  %17 = phi ptr [ %15, %14 ]
  store ptr %17, ptr %i.debug, align 8
  %18 = getelementptr inbounds [32 x i8], ptr %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0(i64 32, ptr %18)
  %19 = call swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32) %18, ptr %17, ptr %0, i64 %1, ptr @"$sSiN")
  %20 = extractvalue { ptr, ptr } %19, 0
  %21 = extractvalue { ptr, ptr } %19, 1
  %._value = getelementptr inbounds %TSi, ptr %21, i32 0, i32 0
  %22 = load i64, ptr %._value, align 8
  %23 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 1)
  %24 = extractvalue { i64, i1 } %23, 0
  %25 = extractvalue { i64, i1 } %23, 1
  %._value1 = getelementptr inbounds %TSi, ptr %21, i32 0, i32 0
  store i64 %24, ptr %._value1, align 8
  call swiftcc void %20(ptr noalias dereferenceable(32) %18, i1 false)
  call void @llvm.lifetime.end.p0(i64 32, ptr %18)
  br label %10

26:                                               ; preds = %10
  call void @llvm.lifetime.end.p0(i64 24, ptr %"$i$generator")
  ret void
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #10
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64, i64, i8, i64, ptr, i64, i64, i8, i64, i32) #7

declare swiftcc { ptr, ptr } @"$s10BufferViewAAV7indicesSnyAA0aB5IndexVyxGGvg"(ptr, i64, ptr) #0

declare swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWl"() #8 {
entry:
  %conditional.requirement.buffer = alloca [2 x ptr], align 8
  %0 = load ptr, ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @__swift_instantiateConcreteTypeFromMangledNameAbstract(ptr @"$sSny10BufferView0aB5IndexVySiGGMD") #9
  %3 = call ptr @"$s10BufferView0aB5IndexVySiGACyxGSxAAWl"() #12
  %4 = call ptr @"$sS2iSZsWl"() #12
  %5 = getelementptr inbounds [2 x ptr], ptr %conditional.requirement.buffer, i32 0, i32 0
  %6 = getelementptr inbounds ptr, ptr %5, i32 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds ptr, ptr %5, i32 1
  store ptr %4, ptr %7, align 8
  %8 = call ptr @swift_getWitnessTable(ptr @"$sSnyxGSlsSxRzSZ6StrideRpzrlMc", ptr %2, ptr %5) #9
  store atomic ptr %8, ptr @"$sSny10BufferView0aB5IndexVySiGGSnyxGSlsSxRzSZ6StrideRpzrlWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %9 = phi ptr [ %0, %entry ], [ %8, %cacheIsNull ]
  ret ptr %9
}

; Function Attrs: noinline nounwind readonly willreturn
define linkonce_odr hidden ptr @__swift_instantiateConcreteTypeFromMangledNameAbstract(ptr %0) #3 {
entry:
  %1 = load atomic i64, ptr %0 monotonic, align 8
  %2 = icmp slt i64 %1, 0
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false)
  br i1 %3, label %7, label %4

4:                                                ; preds = %7, %entry
  %5 = phi i64 [ %1, %entry ], [ %16, %7 ]
  %6 = inttoptr i64 %5 to ptr
  ret ptr %6

7:                                                ; preds = %entry
  %8 = ashr i64 %1, 32
  %9 = sub i64 0, %8
  %10 = trunc i64 %1 to i32
  %11 = sext i32 %10 to i64
  %12 = ptrtoint ptr %0 to i64
  %13 = add i64 %12, %11
  %14 = inttoptr i64 %13 to ptr
  %15 = call swiftcc ptr @swift_getTypeByMangledNameInContextInMetadataState2(i64 255, ptr %14, i64 %9, ptr null, ptr null) #11
  %16 = ptrtoint ptr %15 to i64
  store atomic i64 %16, ptr %0 monotonic, align 8
  br label %4
}

; Function Attrs: argmemonly nounwind
declare swiftcc ptr @swift_getTypeByMangledNameInContextInMetadataState2(i64, ptr, i64, ptr, ptr) #5

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$s10BufferView0aB5IndexVySiGACyxGSxAAWl"() #8 {
entry:
  %0 = load ptr, ptr @"$s10BufferView0aB5IndexVySiGACyxGSxAAWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @__swift_instantiateConcreteTypeFromMangledNameAbstract(ptr @"$s10BufferView0aB5IndexVySiGMD") #9
  %3 = call ptr @swift_getWitnessTable(ptr @"$s10BufferView0aB5IndexVyxGSxAAMc", ptr %2, ptr undef) #9
  store atomic ptr %3, ptr @"$s10BufferView0aB5IndexVySiGACyxGSxAAWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %4 = phi ptr [ %0, %entry ], [ %3, %cacheIsNull ]
  ret ptr %4
}

; Function Attrs: nounwind readonly
declare ptr @swift_getWitnessTable(ptr, ptr, ptr) #9

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSZsWl"() #8 {
entry:
  %0 = load ptr, ptr @"$sS2iSZsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSZsMc", ptr @"$sSiN", ptr undef) #9
  store atomic ptr %2, ptr @"$sS2iSZsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

declare swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr nocapture swiftself) #0

declare swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0V7indicesSnyAA0aB5IndexVyxGGvg"(ptr, i64, ptr) #0

declare swiftcc void @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGcig"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, i64, ptr) #0

declare swiftcc { ptr, ptr } @"$s10BufferView07MutableaB0VyxAA0aB5IndexVyxGciM"(ptr noalias dereferenceable(32), ptr, ptr, i64, ptr) #0

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #10

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #3 = { noinline nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #8 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { argmemonly nounwind readonly }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%swift.type = type { i64 }
%swift.protocol_conformance_descriptor = type { i32, i32, i32, i32 }
%swift.protocol_requirement = type { i32, i32 }
%swift.vwtable = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32 }
%swift.type_metadata_record = type { i32 }
%T10BufferView09OutputRawA0V = type <{ %TSv, %TSi }>
%TSv = type <{ ptr }>
%TSi = type <{ i64 }>
%swift.metadata_response = type { ptr, i64 }
%swift.opaque = type opaque
%TSq.0 = type <{ [16 x i8] }>
%T10BufferView07MutableaB0V = type <{ %T10BufferView0aB5IndexV, %TSi }>
%T10BufferView0aB5IndexV = type <{ %TSV }>
%TSV = type <{ ptr }>
%TSp = type <{ ptr }>
%swift.refcounted = type { ptr, i64 }
%TSR = type <{ %TSq.2, %TSi }>
%TSq.2 = type <{ [8 x i8] }>
%TSvSg = type <{ [8 x i8] }>
%TSr = type <{ %TSq.4, %TSi }>
%TSq.4 = type <{ [8 x i8] }>
%Ts5SliceV = type <{ %TSi, %TSi, %TSr }>
%swift.noescape.function = type { ptr, ptr }

@"$sSiN" = external global %swift.type, align 8
@"$sS2iSzsWL" = linkonce_odr hidden global ptr null, align 8
@"$sSiSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.32.BufferView/OutputRawBuffer.swift" = private unnamed_addr constant [33 x i8] c"BufferView/OutputRawBuffer.swift\00"
@".str.19.Precondition failed" = private unnamed_addr constant [20 x i8] c"Precondition failed\00"
@"$sSTTL" = external global %swift.protocol_requirement, align 4
@"$s7ElementSTTl" = external global %swift.protocol_requirement, align 4
@"$s8IteratorSTTl" = external global %swift.protocol_requirement, align 4
@"$sST8IteratorST_StTn" = external global %swift.protocol_requirement, align 4
@".str.11.base count " = private unnamed_addr constant [12 x i8] c"base count \00"
@".str.59.buffer cannot contain every element from source collection." = private unnamed_addr constant [60 x i8] c"buffer cannot contain every element from source collection.\00"
@"$sSryxGSlsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.47.buffer must contain a whole number of elements." = private unnamed_addr constant [48 x i8] c"buffer must contain a whole number of elements.\00"
@".str.65.buffer base address must be properly aligned to access C.Element." = private unnamed_addr constant [66 x i8] c"buffer base address must be properly aligned to access C.Element.\00"
@".str.48.buffer cannot contain every element from source." = private unnamed_addr constant [49 x i8] c"buffer cannot contain every element from source.\00"
@".str.54.Division results in an overflow in remainder operation" = private unnamed_addr constant [55 x i8] c"Division results in an overflow in remainder operation\00"
@".str.24.Swift/IntegerTypes.swift" = private unnamed_addr constant [25 x i8] c"Swift/IntegerTypes.swift\00"
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@".str.39.Division by zero in remainder operation" = private unnamed_addr constant [40 x i8] c"Division by zero in remainder operation\00"
@"$sSvN" = external global %swift.type, align 8
@"$sSVN" = external global %swift.type, align 8
@"$sSvs8_PointersWP" = external global ptr, align 8
@"$sSVs8_PointersWP" = external global ptr, align 8
@"$s10BufferView09OutputRawA0V11baseAddressSvvpMV" = unnamed_addr constant { i32 } zeroinitializer, align 4
@"$s10BufferView09OutputRawA0VWV" = internal constant %swift.vwtable { ptr @__swift_memcpy16_8, ptr @__swift_noop_void_return, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @__swift_memcpy16_8, ptr @"$s10BufferView09OutputRawA0Vwet", ptr @"$s10BufferView09OutputRawA0Vwst", i64 16, i64 16, i32 7, i32 1 }, align 8
@.str.10.BufferView = private constant [11 x i8] c"BufferView\00"
@"$s10BufferViewMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10.BufferView to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32 }>, ptr @"$s10BufferViewMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__constg_swiftt", align 4
@.str.15.OutputRawBuffer = private constant [16 x i8] c"OutputRawBuffer\00"
@"$s10BufferView09OutputRawA0VMn" = constant <{ i32, i32, i32, i32, i32, i32, i32 }> <{ i32 81, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferViewMXM" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.15.OutputRawBuffer to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VMa" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VMF" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMn", i32 0, i32 4) to i64)) to i32), i32 2, i32 2 }>, section "__TEXT,__constg_swiftt", align 4
@"$s10BufferView09OutputRawA0VMf" = internal constant <{ ptr, ptr, i64, ptr, i32, i32 }> <{ ptr null, ptr @"$s10BufferView09OutputRawA0VWV", i64 512, ptr @"$s10BufferView09OutputRawA0VMn", i32 0, i32 8 }>, align 8
@"symbolic _____ 10BufferView09OutputRawA0V" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VMn" to i64), i64 ptrtoint (ptr getelementptr inbounds (<{ i8, i32, i8 }>, ptr @"symbolic _____ 10BufferView09OutputRawA0V", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@"symbolic Sv" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Sv", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@0 = private constant [12 x i8] c"baseAddress\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"symbolic Si" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Si", i8 0 }>, section "__TEXT,__swift5_typeref, regular", no_sanitize_address, align 2
@1 = private constant [6 x i8] c"count\00", section "__TEXT,__swift5_reflstr, regular", no_sanitize_address
@"$s10BufferView09OutputRawA0VMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic _____ 10BufferView09OutputRawA0V" to i64), i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VMF" to i64)) to i32), i32 0, i16 0, i16 12, i32 2, i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Sv" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView09OutputRawA0VMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @0 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView09OutputRawA0VMF", i32 0, i32 7) to i64)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (ptr @"symbolic Si" to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView09OutputRawA0VMF", i32 0, i32 9) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @1 to i64), i64 ptrtoint (ptr getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }, ptr @"$s10BufferView09OutputRawA0VMF", i32 0, i32 10) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular", no_sanitize_address, align 4
@".str.50.self must be a properly aligned pointer for type T" = private unnamed_addr constant [51 x i8] c"self must be a properly aligned pointer for type T\00"
@".str.28.Swift/UnsafeRawPointer.swift" = private unnamed_addr constant [29 x i8] c"Swift/UnsafeRawPointer.swift\00"
@.str.0. = private unnamed_addr constant [1 x i8] zeroinitializer
@".str.35.Negative value is not representable" = private unnamed_addr constant [36 x i8] c"Negative value is not representable\00"
@".str.20.Swift/Integers.swift" = private unnamed_addr constant [21 x i8] c"Swift/Integers.swift\00"
@"$sSRyxGSlsMc" = external global %swift.protocol_conformance_descriptor, align 4
@".str.64.buffer base address must be properly aligned to access C.Element" = private unnamed_addr constant [65 x i8] c"buffer base address must be properly aligned to access C.Element\00"
@"$s10BufferView09OutputRawA0VHn" = private constant %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VMn" to i64), i64 ptrtoint (ptr @"$s10BufferView09OutputRawA0VHn" to i64)) to i32) }, section "__TEXT, __swift5_types, regular", no_sanitize_address, align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [18 x ptr] [ptr @"$s10BufferView09OutputRawA0V11baseAddressSvvg", ptr @"$s10BufferView09OutputRawA0V5countSivg", ptr @"$s10BufferView09OutputRawA0V11baseAddress5countACSv_SitcfC", ptr @"$s10BufferView09OutputRawA0V16initializeMemory2as9repeatingAA07MutableaB0VyxGxm_xtlF", ptr @"$s10BufferView09OutputRawA0V16initializeMemory2as4from8IteratorQz9unwritten_AA07MutableaB0Vy7ElementQzG11initializedtAMm_xtSTRzlF", ptr @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlF", ptr @"$s10BufferView09OutputRawA0V20moveInitializeMemory2as14fromContentsOfAA07MutableaB0VyxGxm_SryxGtlF", ptr @"$s10BufferView09OutputRawA0V20moveInitializeMemory2as14fromContentsOfAA07MutableaB0VyxGxm_s5SliceVySryxGGtlF", ptr @"$s10BufferView09OutputRawA0V10storeBytes2of12toByteOffset2asSix_SixmtlF", ptr @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlF", ptr @"$s10BufferView09OutputRawA0V14hasPrefixRangeySbAA07MutableaB0VyxGlF", ptr @"$s10BufferView09OutputRawA0V11baseAddressSvvpMV", ptr @"$s10BufferView09OutputRawA0VMn", ptr @"$s10BufferView09OutputRawA0VMa", ptr @"$s10BufferView09OutputRawA0VN", ptr @"$s10BufferView09OutputRawA0VMF", ptr @"$s10BufferView09OutputRawA0VHn", ptr @__swift_reflection_version], section "llvm.metadata"
@llvm.compiler.used = appending global [4 x ptr] [ptr @"$sS2iSzsWl", ptr @"$sS2iSzsWl", ptr @"$s10BufferView09OutputRawA0VMf", ptr @"$sS2iSzsWl"], section "llvm.metadata"

@"$s10BufferView09OutputRawA0V5countSivpMV" = alias { i32 }, ptr @"$s10BufferView09OutputRawA0V11baseAddressSvvpMV"
@"$s10BufferView09OutputRawA0VN" = alias %swift.type, getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2)

define swiftcc ptr @"$s10BufferView09OutputRawA0V11baseAddressSvvg"(ptr %0, i64 %1) #0 {
entry:
  ret ptr %0
}

define swiftcc i64 @"$s10BufferView09OutputRawA0V5countSivg"(ptr %0, i64 %1) #0 {
entry:
  ret i64 %1
}

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V11baseAddress5countACSv_SitcfC"(ptr %0, i64 %1) #0 {
entry:
  %self = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self, i8 0, i64 16, i1 false)
  %baseAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %baseAddress.debug, i8 0, i64 8, i1 false)
  %count.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %count.debug, i8 0, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %self)
  store ptr %0, ptr %baseAddress.debug, align 8
  store i64 %1, ptr %count.debug, align 8
  %self.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self, i32 0, i32 0
  %self.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.baseAddress, i32 0, i32 0
  store ptr %0, ptr %self.baseAddress._rawValue, align 8
  %self.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self, i32 0, i32 1
  %self.count._value = getelementptr inbounds %TSi, ptr %self.count, i32 0, i32 0
  store i64 %1, ptr %self.count._value, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %self)
  %2 = insertvalue { ptr, i64 } undef, ptr %0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %1, 1
  ret { ptr, i64 } %3
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V16initializeMemory2as9repeatingAA07MutableaB0VyxGxm_xtlF"(ptr %0, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %repeatedValue.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %repeatedValue.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %elementCount.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementCount.debug, i8 0, i64 8, i1 false)
  %remainder.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %remainder.debug, i8 0, i64 8, i1 false)
  %8 = alloca %T10BufferView09OutputRawA0V, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %type.debug, align 8
  store ptr %1, ptr %repeatedValue.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %2, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %._value = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  store i64 %3, ptr %._value, align 8
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %10, align 8, !invariant.load !17
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._value2 = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  store i64 %stride, ptr %._value2, align 8
  %11 = call ptr @"$sS2iSzsWl"() #16
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %4, ptr noalias nocapture %5, ptr noalias nocapture %7, ptr @"$sSiN", ptr %11, ptr noalias nocapture swiftself %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  %._value3 = getelementptr inbounds %TSi, ptr %4, i32 0, i32 0
  %12 = load i64, ptr %._value3, align 8
  %._value4 = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  %13 = load i64, ptr %._value4, align 8
  store i64 %12, ptr %elementCount.debug, align 8
  store i64 %13, ptr %remainder.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  call void asm sideeffect "nop", ""()
  %14 = icmp eq i64 %13, 0
  %15 = call i1 @llvm.expect.i1(i1 %14, i1 true)
  br i1 %15, label %20, label %16

16:                                               ; preds = %entry
  %17 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %18 = extractvalue { i64, ptr } %17, 0
  %19 = extractvalue { i64, ptr } %17, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %18, ptr %19, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 22, i32 1)
  unreachable

20:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  %21 = call swiftcc ptr @"$sSv16initializeMemory2as9repeating5countSpyxGxm_xSitlF"(ptr %T, ptr noalias nocapture %1, i64 %12, ptr %2, ptr %T)
  call void @llvm.lifetime.start.p0(i64 16, ptr %8)
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  store ptr %2, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %3, ptr %.count._value, align 8
  %22 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %21, i64 %12, ptr noalias nocapture %8, ptr %T, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %23 = extractvalue { ptr, i64 } %22, 0
  %24 = extractvalue { ptr, i64 } %22, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %8)
  %25 = insertvalue { ptr, i64 } undef, ptr %23, 0
  %26 = insertvalue { ptr, i64 } %25, i64 %24, 1
  ret { ptr, i64 } %26
}

declare swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture, ptr noalias nocapture, ptr noalias nocapture, ptr, ptr, ptr noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden ptr @"$sS2iSzsWl"() #3 {
entry:
  %0 = load ptr, ptr @"$sS2iSzsWL", align 8
  %1 = icmp eq ptr %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call ptr @swift_getWitnessTable(ptr @"$sSiSzsMc", ptr @"$sSiN", ptr undef) #4
  store atomic ptr %2, ptr @"$sS2iSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi ptr [ %0, %entry ], [ %2, %cacheIsNull ]
  ret ptr %3
}

; Function Attrs: nounwind readonly
declare ptr @swift_getWitnessTable(ptr, ptr, ptr) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V16initializeMemory2as4from8IteratorQz9unwritten_AA07MutableaB0Vy7ElementQzG11initializedtAMm_xtSTRzlF"(ptr noalias nocapture %0, ptr %1, ptr noalias nocapture %2, ptr %3, i64 %4, ptr %S, ptr %S.Sequence) #0 {
entry:
  %S1 = alloca ptr, align 8
  %element.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %element.debug, i8 0, i64 8, i1 false)
  %iterator.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %iterator.debug, i8 0, i64 8, i1 false)
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %elementStride.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementStride.debug, i8 0, i64 8, i1 false)
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %elementCount.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementCount.debug, i8 0, i64 8, i1 false)
  %remainder.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %remainder.debug, i8 0, i64 8, i1 false)
  %address = alloca %TSv, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %address, i8 0, i64 8, i1 false)
  %initialized = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %initialized, i8 0, i64 8, i1 false)
  %9 = alloca %T10BufferView09OutputRawA0V, align 8
  store ptr %S, ptr %S1, align 8
  %10 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 255, ptr %S.Sequence, ptr %S, ptr @"$sSTTL", ptr @"$s7ElementSTTl") #8
  %S.Element = extractvalue %swift.metadata_response %10, 0
  %11 = extractvalue %swift.metadata_response %10, 1
  %12 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %S.Element) #16
  %13 = extractvalue %swift.metadata_response %12, 0
  %14 = getelementptr inbounds ptr, ptr %13, i64 -1
  %.valueWitnesses = load ptr, ptr %14, align 8, !invariant.load !17, !dereferenceable !18
  %15 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %15, align 8, !invariant.load !17
  %16 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %16)
  %17 = call swiftcc %swift.metadata_response @swift_checkMetadataState(i64 0, ptr %S.Element) #9
  %18 = extractvalue %swift.metadata_response %17, 0
  %19 = getelementptr inbounds ptr, ptr %18, i64 -1
  %.valueWitnesses2 = load ptr, ptr %19, align 8, !invariant.load !17, !dereferenceable !18
  %20 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses2, i32 0, i32 8
  %size3 = load i64, ptr %20, align 8, !invariant.load !17
  %element = alloca i8, i64 %size3, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %element)
  store ptr %element, ptr %element.debug, align 8
  %21 = getelementptr inbounds ptr, ptr %S, i64 -1
  %S.valueWitnesses = load ptr, ptr %21, align 8, !invariant.load !17, !dereferenceable !18
  %22 = getelementptr inbounds %swift.vwtable, ptr %S.valueWitnesses, i32 0, i32 8
  %size4 = load i64, ptr %22, align 8, !invariant.load !17
  %23 = alloca i8, i64 %size4, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %23)
  %24 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 0, ptr %S.Sequence, ptr %S, ptr @"$sSTTL", ptr @"$s8IteratorSTTl") #8
  %S.Iterator = extractvalue %swift.metadata_response %24, 0
  %25 = getelementptr inbounds ptr, ptr %S.Iterator, i64 -1
  %S.Iterator.valueWitnesses = load ptr, ptr %25, align 8, !invariant.load !17, !dereferenceable !18
  %26 = getelementptr inbounds %swift.vwtable, ptr %S.Iterator.valueWitnesses, i32 0, i32 8
  %size5 = load i64, ptr %26, align 8, !invariant.load !17
  %iterator = alloca i8, i64 %size5, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %iterator)
  store ptr %iterator, ptr %iterator.debug, align 8
  store ptr %1, ptr %type.debug, align 8
  store ptr %2, ptr %source.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %3, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %27 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses2, i32 0, i32 9
  %stride = load i64, ptr %27, align 8, !invariant.load !17
  store i64 %stride, ptr %elementStride.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %._value = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  store i64 %4, ptr %._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %8)
  %._value6 = getelementptr inbounds %TSi, ptr %8, i32 0, i32 0
  store i64 %stride, ptr %._value6, align 8
  %28 = call ptr @"$sS2iSzsWl"() #16
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %5, ptr noalias nocapture %6, ptr noalias nocapture %8, ptr @"$sSiN", ptr %28, ptr noalias nocapture swiftself %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  %._value7 = getelementptr inbounds %TSi, ptr %5, i32 0, i32 0
  %29 = load i64, ptr %._value7, align 8
  %._value8 = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  %30 = load i64, ptr %._value8, align 8
  store i64 %29, ptr %elementCount.debug, align 8
  store i64 %30, ptr %remainder.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void asm sideeffect "nop", ""()
  %31 = icmp eq i64 %30, 0
  %32 = call i1 @llvm.expect.i1(i1 %31, i1 true)
  br i1 %32, label %37, label %33

33:                                               ; preds = %entry
  %34 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %35 = extractvalue { i64, ptr } %34, 0
  %36 = extractvalue { i64, ptr } %34, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %35, ptr %36, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 41, i32 1)
  unreachable

37:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.start.p0(i64 8, ptr %address)
  %address._rawValue = getelementptr inbounds %TSv, ptr %address, i32 0, i32 0
  store ptr %3, ptr %address._rawValue, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %initialized)
  %initialized._value = getelementptr inbounds %TSi, ptr %initialized, i32 0, i32 0
  store i64 0, ptr %initialized._value, align 8
  %38 = getelementptr inbounds ptr, ptr %S.valueWitnesses, i32 2
  %39 = load ptr, ptr %38, align 8, !invariant.load !17
  %40 = call ptr %39(ptr noalias %23, ptr noalias %2, ptr %S) #15
  call swiftcc void @"$sST12makeIterator0B0QzyFTj"(ptr noalias nocapture sret(%swift.opaque) %iterator, ptr noalias nocapture swiftself %23, ptr %S, ptr %S.Sequence)
  br label %41

41:                                               ; preds = %63, %37
  %initialized._value9 = getelementptr inbounds %TSi, ptr %initialized, i32 0, i32 0
  %42 = load i64, ptr %initialized._value9, align 8
  %43 = icmp slt i64 %42, %29
  br i1 %43, label %44, label %68

44:                                               ; preds = %41
  %S.Iterator.IteratorProtocol = call swiftcc ptr @swift_getAssociatedConformanceWitness(ptr %S.Sequence, ptr %S, ptr %S.Iterator, ptr @"$sSTTL", ptr @"$sST8IteratorST_StTn") #8
  call swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque) %16, ptr nocapture swiftself %iterator, ptr %S.Iterator, ptr %S.Iterator.IteratorProtocol)
  %45 = getelementptr inbounds ptr, ptr %.valueWitnesses2, i32 6
  %46 = load ptr, ptr %45, align 8, !invariant.load !17
  %47 = call i32 %46(ptr noalias %16, i32 1, ptr %18) #4
  %48 = icmp ne i32 %47, 1
  br i1 %48, label %50, label %66

49:                                               ; No predecessors!
  unreachable

50:                                               ; preds = %44
  %51 = getelementptr inbounds ptr, ptr %.valueWitnesses2, i32 4
  %52 = load ptr, ptr %51, align 8, !invariant.load !17
  %53 = call ptr %52(ptr noalias %element, ptr noalias %16, ptr %18) #15
  %address._rawValue11 = getelementptr inbounds %TSv, ptr %address, i32 0, i32 0
  %54 = load ptr, ptr %address._rawValue11, align 8
  %55 = call swiftcc ptr @"$sSv16initializeMemory2as2toSpyxGxm_xtlF"(ptr %18, ptr noalias nocapture %element, ptr %54, ptr %18)
  %address._rawValue12 = getelementptr inbounds %TSv, ptr %address, i32 0, i32 0
  %56 = load ptr, ptr %address._rawValue12, align 8
  %57 = getelementptr inbounds i8, ptr %56, i64 %stride
  %address._rawValue13 = getelementptr inbounds %TSv, ptr %address, i32 0, i32 0
  store ptr %57, ptr %address._rawValue13, align 8
  %initialized._value14 = getelementptr inbounds %TSi, ptr %initialized, i32 0, i32 0
  %58 = load i64, ptr %initialized._value14, align 8
  %59 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 1)
  %60 = extractvalue { i64, i1 } %59, 0
  %61 = extractvalue { i64, i1 } %59, 1
  %62 = call i1 @llvm.expect.i1(i1 %61, i1 false)
  br i1 %62, label %81, label %63

63:                                               ; preds = %50
  %initialized._value15 = getelementptr inbounds %TSi, ptr %initialized, i32 0, i32 0
  store i64 %60, ptr %initialized._value15, align 8
  %64 = getelementptr inbounds ptr, ptr %.valueWitnesses2, i32 1
  %65 = load ptr, ptr %64, align 8, !invariant.load !17
  call void %65(ptr noalias %element, ptr %18) #15
  br label %41

66:                                               ; preds = %44
  %67 = call ptr @"$s7ElementQzSgSTRzlWOh"(ptr %16, ptr %18, ptr %13)
  br label %69

68:                                               ; preds = %41
  br label %69

69:                                               ; preds = %66, %68
  %70 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 2
  %71 = load ptr, ptr %70, align 8, !invariant.load !17
  %72 = call ptr %71(ptr noalias %0, ptr noalias %iterator, ptr %S.Iterator) #15
  %initialized._value10 = getelementptr inbounds %TSi, ptr %initialized, i32 0, i32 0
  %73 = load i64, ptr %initialized._value10, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %9)
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %9, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  store ptr %3, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %9, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  %74 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %3, i64 %73, ptr noalias nocapture %9, ptr %18, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %75 = extractvalue { ptr, i64 } %74, 0
  %76 = extractvalue { ptr, i64 } %74, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %9)
  %77 = getelementptr inbounds ptr, ptr %S.Iterator.valueWitnesses, i32 1
  %78 = load ptr, ptr %77, align 8, !invariant.load !17
  call void %78(ptr noalias %iterator, ptr %S.Iterator) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr %initialized)
  call void @llvm.lifetime.end.p0(i64 8, ptr %address)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %iterator)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %23)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %element)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %16)
  %79 = insertvalue { ptr, i64 } undef, ptr %75, 0
  %80 = insertvalue { ptr, i64 } %79, i64 %76, 1
  ret { ptr, i64 } %80

81:                                               ; preds = %50
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden swiftcc ptr @"$sSv16initializeMemory2as2toSpyxGxm_xtlF"(ptr %0, ptr noalias nocapture %1, ptr %2, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %3 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %3, align 8, !invariant.load !17, !dereferenceable !18
  %4 = getelementptr inbounds ptr, ptr %T.valueWitnesses, i32 2
  %5 = load ptr, ptr %4, align 8, !invariant.load !17
  %6 = call ptr %5(ptr noalias %2, ptr noalias %1, ptr %T) #15
  ret ptr %2
}

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlF"(ptr %0, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %C, ptr %C.Collection) #0 {
entry:
  %C1 = alloca ptr, align 8
  %it.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %it.debug, i8 0, i64 8, i1 false)
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %buffer = alloca %TSq.0, align 8
  %4 = alloca %TSq.0, align 8
  %swifterror = alloca swifterror ptr, align 8
  store ptr null, ptr %swifterror, align 8
  %view = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %view, i8 0, i64 16, i1 false)
  %buffer.debug = alloca <{ %TSp, %TSi }>, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %buffer.debug, i8 0, i64 16, i1 false)
  %5 = alloca %T10BufferView09OutputRawA0V, align 8
  store ptr %C, ptr %C1, align 8
  %6 = getelementptr inbounds ptr, ptr %C.Collection, i32 1
  %C.Sequence = load ptr, ptr %6, align 8, !invariant.load !17
  %7 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 255, ptr %C.Sequence, ptr %C, ptr @"$sSTTL", ptr @"$s7ElementSTTl") #8
  %C.Element = extractvalue %swift.metadata_response %7, 0
  %8 = extractvalue %swift.metadata_response %7, 1
  %9 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 0, ptr %C.Element) #16
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = getelementptr inbounds ptr, ptr %10, i64 -1
  %.valueWitnesses = load ptr, ptr %11, align 8, !invariant.load !17, !dereferenceable !18
  %12 = getelementptr inbounds %swift.vwtable, ptr %.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %12, align 8, !invariant.load !17
  %13 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %13)
  %14 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %14)
  %15 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 0, ptr %C.Sequence, ptr %C, ptr @"$sSTTL", ptr @"$s8IteratorSTTl") #8
  %C.Iterator = extractvalue %swift.metadata_response %15, 0
  %16 = getelementptr inbounds ptr, ptr %C.Iterator, i64 -1
  %C.Iterator.valueWitnesses = load ptr, ptr %16, align 8, !invariant.load !17, !dereferenceable !18
  %17 = getelementptr inbounds %swift.vwtable, ptr %C.Iterator.valueWitnesses, i32 0, i32 8
  %size2 = load i64, ptr %17, align 8, !invariant.load !17
  %18 = alloca i8, i64 %size2, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %18)
  %it = alloca i8, i64 %size2, align 16
  call void @llvm.lifetime.start.p0(i64 -1, ptr %it)
  store ptr %it, ptr %it.debug, align 8
  store ptr %0, ptr %type.debug, align 8
  %19 = call swiftcc %swift.metadata_response @swift_checkMetadataState(i64 0, ptr %C.Element) #9
  %20 = extractvalue %swift.metadata_response %19, 0
  store ptr %1, ptr %source.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %2, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer)
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  %21 = alloca i8, i64 48, align 16
  %22 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView09OutputRawA0V }>, ptr %21, i32 0, i32 1
  store ptr %C, ptr %22, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i32 1
  store ptr %C.Collection, ptr %23, align 8
  %24 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView09OutputRawA0V }>, ptr %21, i32 0, i32 2
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %24, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  store ptr %2, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %24, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %3, ptr %.count._value, align 8
  %25 = call swiftcc %swift.metadata_response @"$sSpMa"(i64 255, ptr %20) #16
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = extractvalue %swift.metadata_response %25, 1
  %28 = call swiftcc %swift.metadata_response @swift_getTupleTypeMetadata2(i64 0, ptr %26, ptr @"$sSiN", ptr @".str.11.base count ", ptr null) #9
  %29 = extractvalue %swift.metadata_response %28, 0
  call swiftcc void @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTj"(ptr noalias nocapture sret(%swift.opaque) %4, ptr @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlFSpyAJG4base_Si5counttSRyAJGXEfU_TA", ptr %21, ptr %29, ptr noalias nocapture swiftself %1, ptr noalias nocapture swifterror dereferenceable(8) %swifterror, ptr %C, ptr %C.Sequence)
  %30 = load ptr, ptr %swifterror, align 8
  %31 = icmp ne ptr %30, null
  br i1 %31, label %81, label %32

32:                                               ; preds = %entry
  %33 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 0
  %34 = load i64, ptr %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 1
  %36 = load i64, ptr %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, ptr %buffer, i32 0, i32 0
  store i64 %34, ptr %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, ptr %buffer, i32 0, i32 1
  store i64 %36, ptr %38, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  %39 = icmp eq i64 %34, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %32
  %41 = inttoptr i64 %34 to ptr
  br label %42

42:                                               ; preds = %40
  %43 = phi ptr [ %41, %40 ]
  %44 = phi i64 [ %36, %40 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr %buffer.debug)
  %buffer.debug.base = getelementptr inbounds <{ %TSp, %TSi }>, ptr %buffer.debug, i32 0, i32 0
  %buffer.debug.base._rawValue = getelementptr inbounds %TSp, ptr %buffer.debug.base, i32 0, i32 0
  store ptr %43, ptr %buffer.debug.base._rawValue, align 8
  %buffer.debug.count = getelementptr inbounds <{ %TSp, %TSi }>, ptr %buffer.debug, i32 0, i32 1
  %buffer.debug.count._value = getelementptr inbounds %TSi, ptr %buffer.debug.count, i32 0, i32 0
  store i64 %44, ptr %buffer.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.baseAddress4 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %5, i32 0, i32 0
  %.baseAddress4._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress4, i32 0, i32 0
  store ptr %2, ptr %.baseAddress4._rawValue, align 8
  %.count5 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %5, i32 0, i32 1
  %.count5._value = getelementptr inbounds %TSi, ptr %.count5, i32 0, i32 0
  store i64 %3, ptr %.count5._value, align 8
  %45 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %43, i64 %44, ptr noalias nocapture %5, ptr %20, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %46 = extractvalue { ptr, i64 } %45, 0
  %47 = extractvalue { ptr, i64 } %45, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr %buffer)
  br label %76

48:                                               ; preds = %32
  call void @llvm.lifetime.start.p0(i64 16, ptr %view)
  %49 = call swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V16initializeMemory2as4from8IteratorQz9unwritten_AA07MutableaB0Vy7ElementQzG11initializedtAMm_xtSTRzlF"(ptr noalias nocapture %18, ptr %20, ptr noalias nocapture %1, ptr %2, i64 %3, ptr %C, ptr %C.Sequence)
  %50 = extractvalue { ptr, i64 } %49, 0
  %51 = extractvalue { ptr, i64 } %49, 1
  %52 = getelementptr inbounds ptr, ptr %C.Iterator.valueWitnesses, i32 4
  %53 = load ptr, ptr %52, align 8, !invariant.load !17
  %54 = call ptr %53(ptr noalias %it, ptr noalias %18, ptr %C.Iterator) #15
  %view.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %view, i32 0, i32 0
  %view.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %view.start, i32 0, i32 0
  %view.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %view.start._rawValue, i32 0, i32 0
  store ptr %50, ptr %view.start._rawValue._rawValue, align 8
  %view.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %view, i32 0, i32 1
  %view.count._value = getelementptr inbounds %TSi, ptr %view.count, i32 0, i32 0
  store i64 %51, ptr %view.count._value, align 8
  call void asm sideeffect "nop", ""()
  %C.Iterator.IteratorProtocol = call swiftcc ptr @swift_getAssociatedConformanceWitness(ptr %C.Sequence, ptr %C, ptr %C.Iterator, ptr @"$sSTTL", ptr @"$sST8IteratorST_StTn") #8
  call swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque) %14, ptr nocapture swiftself %it, ptr %C.Iterator, ptr %C.Iterator.IteratorProtocol)
  %55 = call ptr @"$s7ElementQzSgSlRzlWOc"(ptr %14, ptr %13, ptr %20, ptr %10)
  %56 = getelementptr inbounds ptr, ptr %20, i64 -1
  %.valueWitnesses3 = load ptr, ptr %56, align 8, !invariant.load !17, !dereferenceable !18
  %57 = getelementptr inbounds ptr, ptr %.valueWitnesses3, i32 6
  %58 = load ptr, ptr %57, align 8, !invariant.load !17
  %59 = call i32 %58(ptr noalias %13, i32 1, ptr %20) #4
  %60 = icmp ne i32 %59, 1
  br i1 %60, label %62, label %64

61:                                               ; No predecessors!
  unreachable

62:                                               ; preds = %48
  %63 = call ptr @"$s7ElementQzSgSlRzlWOh"(ptr %13, ptr %20, ptr %10)
  br label %65

64:                                               ; preds = %48
  br label %65

65:                                               ; preds = %62, %64
  %66 = phi i1 [ true, %64 ], [ false, %62 ]
  %67 = call ptr @"$s7ElementQzSgSlRzlWOh"(ptr %14, ptr %20, ptr %10)
  %68 = call i1 @llvm.expect.i1(i1 %66, i1 true)
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.59.buffer cannot contain every element from source collection.", i64 59, i1 true)
  %71 = extractvalue { i64, ptr } %70, 0
  %72 = extractvalue { i64, ptr } %70, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %71, ptr %72, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 95, i32 1)
  unreachable

73:                                               ; preds = %65
  call void asm sideeffect "nop", ""()
  call void @llvm.lifetime.end.p0(i64 16, ptr %view)
  %74 = getelementptr inbounds ptr, ptr %C.Iterator.valueWitnesses, i32 1
  %75 = load ptr, ptr %74, align 8, !invariant.load !17
  call void %75(ptr noalias %it, ptr %C.Iterator) #15
  call void @llvm.lifetime.end.p0(i64 16, ptr %buffer)
  br label %76

76:                                               ; preds = %42, %73
  %77 = phi ptr [ %50, %73 ], [ %46, %42 ]
  %78 = phi i64 [ %51, %73 ], [ %47, %42 ]
  call void @llvm.lifetime.end.p0(i64 -1, ptr %it)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %18)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %14)
  call void @llvm.lifetime.end.p0(i64 -1, ptr %13)
  %79 = insertvalue { ptr, i64 } undef, ptr %77, 0
  %80 = insertvalue { ptr, i64 } %79, i64 %78, 1
  ret { ptr, i64 } %80

81:                                               ; preds = %entry
  %82 = phi ptr [ %30, %entry ]
  store ptr null, ptr %swifterror, align 8
  unreachable
}

define internal swiftcc void @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlFSpyAJG4base_Si5counttSRyAJGXEfU_"(ptr noalias nocapture sret(<{ %TSp, %TSi }>) %0, i64 %1, i64 %2, ptr %3, i64 %4, ptr %C, ptr %C.Collection, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %C1 = alloca ptr, align 8
  %"$0.debug" = alloca %TSR, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %sourceAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceAddress.debug, i8 0, i64 8, i1 false)
  %7 = alloca %TSR, align 8
  %elementStride.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementStride.debug, i8 0, i64 8, i1 false)
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %TSi, align 8
  %elementCount.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementCount.debug, i8 0, i64 8, i1 false)
  %remainder.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %remainder.debug, i8 0, i64 8, i1 false)
  %12 = alloca %TSvSg, align 8
  %start.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %start.debug, i8 0, i64 8, i1 false)
  store ptr %C, ptr %C1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %"$0.debug")
  %"$0.debug._position" = getelementptr inbounds %TSR, ptr %"$0.debug", i32 0, i32 0
  store i64 %1, ptr %"$0.debug._position", align 8
  %"$0.debug.count" = getelementptr inbounds %TSR, ptr %"$0.debug", i32 0, i32 1
  %"$0.debug.count._value" = getelementptr inbounds %TSi, ptr %"$0.debug.count", i32 0, i32 0
  store i64 %2, ptr %"$0.debug.count._value", align 8
  %13 = getelementptr inbounds ptr, ptr %C.Collection, i32 1
  %C.Sequence = load ptr, ptr %13, align 8, !invariant.load !17
  %14 = call swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64 0, ptr %C.Sequence, ptr %C, ptr @"$sSTTL", ptr @"$s7ElementSTTl") #8
  %C.Element = extractvalue %swift.metadata_response %14, 0
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %3, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %15 = call swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64 %1, i64 %2, ptr %C.Element)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %entry
  %18 = inttoptr i64 %15 to ptr
  br label %20

19:                                               ; preds = %entry
  br label %78

20:                                               ; preds = %17
  %21 = phi ptr [ %18, %17 ]
  store ptr %21, ptr %sourceAddress.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %7)
  %._position = getelementptr inbounds %TSR, ptr %7, i32 0, i32 0
  store i64 %1, ptr %._position, align 8
  %.count2 = getelementptr inbounds %TSR, ptr %7, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  store i64 %2, ptr %.count2._value, align 8
  %22 = call swiftcc %swift.metadata_response @"$sSRMa"(i64 0, ptr %C.Element) #16
  %23 = extractvalue %swift.metadata_response %22, 0
  %24 = call ptr @swift_getWitnessTable(ptr @"$sSRyxGSlsMc", ptr %23, ptr undef) #4
  %25 = call swiftcc i1 @"$sSlsE7isEmptySbvg"(ptr %23, ptr %24, ptr noalias nocapture swiftself %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr %7)
  br i1 %25, label %26, label %77

26:                                               ; preds = %20
  %27 = getelementptr inbounds ptr, ptr %C.Element, i64 -1
  %C.Element.valueWitnesses = load ptr, ptr %27, align 8, !invariant.load !17, !dereferenceable !18
  %28 = getelementptr inbounds %swift.vwtable, ptr %C.Element.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %28, align 8, !invariant.load !17
  store i64 %stride, ptr %elementStride.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %8)
  call void @llvm.lifetime.start.p0(i64 8, ptr %9)
  call void @llvm.lifetime.start.p0(i64 8, ptr %10)
  %._value = getelementptr inbounds %TSi, ptr %10, i32 0, i32 0
  store i64 %4, ptr %._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %11)
  %._value3 = getelementptr inbounds %TSi, ptr %11, i32 0, i32 0
  store i64 %stride, ptr %._value3, align 8
  %29 = call ptr @"$sS2iSzsWl"() #16
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %8, ptr noalias nocapture %9, ptr noalias nocapture %11, ptr @"$sSiN", ptr %29, ptr noalias nocapture swiftself %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %11)
  call void @llvm.lifetime.end.p0(i64 8, ptr %10)
  %._value4 = getelementptr inbounds %TSi, ptr %8, i32 0, i32 0
  %30 = load i64, ptr %._value4, align 8
  %._value5 = getelementptr inbounds %TSi, ptr %9, i32 0, i32 0
  %31 = load i64, ptr %._value5, align 8
  store i64 %30, ptr %elementCount.debug, align 8
  store i64 %31, ptr %remainder.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %9)
  call void @llvm.lifetime.end.p0(i64 8, ptr %8)
  call void asm sideeffect "nop", ""()
  %32 = icmp eq i64 %31, 0
  %33 = call i1 @llvm.expect.i1(i1 %32, i1 true)
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %36 = extractvalue { i64, ptr } %35, 0
  %37 = extractvalue { i64, ptr } %35, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %36, ptr %37, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 78, i32 1)
  unreachable

38:                                               ; preds = %26
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %39 = ptrtoint ptr %3 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr %12)
  store i64 %39, ptr %12, align 8
  %40 = load i64, ptr %12, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %._rawValue = getelementptr inbounds %TSv, ptr %12, i32 0, i32 0
  %43 = load ptr, ptr %._rawValue, align 8
  %44 = ptrtoint ptr %43 to i64
  br label %46

45:                                               ; preds = %38
  br label %46

46:                                               ; preds = %42, %45
  %47 = phi i64 [ 0, %45 ], [ %44, %42 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %12)
  %48 = icmp eq i64 %stride, 0
  %49 = call i1 @llvm.expect.i1(i1 %48, i1 false)
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.39.Division by zero in remainder operation" to i64), i64 39, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14366, i32 1)
  unreachable

51:                                               ; preds = %46
  %52 = icmp eq i64 %47, -9223372036854775808
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = icmp eq i64 %stride, -1
  br label %56

55:                                               ; preds = %51
  br label %56

56:                                               ; preds = %53, %55
  %57 = phi i1 [ false, %55 ], [ %54, %53 ]
  %58 = call i1 @llvm.expect.i1(i1 %57, i1 false)
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.54.Division results in an overflow in remainder operation" to i64), i64 54, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14371, i32 1)
  unreachable

60:                                               ; preds = %56
  %61 = srem i64 %47, %stride
  %62 = icmp eq i64 %61, 0
  %63 = call i1 @llvm.expect.i1(i1 %62, i1 true)
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.64.buffer base address must be properly aligned to access C.Element", i64 64, i1 true)
  %66 = extractvalue { i64, ptr } %65, 0
  %67 = extractvalue { i64, ptr } %65, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %66, ptr %67, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 79, i32 1)
  unreachable

68:                                               ; preds = %60
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %69 = icmp slt i64 %2, %30
  %70 = call i1 @llvm.expect.i1(i1 %69, i1 true)
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %73 = extractvalue { i64, ptr } %72, 0
  %74 = extractvalue { i64, ptr } %72, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %73, ptr %74, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 83, i32 1)
  unreachable

75:                                               ; preds = %68
  call void asm sideeffect "nop", ""()
  %76 = call swiftcc ptr @"$sSv16initializeMemory2as4from5countSpyxGxm_SPyxGSitlF"(ptr %C.Element, ptr %21, i64 %2, ptr %3, ptr %C.Element)
  store ptr %76, ptr %start.debug, align 8
  %.base6 = getelementptr inbounds <{ %TSp, %TSi }>, ptr %0, i32 0, i32 0
  %.count7 = getelementptr inbounds <{ %TSp, %TSi }>, ptr %0, i32 0, i32 1
  %.base6._rawValue = getelementptr inbounds %TSp, ptr %.base6, i32 0, i32 0
  store ptr %76, ptr %.base6._rawValue, align 8
  %.count7._value = getelementptr inbounds %TSi, ptr %.count7, i32 0, i32 0
  store i64 %2, ptr %.count7._value, align 8
  br label %79

77:                                               ; preds = %20
  br label %78

78:                                               ; preds = %77, %19
  %.base = getelementptr inbounds <{ %TSp, %TSi }>, ptr %0, i32 0, i32 0
  %.count = getelementptr inbounds <{ %TSp, %TSi }>, ptr %0, i32 0, i32 1
  %.base._rawValue = getelementptr inbounds %TSp, ptr %.base, i32 0, i32 0
  store ptr %3, ptr %.base._rawValue, align 8
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 0, ptr %.count._value, align 8
  br label %79

79:                                               ; preds = %75, %78
  ret void
}

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V20moveInitializeMemory2as14fromContentsOfAA07MutableaB0VyxGxm_SryxGtlF"(ptr %0, i64 %1, i64 %2, ptr %3, i64 %4, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca %TSr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %5 = alloca %T10BufferView09OutputRawA0V, align 8
  %sourceAddress.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sourceAddress.debug, i8 0, i64 8, i1 false)
  %6 = alloca %TSr, align 8
  %elementStride.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementStride.debug, i8 0, i64 8, i1 false)
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %elementCount.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %elementCount.debug, i8 0, i64 8, i1 false)
  %remainder.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %remainder.debug, i8 0, i64 8, i1 false)
  %11 = alloca %TSvSg, align 8
  %initialized.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %initialized.debug, i8 0, i64 8, i1 false)
  %12 = alloca %T10BufferView09OutputRawA0V, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %type.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %source.debug)
  %source.debug._position = getelementptr inbounds %TSr, ptr %source.debug, i32 0, i32 0
  store i64 %1, ptr %source.debug._position, align 8
  %source.debug.count = getelementptr inbounds %TSr, ptr %source.debug, i32 0, i32 1
  %source.debug.count._value = getelementptr inbounds %TSi, ptr %source.debug.count, i32 0, i32 0
  store i64 %2, ptr %source.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %3, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  %13 = call swiftcc i64 @"$sSr11baseAddressSpyxGSgvg"(i64 %1, i64 %2, ptr %T)
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %entry
  %16 = inttoptr i64 %13 to ptr
  br label %18

17:                                               ; preds = %entry
  br label %80

18:                                               ; preds = %15
  %19 = phi ptr [ %16, %15 ]
  store ptr %19, ptr %sourceAddress.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %6)
  %._position = getelementptr inbounds %TSr, ptr %6, i32 0, i32 0
  store i64 %1, ptr %._position, align 8
  %.count2 = getelementptr inbounds %TSr, ptr %6, i32 0, i32 1
  %.count2._value = getelementptr inbounds %TSi, ptr %.count2, i32 0, i32 0
  store i64 %2, ptr %.count2._value, align 8
  %20 = call swiftcc %swift.metadata_response @"$sSrMa"(i64 0, ptr %T) #16
  %21 = extractvalue %swift.metadata_response %20, 0
  %22 = call ptr @swift_getWitnessTable(ptr @"$sSryxGSlsMc", ptr %21, ptr undef) #4
  %23 = call swiftcc i1 @"$sSlsE7isEmptySbvg"(ptr %21, ptr %22, ptr noalias nocapture swiftself %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr %6)
  %24 = xor i1 %23, true
  br i1 %24, label %25, label %79

25:                                               ; preds = %18
  %26 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %26, align 8, !invariant.load !17, !dereferenceable !18
  %27 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %27, align 8, !invariant.load !17
  store i64 %stride, ptr %elementStride.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  call void @llvm.lifetime.start.p0(i64 8, ptr %8)
  call void @llvm.lifetime.start.p0(i64 8, ptr %9)
  %._value = getelementptr inbounds %TSi, ptr %9, i32 0, i32 0
  store i64 %4, ptr %._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %10)
  %._value3 = getelementptr inbounds %TSi, ptr %10, i32 0, i32 0
  store i64 %stride, ptr %._value3, align 8
  %28 = call ptr @"$sS2iSzsWl"() #16
  call swiftcc void @"$sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"(ptr noalias nocapture %7, ptr noalias nocapture %8, ptr noalias nocapture %10, ptr @"$sSiN", ptr %28, ptr noalias nocapture swiftself %9)
  call void @llvm.lifetime.end.p0(i64 8, ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr %9)
  %._value4 = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  %29 = load i64, ptr %._value4, align 8
  %._value5 = getelementptr inbounds %TSi, ptr %8, i32 0, i32 0
  %30 = load i64, ptr %._value5, align 8
  store i64 %29, ptr %elementCount.debug, align 8
  store i64 %30, ptr %remainder.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  call void asm sideeffect "nop", ""()
  %31 = icmp eq i64 %30, 0
  %32 = call i1 @llvm.expect.i1(i1 %31, i1 true)
  br i1 %32, label %37, label %33

33:                                               ; preds = %25
  %34 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.47.buffer must contain a whole number of elements.", i64 47, i1 true)
  %35 = extractvalue { i64, ptr } %34, 0
  %36 = extractvalue { i64, ptr } %34, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %35, ptr %36, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 113, i32 1)
  unreachable

37:                                               ; preds = %25
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %38 = ptrtoint ptr %3 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr %11)
  store i64 %38, ptr %11, align 8
  %39 = load i64, ptr %11, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %._rawValue = getelementptr inbounds %TSv, ptr %11, i32 0, i32 0
  %42 = load ptr, ptr %._rawValue, align 8
  %43 = ptrtoint ptr %42 to i64
  br label %45

44:                                               ; preds = %37
  br label %45

45:                                               ; preds = %41, %44
  %46 = phi i64 [ 0, %44 ], [ %43, %41 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %11)
  %47 = icmp eq i64 %stride, 0
  %48 = call i1 @llvm.expect.i1(i1 %47, i1 false)
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.39.Division by zero in remainder operation" to i64), i64 39, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14366, i32 1)
  unreachable

50:                                               ; preds = %45
  %51 = icmp eq i64 %46, -9223372036854775808
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = icmp eq i64 %stride, -1
  br label %55

54:                                               ; preds = %50
  br label %55

55:                                               ; preds = %52, %54
  %56 = phi i1 [ false, %54 ], [ %53, %52 ]
  %57 = call i1 @llvm.expect.i1(i1 %56, i1 false)
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.54.Division results in an overflow in remainder operation" to i64), i64 54, i8 2, i64 ptrtoint (ptr @".str.24.Swift/IntegerTypes.swift" to i64), i64 24, i8 2, i64 14371, i32 1)
  unreachable

59:                                               ; preds = %55
  %60 = srem i64 %46, %stride
  %61 = icmp eq i64 %60, 0
  %62 = call i1 @llvm.expect.i1(i1 %61, i1 true)
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.65.buffer base address must be properly aligned to access C.Element.", i64 65, i1 true)
  %65 = extractvalue { i64, ptr } %64, 0
  %66 = extractvalue { i64, ptr } %64, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %65, ptr %66, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 117, i32 1)
  unreachable

67:                                               ; preds = %59
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %68 = icmp slt i64 %2, %29
  %69 = call i1 @llvm.expect.i1(i1 %68, i1 true)
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = call swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr @".str.48.buffer cannot contain every element from source.", i64 48, i1 true)
  %72 = extractvalue { i64, ptr } %71, 0
  %73 = extractvalue { i64, ptr } %71, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %72, ptr %73, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 121, i32 1)
  unreachable

74:                                               ; preds = %67
  call void asm sideeffect "nop", ""()
  %75 = call swiftcc ptr @"$sSv20moveInitializeMemory2as4from5countSpyxGxm_AESitlF"(ptr %T, ptr %19, i64 %2, ptr %3, ptr %T)
  store ptr %75, ptr %initialized.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %12)
  %.baseAddress6 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %12, i32 0, i32 0
  %.baseAddress6._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress6, i32 0, i32 0
  store ptr %3, ptr %.baseAddress6._rawValue, align 8
  %.count7 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %12, i32 0, i32 1
  %.count7._value = getelementptr inbounds %TSi, ptr %.count7, i32 0, i32 0
  store i64 %4, ptr %.count7._value, align 8
  %76 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %75, i64 %2, ptr noalias nocapture %12, ptr %T, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %77 = extractvalue { ptr, i64 } %76, 0
  %78 = extractvalue { ptr, i64 } %76, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %12)
  br label %84

79:                                               ; preds = %18
  br label %80

80:                                               ; preds = %79, %17
  call void @llvm.lifetime.start.p0(i64 16, ptr %5)
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %5, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  store ptr %3, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %5, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  %81 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %3, i64 0, ptr noalias nocapture %5, ptr %T, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %82 = extractvalue { ptr, i64 } %81, 0
  %83 = extractvalue { ptr, i64 } %81, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %5)
  br label %84

84:                                               ; preds = %74, %80
  %85 = phi ptr [ %82, %80 ], [ %77, %74 ]
  %86 = phi i64 [ %83, %80 ], [ %78, %74 ]
  %87 = insertvalue { ptr, i64 } undef, ptr %85, 0
  %88 = insertvalue { ptr, i64 } %87, i64 %86, 1
  ret { ptr, i64 } %88
}

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V20moveInitializeMemory2as14fromContentsOfAA07MutableaB0VyxGxm_s5SliceVySryxGGtlF"(ptr %0, i64 %1, i64 %2, i64 %3, i64 %4, ptr %5, i64 %6, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %source.debug = alloca %Ts5SliceV, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %source.debug, i8 0, i64 32, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %rebased.debug = alloca %TSr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %rebased.debug, i8 0, i64 16, i1 false)
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %type.debug, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr %source.debug)
  %source.debug._startIndex = getelementptr inbounds %Ts5SliceV, ptr %source.debug, i32 0, i32 0
  %source.debug._startIndex._value = getelementptr inbounds %TSi, ptr %source.debug._startIndex, i32 0, i32 0
  store i64 %1, ptr %source.debug._startIndex._value, align 8
  %source.debug._endIndex = getelementptr inbounds %Ts5SliceV, ptr %source.debug, i32 0, i32 1
  %source.debug._endIndex._value = getelementptr inbounds %TSi, ptr %source.debug._endIndex, i32 0, i32 0
  store i64 %2, ptr %source.debug._endIndex._value, align 8
  %source.debug._base = getelementptr inbounds %Ts5SliceV, ptr %source.debug, i32 0, i32 2
  %source.debug._base._position = getelementptr inbounds %TSr, ptr %source.debug._base, i32 0, i32 0
  store i64 %3, ptr %source.debug._base._position, align 8
  %source.debug._base.count = getelementptr inbounds %TSr, ptr %source.debug._base, i32 0, i32 1
  %source.debug._base.count._value = getelementptr inbounds %TSi, ptr %source.debug._base.count, i32 0, i32 0
  store i64 %4, ptr %source.debug._base.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %5, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %6, ptr %self.debug.count._value, align 8
  %7 = call swiftcc { i64, i64 } @"$sSr8rebasingSryxGs5SliceVyABG_tcfC"(i64 %1, i64 %2, i64 %3, i64 %4, ptr %T)
  %8 = extractvalue { i64, i64 } %7, 0
  %9 = extractvalue { i64, i64 } %7, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr %rebased.debug)
  %rebased.debug._position = getelementptr inbounds %TSr, ptr %rebased.debug, i32 0, i32 0
  store i64 %8, ptr %rebased.debug._position, align 8
  %rebased.debug.count = getelementptr inbounds %TSr, ptr %rebased.debug, i32 0, i32 1
  %rebased.debug.count._value = getelementptr inbounds %TSi, ptr %rebased.debug.count, i32 0, i32 0
  store i64 %9, ptr %rebased.debug.count._value, align 8
  %10 = call swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V20moveInitializeMemory2as14fromContentsOfAA07MutableaB0VyxGxm_SryxGtlF"(ptr %T, i64 %8, i64 %9, ptr %5, i64 %6, ptr %T)
  %11 = extractvalue { ptr, i64 } %10, 0
  %12 = extractvalue { ptr, i64 } %10, 1
  %13 = insertvalue { ptr, i64 } undef, ptr %11, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14
}

define weak_odr hidden swiftcc i64 @"$s10BufferView09OutputRawA0V10storeBytes2of12toByteOffset2asSix_SixmtlFfA0_"(ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  ret i64 0
}

define swiftcc i64 @"$s10BufferView09OutputRawA0V10storeBytes2of12toByteOffset2asSix_SixmtlF"(ptr noalias nocapture %0, i64 %1, ptr %2, ptr %3, i64 %4, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  %value.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %value.debug, i8 0, i64 8, i1 false)
  %offset.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %offset.debug, i8 0, i64 8, i1 false)
  %type.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %type.debug, i8 0, i64 8, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %value.debug, align 8
  store i64 %1, ptr %offset.debug, align 8
  store ptr %2, ptr %type.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %3, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  call void asm sideeffect "nop", ""()
  %5 = icmp slt i64 %1, 0
  %6 = xor i1 %5, true
  %7 = call i1 @llvm.expect.i1(i1 %6, i1 true)
  br i1 %7, label %12, label %8

8:                                                ; preds = %entry
  %9 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %10 = extractvalue { i64, ptr } %9, 0
  %11 = extractvalue { i64, ptr } %9, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %10, ptr %11, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 148, i32 1)
  unreachable

12:                                               ; preds = %entry
  call void asm sideeffect "nop", ""()
  call void asm sideeffect "nop", ""()
  %13 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %13, align 8, !invariant.load !17, !dereferenceable !18
  %14 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %14, align 8, !invariant.load !17
  %15 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %stride)
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = extractvalue { i64, i1 } %15, 1
  %18 = call i1 @llvm.expect.i1(i1 %17, i1 false)
  br i1 %18, label %33, label %19

19:                                               ; preds = %12
  %20 = icmp slt i64 %4, %16
  %21 = xor i1 %20, true
  %22 = call i1 @llvm.expect.i1(i1 %21, i1 true)
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = call swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"(ptr swiftself null)
  %25 = extractvalue { i64, ptr } %24, 0
  %26 = extractvalue { i64, ptr } %24, 1
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64 ptrtoint (ptr @".str.19.Precondition failed" to i64), i64 19, i8 2, i64 %25, ptr %26, i64 ptrtoint (ptr @".str.32.BufferView/OutputRawBuffer.swift" to i64), i64 32, i8 2, i64 149, i32 1)
  unreachable

27:                                               ; preds = %19
  call void asm sideeffect "nop", ""()
  call swiftcc void @_swift_se0349_UnsafeMutableRawPointer_storeBytes(ptr noalias nocapture %0, i64 %1, ptr %T, ptr %3, ptr %T)
  %28 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %stride)
  %29 = extractvalue { i64, i1 } %28, 0
  %30 = extractvalue { i64, i1 } %28, 1
  %31 = call i1 @llvm.expect.i1(i1 %30, i1 false)
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  ret i64 %29

33:                                               ; preds = %12
  call void @llvm.trap()
  unreachable

34:                                               ; preds = %27
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden swiftcc void @_swift_se0349_UnsafeMutableRawPointer_storeBytes(ptr noalias nocapture %0, i64 %1, ptr %2, ptr %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  %4 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %4, align 8, !invariant.load !17, !dereferenceable !18
  %5 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %5, align 8, !invariant.load !17
  %6 = and i32 %flags, 65536
  %flags.isTriviallyDestroyable = icmp eq i32 %6, 0
  %7 = call i1 @llvm.expect.i1(i1 %flags.isTriviallyDestroyable, i1 true)
  br i1 %7, label %9, label %8

8:                                                ; preds = %entry
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @.str.0. to i64), i64 0, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 1304, i32 1)
  unreachable

9:                                                ; preds = %entry
  %10 = getelementptr inbounds i8, ptr %3, i64 %1
  %11 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 8
  %size = load i64, ptr %11, align 8, !invariant.load !17
  %12 = icmp slt i64 %size, 0
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 false)
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @llvm.memcpy.p0.p0.i64(ptr %10, ptr %0, i64 %size, i1 false)
  ret void

15:                                               ; preds = %9
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.35.Negative value is not representable" to i64), i64 35, i8 2, i64 ptrtoint (ptr @".str.20.Swift/Integers.swift" to i64), i64 20, i8 2, i64 3422, i32 1)
  unreachable
}

define swiftcc { ptr, i64 } @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlF"(ptr %0, ptr %1, ptr %2, ptr %3, i64 %4, ptr %T, ptr swiftself %5, ptr noalias nocapture swifterror dereferenceable(8) %6) #0 {
entry:
  %T1 = alloca ptr, align 8
  %as.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %as.debug, i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %7 = alloca %TSi, align 8
  %initializedCapacity.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %initializedCapacity.debug, i8 0, i64 8, i1 false)
  %boundPointer.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %boundPointer.debug, i8 0, i64 8, i1 false)
  %8 = alloca %T10BufferView09OutputRawA0V, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %0, ptr %as.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %1, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %2, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %3, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %4, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %7)
  %9 = alloca i8, i64 56, align 16
  %10 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %9, i32 0, i32 1
  store ptr %T, ptr %10, align 8
  %11 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %9, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 0
  store ptr %1, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %11, i32 0, i32 1
  store ptr %2, ptr %.data, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %9, i32 0, i32 3
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %12, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  store ptr %3, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %12, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  store i64 %4, ptr %.count._value, align 8
  call swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %7, ptr %T, i64 %4, ptr @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlFSiAIKXEfU_TA", ptr %9, ptr %3, ptr %T, ptr @"$sSiN", ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %6)
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %entry
  %._value = getelementptr inbounds %TSi, ptr %7, i32 0, i32 0
  %16 = load i64, ptr %._value, align 8
  store i64 %16, ptr %initializedCapacity.debug, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  store ptr %3, ptr %boundPointer.debug, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %8)
  %.baseAddress2 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 0
  %.baseAddress2._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress2, i32 0, i32 0
  store ptr %3, ptr %.baseAddress2._rawValue, align 8
  %.count3 = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 1
  %.count3._value = getelementptr inbounds %TSi, ptr %.count3, i32 0, i32 0
  store i64 %4, ptr %.count3._value, align 8
  %17 = call swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr %3, i64 %16, ptr noalias nocapture %8, ptr %T, ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2))
  %18 = extractvalue { ptr, i64 } %17, 0
  %19 = extractvalue { ptr, i64 } %17, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr %8)
  %20 = insertvalue { ptr, i64 } undef, ptr %18, 0
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1
  ret { ptr, i64 } %21

22:                                               ; preds = %entry
  %23 = phi ptr [ %13, %entry ]
  store ptr null, ptr %6, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %7)
  store ptr %23, ptr %6, align 8
  ret { ptr, i64 } undef
}

define internal swiftcc void @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlFSiAIKXEfU_"(ptr noalias nocapture sret(%TSi) %0, ptr %1, ptr %2, ptr %3, ptr %4, i64 %5, ptr %T, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %T1 = alloca ptr, align 8
  %"$0.debug" = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$0.debug", i8 0, i64 8, i1 false)
  %body.debug = alloca %swift.noescape.function, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %body.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  store ptr %T, ptr %T1, align 8
  store ptr %1, ptr %"$0.debug", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %body.debug)
  %body.debug.fn = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 0
  store ptr %2, ptr %body.debug.fn, align 8
  %body.debug.data = getelementptr inbounds %swift.noescape.function, ptr %body.debug, i32 0, i32 1
  store ptr %3, ptr %body.debug.data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %4, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %5, ptr %self.debug.count._value, align 8
  %8 = call swiftcc i64 %2(ptr %1, i64 %5, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %9 = load ptr, ptr %7, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %entry
  %12 = phi i64 [ %8, %entry ]
  %._value = getelementptr inbounds %TSi, ptr %0, i32 0, i32 0
  store i64 %12, ptr %._value, align 8
  ret void

13:                                               ; preds = %entry
  %14 = phi ptr [ %9, %entry ]
  store ptr null, ptr %7, align 8
  store ptr %14, ptr %7, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSv17withMemoryRebound2to8capacity_q_xm_Siq_SpyxGKXEtKr0_lF"(ptr noalias nocapture sret(%swift.opaque) %0, ptr %1, i64 %2, ptr %3, ptr %4, ptr %5, ptr %T, ptr %Result, ptr swiftself %6, ptr noalias nocapture swifterror dereferenceable(8) %7) #0 {
entry:
  %T1 = alloca ptr, align 8
  %Result2 = alloca ptr, align 8
  store ptr %T, ptr %T1, align 8
  store ptr %Result, ptr %Result2, align 8
  %8 = ptrtoint ptr %5 to i64
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 10
  %flags = load i32, ptr %10, align 8, !invariant.load !17
  %11 = zext i32 %flags to i64
  %flags.alignmentMask = and i64 %11, 255
  %12 = add i64 %flags.alignmentMask, 1
  %13 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %12, i64 1)
  %14 = extractvalue { i64, i1 } %13, 0
  %15 = extractvalue { i64, i1 } %13, 1
  %16 = call i1 @llvm.expect.i1(i1 %15, i1 false)
  br i1 %16, label %28, label %17

17:                                               ; preds = %entry
  %18 = and i64 %8, %14
  %19 = icmp eq i64 %18, 0
  %20 = call i1 @llvm.expect.i1(i1 %19, i1 true)
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.50.self must be a properly aligned pointer for type T" to i64), i64 50, i8 2, i64 ptrtoint (ptr @".str.28.Swift/UnsafeRawPointer.swift" to i64), i64 28, i8 2, i64 941, i32 1)
  unreachable

22:                                               ; preds = %17
  call swiftcc void %3(ptr noalias nocapture sret(%swift.opaque) %0, ptr %5, ptr swiftself %4, ptr noalias nocapture swifterror dereferenceable(8) %7)
  %23 = load ptr, ptr %7, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = phi ptr [ %23, %22 ]
  store ptr null, ptr %7, align 8
  store ptr %26, ptr %7, align 8
  ret void

27:                                               ; preds = %22
  ret void

28:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define swiftcc i1 @"$s10BufferView09OutputRawA0V14hasPrefixRangeySbAA07MutableaB0VyxGlF"(ptr %0, i64 %1, ptr %2, i64 %3, ptr %T) #0 {
entry:
  %T1 = alloca ptr, align 8
  %view.debug = alloca %T10BufferView07MutableaB0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %view.debug, i8 0, i64 16, i1 false)
  %self.debug = alloca %T10BufferView09OutputRawA0V, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %self.debug, i8 0, i64 16, i1 false)
  %4 = alloca %TSv, align 8
  %5 = alloca %TSV, align 8
  store ptr %T, ptr %T1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %view.debug)
  %view.debug.start = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %view.debug, i32 0, i32 0
  %view.debug.start._rawValue = getelementptr inbounds %T10BufferView0aB5IndexV, ptr %view.debug.start, i32 0, i32 0
  %view.debug.start._rawValue._rawValue = getelementptr inbounds %TSV, ptr %view.debug.start._rawValue, i32 0, i32 0
  store ptr %0, ptr %view.debug.start._rawValue._rawValue, align 8
  %view.debug.count = getelementptr inbounds %T10BufferView07MutableaB0V, ptr %view.debug, i32 0, i32 1
  %view.debug.count._value = getelementptr inbounds %TSi, ptr %view.debug.count, i32 0, i32 0
  store i64 %1, ptr %view.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %self.debug)
  %self.debug.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 0
  %self.debug.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %self.debug.baseAddress, i32 0, i32 0
  store ptr %2, ptr %self.debug.baseAddress._rawValue, align 8
  %self.debug.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %self.debug, i32 0, i32 1
  %self.debug.count._value = getelementptr inbounds %TSi, ptr %self.debug.count, i32 0, i32 0
  store i64 %3, ptr %self.debug.count._value, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %4)
  %._rawValue = getelementptr inbounds %TSv, ptr %4, i32 0, i32 0
  store ptr %2, ptr %._rawValue, align 8
  %6 = call swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr %0, i64 %1, ptr %T)
  call void @llvm.lifetime.start.p0(i64 8, ptr %5)
  %._rawValue2 = getelementptr inbounds %TSV, ptr %5, i32 0, i32 0
  store ptr %6, ptr %._rawValue2, align 8
  %7 = call swiftcc i1 @"$ss8_PointerPsE2eeoiySbx_qd__tsAARd__lFZ"(ptr noalias nocapture %4, ptr noalias nocapture %5, ptr @"$sSvN", ptr @"$sSVN", ptr @"$sSvs8_PointersWP", ptr @"$sSVs8_PointersWP", ptr swiftself @"$sSvN")
  call void @llvm.lifetime.end.p0(i64 8, ptr %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr %4)
  br i1 %7, label %8, label %18

8:                                                ; preds = %entry
  %9 = getelementptr inbounds ptr, ptr %T, i64 -1
  %T.valueWitnesses = load ptr, ptr %9, align 8, !invariant.load !17, !dereferenceable !18
  %10 = getelementptr inbounds %swift.vwtable, ptr %T.valueWitnesses, i32 0, i32 9
  %stride = load i64, ptr %10, align 8, !invariant.load !17
  %11 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %1, i64 %stride)
  %12 = extractvalue { i64, i1 } %11, 0
  %13 = extractvalue { i64, i1 } %11, 1
  %14 = call i1 @llvm.expect.i1(i1 %13, i1 false)
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = icmp slt i64 %3, %12
  %17 = xor i1 %16, true
  br label %19

18:                                               ; preds = %entry
  br label %19

19:                                               ; preds = %15, %18
  %20 = phi i1 [ false, %18 ], [ %17, %15 ]
  ret i1 %20

21:                                               ; preds = %8
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden swiftcc i1 @"$ss8_PointerPsE2eeoiySbx_qd__tsAARd__lFZ"(ptr noalias nocapture %0, ptr noalias nocapture %1, ptr %Self, ptr %Other, ptr %Self._Pointer, ptr %Other._Pointer, ptr swiftself %2) #0 {
entry:
  %Self1 = alloca ptr, align 8
  %Other2 = alloca ptr, align 8
  store ptr %Self, ptr %Self1, align 8
  store ptr %Other, ptr %Other2, align 8
  %3 = call swiftcc ptr @"$ss8_PointerP9_rawValueBpvgTj"(ptr noalias nocapture swiftself %0, ptr %Self, ptr %Self._Pointer)
  %4 = call swiftcc ptr @"$ss8_PointerP9_rawValueBpvgTj"(ptr noalias nocapture swiftself %1, ptr %Other, ptr %Other._Pointer)
  %5 = icmp eq ptr %3, %4
  ret i1 %5
}

define linkonce_odr hidden swiftcc { i64, ptr } @"$ss12precondition__4file4lineySbyXK_SSyXKs12StaticStringVSutFfA0_SSycfu_"() #0 {
entry:
  %bitcast = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitcast)
  store i64 -2305843009213693952, ptr %bitcast, align 8
  %0 = load ptr, ptr %bitcast, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitcast)
  %1 = call ptr @swift_bridgeObjectRetain(ptr returned %0) #15
  %2 = insertvalue { i64, ptr } { i64 0, ptr undef }, ptr %0, 1
  ret { i64, ptr } %2
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #6

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF"(i64, i64, i8, i64, ptr, i64, i64, i8, i64, i32) #7

declare swiftcc ptr @"$sSv16initializeMemory2as9repeating5countSpyxGxm_xSitlF"(ptr, ptr noalias nocapture, i64, ptr, ptr) #0

declare swiftcc { ptr, i64 } @"$s10BufferView07MutableaB0V11baseAddress5count9dependsOnACyxGSv_Siqd__tclufC"(ptr, i64, ptr noalias nocapture, ptr, ptr) #0

; Function Attrs: nounwind readnone willreturn
declare swiftcc %swift.metadata_response @swift_getAssociatedTypeWitness(i64, ptr, ptr, ptr, ptr) #8

declare swiftcc %swift.metadata_response @"$sSqMa"(i64, ptr) #0

; Function Attrs: nounwind readonly willreturn
declare swiftcc %swift.metadata_response @swift_checkMetadataState(i64, ptr) #9

declare swiftcc void @"$sST12makeIterator0B0QzyFTj"(ptr noalias nocapture sret(%swift.opaque), ptr noalias nocapture swiftself, ptr, ptr) #0

declare swiftcc void @"$sSt4next7ElementQzSgyFTj"(ptr noalias nocapture sret(%swift.opaque), ptr nocapture swiftself, ptr, ptr) #0

; Function Attrs: nounwind readnone willreturn
declare swiftcc ptr @swift_getAssociatedConformanceWitness(ptr, ptr, ptr, ptr, ptr) #8

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$s7ElementQzSgSTRzlWOh"(ptr %0, ptr %S.Element, ptr %"Optional<S.Element>") #10 {
entry:
  %1 = getelementptr inbounds ptr, ptr %S.Element, i64 -1
  %S.Element.valueWitnesses = load ptr, ptr %1, align 8, !invariant.load !17, !dereferenceable !18
  %2 = getelementptr inbounds ptr, ptr %S.Element.valueWitnesses, i32 6
  %3 = load ptr, ptr %2, align 8, !invariant.load !17
  %4 = call i32 %3(ptr noalias %0, i32 1, ptr %S.Element) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %entry
  %7 = getelementptr inbounds ptr, ptr %S.Element.valueWitnesses, i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %0, ptr %S.Element) #15
  br label %9

9:                                                ; preds = %6, %entry
  ret ptr %0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

define internal swiftcc void @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlFSpyAJG4base_Si5counttSRyAJGXEfU_TA"(ptr noalias nocapture sret(<{ %TSp, %TSi }>) %0, i64 %1, i64 %2, ptr swiftself %3, ptr noalias nocapture swifterror dereferenceable(8) %4) #0 {
entry:
  %C1 = alloca ptr, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView09OutputRawA0V }>, ptr %3, i32 0, i32 1
  %C = load ptr, ptr %5, align 8
  store ptr %C, ptr %C1, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i32 1
  %C.Collection = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds <{ %swift.refcounted, [16 x i8], %T10BufferView09OutputRawA0V }>, ptr %3, i32 0, i32 2
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %7, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  %8 = load ptr, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %7, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %9 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView09OutputRawA0V16initializeMemory2as14fromContentsOfAA07MutableaB0Vy7ElementQzGAJm_xtSlRzlFSpyAJG4base_Si5counttSRyAJGXEfU_"(ptr noalias nocapture sret(<{ %TSp, %TSi }>) %0, i64 %1, i64 %2, ptr %8, i64 %9, ptr %C, ptr %C.Collection, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %4)
  ret void
}

declare swiftcc void @"$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTj"(ptr noalias nocapture sret(%swift.opaque), ptr, ptr, ptr, ptr noalias nocapture swiftself, ptr noalias nocapture swifterror dereferenceable(8), ptr, ptr) #0

declare swiftcc %swift.metadata_response @"$sSpMa"(i64, ptr) #0

; Function Attrs: nounwind readonly willreturn
declare swiftcc %swift.metadata_response @swift_getTupleTypeMetadata2(i64, ptr, ptr, ptr, ptr) #9

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$s7ElementQzSgSlRzlWOc"(ptr %0, ptr %1, ptr %C.Element, ptr %"Optional<C.Element>") #10 {
entry:
  %2 = getelementptr inbounds ptr, ptr %C.Element, i64 -1
  %C.Element.valueWitnesses = load ptr, ptr %2, align 8, !invariant.load !17, !dereferenceable !18
  %3 = getelementptr inbounds ptr, ptr %C.Element.valueWitnesses, i32 6
  %4 = load ptr, ptr %3, align 8, !invariant.load !17
  %5 = call i32 %4(ptr noalias %0, i32 1, ptr %C.Element) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %entry
  %8 = getelementptr inbounds ptr, ptr %C.Element.valueWitnesses, i32 2
  %9 = load ptr, ptr %8, align 8, !invariant.load !17
  %10 = call ptr %9(ptr noalias %1, ptr noalias %0, ptr %C.Element) #15
  %11 = getelementptr inbounds ptr, ptr %C.Element.valueWitnesses, i32 7
  %12 = load ptr, ptr %11, align 8, !invariant.load !17
  call void %12(ptr noalias %1, i32 0, i32 1, ptr %C.Element) #15
  br label %16

13:                                               ; preds = %entry
  %14 = getelementptr inbounds ptr, ptr %"Optional<C.Element>", i64 -1
  %"Optional<C.Element>.valueWitnesses" = load ptr, ptr %14, align 8, !invariant.load !17, !dereferenceable !18
  %15 = getelementptr inbounds %swift.vwtable, ptr %"Optional<C.Element>.valueWitnesses", i32 0, i32 8
  %size = load i64, ptr %15, align 8, !invariant.load !17
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr align 1 %0, i64 %size, i1 false)
  br label %16

16:                                               ; preds = %13, %7
  ret ptr %1
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #12

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$s7ElementQzSgSlRzlWOh"(ptr %0, ptr %C.Element, ptr %"Optional<C.Element>") #10 {
entry:
  %1 = getelementptr inbounds ptr, ptr %C.Element, i64 -1
  %C.Element.valueWitnesses = load ptr, ptr %1, align 8, !invariant.load !17, !dereferenceable !18
  %2 = getelementptr inbounds ptr, ptr %C.Element.valueWitnesses, i32 6
  %3 = load ptr, ptr %2, align 8, !invariant.load !17
  %4 = call i32 %3(ptr noalias %0, i32 1, ptr %C.Element) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %entry
  %7 = getelementptr inbounds ptr, ptr %C.Element.valueWitnesses, i32 1
  %8 = load ptr, ptr %7, align 8, !invariant.load !17
  call void %8(ptr noalias %0, ptr %C.Element) #15
  br label %9

9:                                                ; preds = %6, %entry
  ret ptr %0
}

declare swiftcc { i64, ptr } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(ptr, i64, i1) #0

declare swiftcc i64 @"$sSr11baseAddressSpyxGSgvg"(i64, i64, ptr) #0

declare swiftcc i1 @"$sSlsE7isEmptySbvg"(ptr, ptr, ptr noalias nocapture swiftself) #0

declare swiftcc %swift.metadata_response @"$sSrMa"(i64, ptr) #0

declare swiftcc ptr @"$sSv20moveInitializeMemory2as4from5countSpyxGxm_AESitlF"(ptr, ptr, i64, ptr, ptr) #0

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #7

declare swiftcc { i64, i64 } @"$sSr8rebasingSryxGs5SliceVyABG_tcfC"(i64, i64, i64, i64, ptr) #0

define internal swiftcc void @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlFSiAIKXEfU_TA"(ptr noalias nocapture sret(%TSi) %0, ptr %1, ptr swiftself %2, ptr noalias nocapture swifterror dereferenceable(8) %3) #0 {
entry:
  %T1 = alloca ptr, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %2, i32 0, i32 1
  %T = load ptr, ptr %4, align 8
  store ptr %T, ptr %T1, align 8
  %5 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %2, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.noescape.function, ptr %5, i32 0, i32 0
  %6 = load ptr, ptr %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, ptr %5, i32 0, i32 1
  %7 = load ptr, ptr %.data, align 8
  %8 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.noescape.function, %T10BufferView09OutputRawA0V }>, ptr %2, i32 0, i32 3
  %.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 0
  %.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %.baseAddress, i32 0, i32 0
  %9 = load ptr, ptr %.baseAddress._rawValue, align 8
  %.count = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %8, i32 0, i32 1
  %.count._value = getelementptr inbounds %TSi, ptr %.count, i32 0, i32 0
  %10 = load i64, ptr %.count._value, align 8
  tail call swiftcc void @"$s10BufferView09OutputRawA0V24withUnsafeMutablePointer2as_AA0gaB0VyxGxm_SiSpyxG_SitKXEtKlFSiAIKXEfU_"(ptr noalias nocapture sret(%TSi) %0, ptr %1, ptr %6, ptr %7, ptr %9, i64 %10, ptr %T, ptr swiftself undef, ptr noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc ptr @"$s10BufferView07MutableaB0V10startIndexAA0abE0VyxGvg"(ptr, i64, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind
define linkonce_odr hidden ptr @__swift_memcpy16_8(ptr %0, ptr %1, ptr %2) #13 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 16, i1 false)
  ret ptr %0
}

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(ptr %0, ptr %1) #13 {
entry:
  ret void
}

; Function Attrs: nounwind readonly
define internal i32 @"$s10BufferView09OutputRawA0Vwet"(ptr noalias %value, i32 %numEmptyCases, ptr %OutputRawBuffer) #14 {
entry:
  %0 = icmp eq i32 0, %numEmptyCases
  br i1 %0, label %34, label %1

1:                                                ; preds = %entry
  %2 = icmp ugt i32 %numEmptyCases, 1
  br i1 %2, label %3, label %30

3:                                                ; preds = %1
  %4 = sub i32 %numEmptyCases, 1
  %5 = getelementptr inbounds i8, ptr %value, i32 16
  br i1 false, label %6, label %7

6:                                                ; preds = %3
  br label %19

7:                                                ; preds = %3
  br i1 true, label %8, label %11

8:                                                ; preds = %7
  %9 = load i8, ptr %5, align 1
  %10 = zext i8 %9 to i32
  br label %19

11:                                               ; preds = %7
  br i1 false, label %12, label %15

12:                                               ; preds = %11
  %13 = load i16, ptr %5, align 1
  %14 = zext i16 %13 to i32
  br label %19

15:                                               ; preds = %11
  br i1 false, label %16, label %18

16:                                               ; preds = %15
  %17 = load i32, ptr %5, align 1
  br label %19

18:                                               ; preds = %15
  unreachable

19:                                               ; preds = %16, %12, %8, %6
  %20 = phi i32 [ 0, %6 ], [ %10, %8 ], [ %14, %12 ], [ %17, %16 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = sub i32 %20, 1
  %24 = shl i32 %23, 128
  %25 = select i1 true, i32 0, i32 %24
  %26 = load i128, ptr %value, align 1
  %27 = trunc i128 %26 to i32
  %28 = or i32 %27, %25
  %29 = add i32 1, %28
  br label %35

30:                                               ; preds = %19, %1
  %value.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %value, i32 0, i32 0
  %value.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %value.baseAddress, i32 0, i32 0
  %31 = load i64, ptr %value.baseAddress._rawValue, align 8
  %32 = icmp ne i64 %31, 0
  %33 = sext i1 %32 to i32
  br label %35

34:                                               ; preds = %entry
  br label %35

35:                                               ; preds = %34, %30, %22
  %36 = phi i32 [ %33, %30 ], [ %29, %22 ], [ -1, %34 ]
  %37 = add i32 %36, 1
  ret i32 %37
}

; Function Attrs: nounwind
define internal void @"$s10BufferView09OutputRawA0Vwst"(ptr noalias %value, i32 %whichCase, i32 %numEmptyCases, ptr %OutputRawBuffer) #13 {
entry:
  %0 = getelementptr inbounds i8, ptr %value, i32 16
  %1 = icmp ugt i32 %numEmptyCases, 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %entry
  %3 = sub i32 %numEmptyCases, 1
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i32 [ 0, %entry ], [ 1, %2 ]
  %6 = icmp ule i32 %whichCase, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  br label %20

10:                                               ; preds = %7
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8 0, ptr %0, align 8
  br label %20

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i16 0, ptr %0, align 8
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq i32 %5, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  store i32 0, ptr %0, align 8
  br label %20

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %18, %15, %12, %9
  %21 = icmp eq i32 %whichCase, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  %23 = sub i32 %whichCase, 1
  %value.baseAddress = getelementptr inbounds %T10BufferView09OutputRawA0V, ptr %value, i32 0, i32 0
  %value.baseAddress._rawValue = getelementptr inbounds %TSv, ptr %value.baseAddress, i32 0, i32 0
  store i64 0, ptr %value.baseAddress._rawValue, align 8
  br label %50

24:                                               ; preds = %4
  %25 = sub i32 %whichCase, 1
  %26 = sub i32 %25, 1
  br i1 true, label %31, label %27

27:                                               ; preds = %24
  %28 = lshr i32 %26, 128
  %29 = add i32 1, %28
  %30 = and i32 poison, %26
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ 1, %24 ], [ %29, %27 ]
  %33 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %34 = zext i32 %33 to i128
  store i128 %34, ptr %value, align 8
  %35 = icmp eq i32 %5, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %49

37:                                               ; preds = %31
  %38 = icmp eq i32 %5, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = trunc i32 %32 to i8
  store i8 %40, ptr %0, align 8
  br label %49

41:                                               ; preds = %37
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = trunc i32 %32 to i16
  store i16 %44, ptr %0, align 8
  br label %49

45:                                               ; preds = %41
  %46 = icmp eq i32 %5, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  store i32 %32, ptr %0, align 8
  br label %49

48:                                               ; preds = %45
  unreachable

49:                                               ; preds = %47, %43, %39, %36
  br label %50

50:                                               ; preds = %49, %22, %20
  ret void
}

; Function Attrs: noinline nounwind readnone
define swiftcc %swift.metadata_response @"$s10BufferView09OutputRawA0VMa"(i64 %0) #3 {
entry:
  ret %swift.metadata_response { ptr getelementptr inbounds (<{ ptr, ptr, i64, ptr, i32, i32 }>, ptr @"$s10BufferView09OutputRawA0VMf", i32 0, i32 2), i64 0 }
}

declare swiftcc ptr @"$ss8_PointerP9_rawValueBpvgTj"(ptr noalias nocapture swiftself, ptr, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #11

; Function Attrs: noinline
declare swiftcc void @"$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #7

declare swiftcc i64 @"$sSR11baseAddressSPyxGSgvg"(i64, i64, ptr) #0

declare swiftcc %swift.metadata_response @"$sSRMa"(i64, ptr) #0

declare swiftcc ptr @"$sSv16initializeMemory2as4from5countSpyxGxm_SPyxGSitlF"(ptr, ptr, i64, ptr, ptr) #0

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #15

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #3 = { noinline nounwind readnone "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #4 = { nounwind readonly }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #7 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind readonly willreturn }
attributes #10 = { noinline nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #11 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { argmemonly nocallback nofree nounwind willreturn }
attributes #13 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #14 = { nounwind readonly "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
!17 = !{}
!18 = !{i64 96}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [1 x ptr] [ptr @__swift_reflection_version], section "llvm.metadata"

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%TSi = type <{ i64 }>
%Ts16IndexingIteratorVySnySiGG = type <{ %TSnySiG, %TSi }>
%TSnySiG = type <{ %TSi, %TSi }>
%TSa = type <{ %Ts12_ArrayBufferV }>
%Ts12_ArrayBufferV = type <{ %Ts14_BridgeStorageV }>
%Ts14_BridgeStorageV = type <{ ptr }>
%TSiSg = type <{ [8 x i8], [1 x i8] }>

@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [1 x ptr] [ptr @__swift_reflection_version], section "llvm.metadata"

define hidden swiftcc i64 @"$s10BufferView4testySiSaySiGF"(ptr %0) #0 {
entry:
  %a.debug = alloca ptr, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %a.debug, i8 0, i64 8, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySnySiGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 24, i1 false)
  %1 = alloca %TSa, align 8
  %2 = alloca %TSnySiG, align 8
  %3 = alloca %TSa, align 8
  %4 = alloca %TSnySiG, align 8
  %5 = alloca %TSiSg, align 8
  %i.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  %6 = alloca %TSi, align 8
  store ptr %0, ptr %a.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr %"$i$generator")
  call void @llvm.lifetime.start.p0(i64 8, ptr %1)
  %._buffer = getelementptr inbounds %TSa, ptr %1, i32 0, i32 0
  %._buffer._storage = getelementptr inbounds %Ts12_ArrayBufferV, ptr %._buffer, i32 0, i32 0
  %._buffer._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, ptr %._buffer._storage, i32 0, i32 0
  store ptr %0, ptr %._buffer._storage.rawValue, align 8
  %._buffer1 = getelementptr inbounds %TSa, ptr %1, i32 0, i32 0
  %._buffer1._storage = getelementptr inbounds %Ts12_ArrayBufferV, ptr %._buffer1, i32 0, i32 0
  %._buffer1._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, ptr %._buffer1._storage, i32 0, i32 0
  %7 = load ptr, ptr %._buffer1._storage.rawValue, align 8
  %8 = call ptr @swift_bridgeObjectRetain(ptr returned %7) #3
  call void @llvm.lifetime.start.p0(i64 16, ptr %2)
  call void @llvm.lifetime.start.p0(i64 8, ptr %3)
  %._buffer2 = getelementptr inbounds %TSa, ptr %3, i32 0, i32 0
  %._buffer2._storage = getelementptr inbounds %Ts12_ArrayBufferV, ptr %._buffer2, i32 0, i32 0
  %._buffer2._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, ptr %._buffer2._storage, i32 0, i32 0
  store ptr %7, ptr %._buffer2._storage.rawValue, align 8
  %._buffer3 = getelementptr inbounds %TSa, ptr %3, i32 0, i32 0
  %._buffer3._storage = getelementptr inbounds %Ts12_ArrayBufferV, ptr %._buffer3, i32 0, i32 0
  %._buffer3._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, ptr %._buffer3._storage, i32 0, i32 0
  %9 = load ptr, ptr %._buffer3._storage.rawValue, align 8
  %10 = call swiftcc { i64, i64 } @"$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySiG_Tg5"(ptr %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %.lowerBound = getelementptr inbounds %TSnySiG, ptr %2, i32 0, i32 0
  %.lowerBound._value = getelementptr inbounds %TSi, ptr %.lowerBound, i32 0, i32 0
  store i64 %11, ptr %.lowerBound._value, align 8
  %.upperBound = getelementptr inbounds %TSnySiG, ptr %2, i32 0, i32 1
  %.upperBound._value = getelementptr inbounds %TSi, ptr %.upperBound, i32 0, i32 0
  store i64 %12, ptr %.upperBound._value, align 8
  %13 = call ptr @"$sSaySiGWOh"(ptr %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr %3)
  %.lowerBound4 = getelementptr inbounds %TSnySiG, ptr %2, i32 0, i32 0
  %.lowerBound4._value = getelementptr inbounds %TSi, ptr %.lowerBound4, i32 0, i32 0
  %14 = load i64, ptr %.lowerBound4._value, align 8
  %.upperBound5 = getelementptr inbounds %TSnySiG, ptr %2, i32 0, i32 1
  %.upperBound5._value = getelementptr inbounds %TSi, ptr %.upperBound5, i32 0, i32 0
  %15 = load i64, ptr %.upperBound5._value, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %4)
  %.lowerBound6 = getelementptr inbounds %TSnySiG, ptr %4, i32 0, i32 0
  %.lowerBound6._value = getelementptr inbounds %TSi, ptr %.lowerBound6, i32 0, i32 0
  store i64 %14, ptr %.lowerBound6._value, align 8
  %.upperBound7 = getelementptr inbounds %TSnySiG, ptr %4, i32 0, i32 1
  %.upperBound7._value = getelementptr inbounds %TSi, ptr %.upperBound7, i32 0, i32 0
  store i64 %15, ptr %.upperBound7._value, align 8
  %.lowerBound8 = getelementptr inbounds %TSnySiG, ptr %4, i32 0, i32 0
  %.lowerBound8._value = getelementptr inbounds %TSi, ptr %.lowerBound8, i32 0, i32 0
  %16 = load i64, ptr %.lowerBound8._value, align 8
  %.upperBound9 = getelementptr inbounds %TSnySiG, ptr %4, i32 0, i32 1
  %.upperBound9._value = getelementptr inbounds %TSi, ptr %.upperBound9, i32 0, i32 0
  %17 = load i64, ptr %.upperBound9._value, align 8
  %18 = call swiftcc { i64, i64, i64 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSnySiG_Tg5"(i64 %16, i64 %17)
  %19 = extractvalue { i64, i64, i64 } %18, 0
  %20 = extractvalue { i64, i64, i64 } %18, 1
  %21 = extractvalue { i64, i64, i64 } %18, 2
  %"$i$generator._elements" = getelementptr inbounds %Ts16IndexingIteratorVySnySiGG, ptr %"$i$generator", i32 0, i32 0
  %"$i$generator._elements.lowerBound" = getelementptr inbounds %TSnySiG, ptr %"$i$generator._elements", i32 0, i32 0
  %"$i$generator._elements.lowerBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.lowerBound", i32 0, i32 0
  store i64 %19, ptr %"$i$generator._elements.lowerBound._value", align 8
  %"$i$generator._elements.upperBound" = getelementptr inbounds %TSnySiG, ptr %"$i$generator._elements", i32 0, i32 1
  %"$i$generator._elements.upperBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.upperBound", i32 0, i32 0
  store i64 %20, ptr %"$i$generator._elements.upperBound._value", align 8
  %"$i$generator._position" = getelementptr inbounds %Ts16IndexingIteratorVySnySiGG, ptr %"$i$generator", i32 0, i32 1
  %"$i$generator._position._value" = getelementptr inbounds %TSi, ptr %"$i$generator._position", i32 0, i32 0
  store i64 %21, ptr %"$i$generator._position._value", align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr %1)
  br label %22

22:                                               ; preds = %32, %entry
  call void @llvm.lifetime.start.p0(i64 9, ptr %5)
  %23 = call swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSnySiG_Tg5"(ptr nocapture swiftself dereferenceable(24) %"$i$generator")
  %24 = extractvalue { i64, i8 } %23, 0
  %25 = extractvalue { i64, i8 } %23, 1
  %26 = trunc i8 %25 to i1
  store i64 %24, ptr %5, align 8
  %27 = getelementptr inbounds %TSiSg, ptr %5, i32 0, i32 1
  store i1 %26, ptr %27, align 8
  %28 = load i64, ptr %5, align 8
  %29 = getelementptr inbounds %TSiSg, ptr %5, i32 0, i32 1
  %30 = load i1, ptr %29, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %5)
  br i1 %30, label %40, label %31

31:                                               ; preds = %22
  br label %32

32:                                               ; preds = %31
  %33 = phi i64 [ %28, %31 ]
  store i64 %33, ptr %i.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %6)
  %34 = call swiftcc i64 @"$sSayxSicigSi_Tg5"(i64 %33, ptr %0)
  %._value = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  store i64 %34, ptr %._value, align 8
  %._value11 = getelementptr inbounds %TSi, ptr %6, i32 0, i32 0
  %35 = load i64, ptr %._value11, align 8
  %sum._value12 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %36 = load i64, ptr %sum._value12, align 8
  %37 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %36, i64 %35)
  %38 = extractvalue { i64, i1 } %37, 0
  %39 = extractvalue { i64, i1 } %37, 1
  %sum._value13 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %38, ptr %sum._value13, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %6)
  br label %22

40:                                               ; preds = %22
  call void @llvm.lifetime.end.p0(i64 24, ptr %"$i$generator")
  %sum._value10 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %41 = load i64, ptr %sum._value10, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %41
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind
declare ptr @swift_bridgeObjectRetain(ptr returned) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare swiftcc { i64, i64 } @"$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySiG_Tg5"(ptr) #0

; Function Attrs: noinline nounwind
define linkonce_odr hidden ptr @"$sSaySiGWOh"(ptr %0) #5 {
entry:
  %._buffer = getelementptr inbounds %TSa, ptr %0, i32 0, i32 0
  %._buffer._storage = getelementptr inbounds %Ts12_ArrayBufferV, ptr %._buffer, i32 0, i32 0
  %._buffer._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, ptr %._buffer._storage, i32 0, i32 0
  %toDestroy = load ptr, ptr %._buffer._storage.rawValue, align 8
  call void @swift_bridgeObjectRelease(ptr %toDestroy) #3
  ret ptr %0
}

; Function Attrs: nounwind
declare void @swift_bridgeObjectRelease(ptr) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare swiftcc { i64, i64, i64 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSnySiG_Tg5"(i64, i64) #0

declare swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSnySiG_Tg5"(ptr nocapture swiftself dereferenceable(24)) #0

declare swiftcc i64 @"$sSayxSicigSi_Tg5"(i64, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nounwind }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noinline nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #6 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

%TSi = type <{ i64 }>
%Ts16IndexingIteratorVySNySiGG = type <{ %TSNySiG, %TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G }>
%TSNySiG = type <{ %TSi, %TSi }>
%TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G = type <{ [8 x i8], [1 x i8] }>
%TSiSg = type <{ [8 x i8], [1 x i8] }>

@".str.39.Range requires lowerBound <= upperBound" = private unnamed_addr constant [40 x i8] c"Range requires lowerBound <= upperBound\00"
@".str.23.Swift/ClosedRange.swift" = private unnamed_addr constant [24 x i8] c"Swift/ClosedRange.swift\00"
@".str.11.Fatal error" = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [1 x ptr] [ptr @__swift_reflection_version], section "llvm.metadata"

define hidden swiftcc i64 @"$s10BufferView4testyS2iF"(i64 %0) #0 {
entry:
  %n.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %n.debug, i8 0, i64 8, i1 false)
  %sum = alloca %TSi, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %sum, i8 0, i64 8, i1 false)
  %"$i$generator" = alloca %Ts16IndexingIteratorVySNySiGG, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %"$i$generator", i8 0, i64 25, i1 false)
  %1 = alloca %TSNySiG, align 8
  %2 = alloca %TSiSg, align 8
  %i.debug = alloca i64, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %i.debug, i8 0, i64 8, i1 false)
  store i64 %0, ptr %n.debug, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum)
  %sum._value = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 0, ptr %sum._value, align 8
  call void @llvm.lifetime.start.p0(i64 25, ptr %"$i$generator")
  %3 = icmp slt i64 %0, 0
  %4 = xor i1 %3, true
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 true)
  br i1 %5, label %7, label %6

6:                                                ; preds = %entry
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint (ptr @".str.11.Fatal error" to i64), i64 11, i8 2, i64 ptrtoint (ptr @".str.39.Range requires lowerBound <= upperBound" to i64), i64 39, i8 2, i64 ptrtoint (ptr @".str.23.Swift/ClosedRange.swift" to i64), i64 23, i8 2, i64 347, i32 1)
  unreachable

7:                                                ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr %1)
  %.lowerBound = getelementptr inbounds %TSNySiG, ptr %1, i32 0, i32 0
  %.lowerBound._value = getelementptr inbounds %TSi, ptr %.lowerBound, i32 0, i32 0
  store i64 0, ptr %.lowerBound._value, align 8
  %.upperBound = getelementptr inbounds %TSNySiG, ptr %1, i32 0, i32 1
  %.upperBound._value = getelementptr inbounds %TSi, ptr %.upperBound, i32 0, i32 0
  store i64 %0, ptr %.upperBound._value, align 8
  %.lowerBound1 = getelementptr inbounds %TSNySiG, ptr %1, i32 0, i32 0
  %.lowerBound1._value = getelementptr inbounds %TSi, ptr %.lowerBound1, i32 0, i32 0
  %8 = load i64, ptr %.lowerBound1._value, align 8
  %.upperBound2 = getelementptr inbounds %TSNySiG, ptr %1, i32 0, i32 1
  %.upperBound2._value = getelementptr inbounds %TSi, ptr %.upperBound2, i32 0, i32 0
  %9 = load i64, ptr %.upperBound2._value, align 8
  %10 = call swiftcc { i64, i64, i64, i8 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5"(i64 %8, i64 %9)
  %11 = extractvalue { i64, i64, i64, i8 } %10, 0
  %12 = extractvalue { i64, i64, i64, i8 } %10, 1
  %13 = extractvalue { i64, i64, i64, i8 } %10, 2
  %14 = extractvalue { i64, i64, i64, i8 } %10, 3
  %15 = trunc i8 %14 to i1
  %"$i$generator._elements" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 0
  %"$i$generator._elements.lowerBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 0
  %"$i$generator._elements.lowerBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.lowerBound", i32 0, i32 0
  store i64 %11, ptr %"$i$generator._elements.lowerBound._value", align 8
  %"$i$generator._elements.upperBound" = getelementptr inbounds %TSNySiG, ptr %"$i$generator._elements", i32 0, i32 1
  %"$i$generator._elements.upperBound._value" = getelementptr inbounds %TSi, ptr %"$i$generator._elements.upperBound", i32 0, i32 0
  store i64 %12, ptr %"$i$generator._elements.upperBound._value", align 8
  %"$i$generator._position" = getelementptr inbounds %Ts16IndexingIteratorVySNySiGG, ptr %"$i$generator", i32 0, i32 1
  store i64 %13, ptr %"$i$generator._position", align 8
  %16 = getelementptr inbounds %TSNsSxRzSZ6StrideRpzrlE5IndexOySi_G, ptr %"$i$generator._position", i32 0, i32 1
  store i1 %15, ptr %16, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr %1)
  br label %17

17:                                               ; preds = %27, %7
  call void @llvm.lifetime.start.p0(i64 9, ptr %2)
  %18 = call swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5"(ptr nocapture swiftself dereferenceable(25) %"$i$generator")
  %19 = extractvalue { i64, i8 } %18, 0
  %20 = extractvalue { i64, i8 } %18, 1
  %21 = trunc i8 %20 to i1
  store i64 %19, ptr %2, align 8
  %22 = getelementptr inbounds %TSiSg, ptr %2, i32 0, i32 1
  store i1 %21, ptr %22, align 8
  %23 = load i64, ptr %2, align 8
  %24 = getelementptr inbounds %TSiSg, ptr %2, i32 0, i32 1
  %25 = load i1, ptr %24, align 8
  call void @llvm.lifetime.end.p0(i64 9, ptr %2)
  br i1 %25, label %33, label %26

26:                                               ; preds = %17
  br label %27

27:                                               ; preds = %26
  %28 = phi i64 [ %23, %26 ]
  store i64 %28, ptr %i.debug, align 8
  %sum._value4 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %29 = load i64, ptr %sum._value4, align 8
  %30 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %29, i64 %28)
  %31 = extractvalue { i64, i1 } %30, 0
  %32 = extractvalue { i64, i1 } %30, 1
  %sum._value5 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  store i64 %31, ptr %sum._value5, align 8
  br label %17

33:                                               ; preds = %17
  call void @llvm.lifetime.end.p0(i64 25, ptr %"$i$generator")
  %sum._value3 = getelementptr inbounds %TSi, ptr %sum, i32 0, i32 0
  %34 = load i64, ptr %sum._value3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum)
  ret i64 %34
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

declare swiftcc { i64, i64, i64, i8 } @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5"(i64, i64) #0

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare swiftcc { i64, i8 } @"$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5"(ptr nocapture swiftself dereferenceable(25)) #0

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #1 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noinline "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.1a,+v8.2a,+v8.3a,+v8a,+zcm,+zcz" }
attributes #6 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10}
!swift.module.flags = !{!11}
!llvm.linker.options = !{!12, !13, !14, !15, !16}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84477696}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 1}
!10 = !{i32 1, !"Swift Version", i32 7}
!11 = !{!"standard-library", i1 false}
!12 = !{!"-lswiftSwiftOnoneSupport"}
!13 = !{!"-lswiftCore"}
!14 = !{!"-lswift_Concurrency"}
!15 = !{!"-lswift_StringProcessing"}
!16 = !{!"-lobjc"}
